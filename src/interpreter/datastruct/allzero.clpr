coinductionlimit(1).
unfolddepthbound(3).
solver(array).

declare_unification_type(allz, [arreq,eq,eq,arreq]).

unfold(allz(H,X,Y,H1),
       [
	body([], [eq(X,Y), arreq(H1,upd(H,X,0)), gt(X,0)]),
	body([allz(H,T,Y,H2)],
	     [arreq(H1,upd(H2,X,0)), eq(ref(H,plus(X,1)),T), gt(X,0)])
       ]).

% To Prove:
%
%        allz(H,P0,P,H1), P1=H1[P+1], P1!=null, H2=<H1,P1,0>
%        |= allz(H,P0,P1,H2)


run :-
	init_counters,
 	addunfoldlevel(0, [allz(H,P0,P,H1)],
		       UnfoldableGAtoms),
        addunfoldlevel(0, [allz(H,P0,P1,H2)],
 		       UnfoldableHAtoms),
	lprove(0, 0,
	       [], UnfoldableGAtoms,
	       [eq(P1,ref(H1,plus(P,1))), gt(P1,0), arreq(H2,upd(H1,P1,0))],
	       [], UnfoldableHAtoms, [], []),
	printf("PROOF FAILED.\n", []).
run :-
	printf("Proof succeed\n", []),
	show_counters.


:- consult('recursive.clpr').

