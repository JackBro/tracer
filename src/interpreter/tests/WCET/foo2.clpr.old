trans(func_foo, 1,
	[0],[H],[],[SH],[],[],[ReturnValue,N,I,Sum,Product],[],[SReturnValue,SN,SI,SSum,SProduct],
	[1],[H],[],[SH],[],[],[ReturnValue,N,INext,Sum,Product],[],[SReturnValue,SN,SINext,SSum,SProduct],
	[assign(SINext,1)],
	[],
	[],
	not_branch) :-
	INext=1.
trans(func_foo, 2,
	[1],[H],[],[SH],[],[],[ReturnValue,N,I,Sum,Product],[],[SReturnValue,SN,SI,SSum,SProduct],
	[2],[H],[],[SH],[],[],[ReturnValue,N,I,SumNext,Product],[],[SReturnValue,SN,SI,SSumNext,SProduct],
	[assign(SSumNext,0)],
	[],
	[],
	not_branch) :-
	SumNext=0.
trans(func_foo, 3,
	[2],[H],[],[SH],[],[],[ReturnValue,N,I,Sum,Product],[],[SReturnValue,SN,SI,SSum,SProduct],
	[3],[H],[],[SH],[],[],[ReturnValue,N,I,Sum,ProductNext],[],[SReturnValue,SN,SI,SSum,SProductNext],
	[assign(SProductNext,1)],
	[],
	[],
	not_branch) :-
	ProductNext=1.
trans(func_foo, 4,
	[4],[H],[],[SH],[],[],[ReturnValue,N,I,Sum,Product],[],[SReturnValue,SN,SI,SSum,SProduct],
	[5],[H],[],[SH],[],[],[ReturnValue,N,I,SumNext,Product],[],[SReturnValue,SN,SI,SSumNext,SProduct],
	[assign(SSumNext,plus(SSum,SI))],
	[],
	[],
	not_branch) :-
	SumNext=Sum+I.
trans(func_foo, 5,
	[5],[H],[],[SH],[],[],[ReturnValue,N,I,Sum,Product],[],[SReturnValue,SN,SI,SSum,SProduct],
	[6],[H],[],[SH],[],[],[ReturnValue,N,I,Sum,ProductNext],[],[SReturnValue,SN,SI,SSum,SProductNext],
	[assign(SProductNext,mult(SProduct,SI))],
	[],
	[],
	not_branch) :-
	ProductNext=Product*I.
trans(func_foo, 6,
	[6],[H],[],[SH],[],[],[ReturnValue,N,I,Sum,Product],[],[SReturnValue,SN,SI,SSum,SProduct],
	[7],[H],[],[SH],[],[],[ReturnValue,N,INext,Sum,Product],[],[SReturnValue,SN,SINext,SSum,SProduct],
	[assign(SINext,plus(SI,1))],
	[],
	[],
	not_branch) :-
	INext=I+1.
trans(func_foo, 7,
	[3],[H],[],[SH],[],[],[ReturnValue,N,I,Sum,Product],[],[SReturnValue,SN,SI,SSum,SProduct],
	[4],[H],[],[SH],[],[],[ReturnValue,N,I,Sum,Product],[],[SReturnValue,SN,SI,SSum,SProduct],
	[geq(SN,SI)],
	[],
	[],
	branch) :-
	I<=N.
trans(func_foo, 8,
	[3],[H],[],[SH],[],[],[ReturnValue,N,I,Sum,Product],[],[SReturnValue,SN,SI,SSum,SProduct],
	[7],[H],[],[SH],[],[],[ReturnValue,N,I,Sum,Product],[],[SReturnValue,SN,SI,SSum,SProduct],
	[gt(SI,SN)],
	[],
	[],
	branch) :-
	I>N.
trans(func_foo, 9,
	[7],[H],[],[SH],[],[],[ReturnValue,N,I,Sum,Product],[],[SReturnValue,SN,SI,SSum,SProduct],
	[8],[H],[],[SH],[],[],[ReturnValueNext,N,I,Sum,Product],[],[SReturnValueNext,SN,SI,SSum,SProduct],
	[assign(SReturnValueNext,SSum)],
	[],
	[],
	not_branch) :-
	ReturnValueNext=Sum.
trans(func_main, 10,
	[0],[H],[],[SH],[],[],[ReturnValue,X,Y,Z],[],[SReturnValue,SX,SY,SZ],
	[1],[H],[],[SH],[],[],[ReturnValue,XNext,Y,Z],[],[SReturnValue,SXNext,SY,SZ],
	[],
	[],
	[],
	not_branch).
trans(func_main, 11,
	[1],[H],[],[SH],[],[],[ReturnValue,X,Y,Z],[],[SReturnValue,SX,SY,SZ],
	[2],[H],[],[SH],[],[],[ReturnValue,X,YNext,Z],[],[SReturnValue,SX,SYNext,SZ],
	[],
	[],
	[],
	not_branch).
trans(func_main, 12,
	[2],[H],[],[SH],[],[],[ReturnValue,X,Y,Z],[],[SReturnValue,SX,SY,SZ],
	[3],[H],[],[SH],[],[],[ReturnValue,X,Y,ZNext],[],[SReturnValue,SX,SY,SZNext],
	[],
	[],
	[],
	not_branch).
trans(func_main, 13,
	[4],[H],[],[SH],[],[],[ReturnValue,X,Y,Z],[],[SReturnValue,SX,SY,SZ],
	[5],[H],[],[SH],[],[],[ReturnValue,X,YNext,Z],[],[SReturnValue,SX,SYNext,SZ],
	[assign(SYNext,plus(SY,1))],
	[],
	[],
	not_branch) :-
	YNext=Y+1.
trans(func_main, 14,
	[6],[H],[],[SH],[],[],[ReturnValue,X,Y,Z],[],[SReturnValue,SX,SY,SZ],
	[7],[H],[],[SH],[],[],[ReturnValue,X,YNext,Z],[],[SReturnValue,SX,SYNext,SZ],
	[assign(SYNext,minus(SRV0,1))],
	[call(func_foo,[RV0,Y|_],[SRV0,_V1|_],[assign(_V1,SY)])],
	[],
	not_branch) :-
	YNext=RV0-1.
trans(func_main, 15,
	[7],[H],[],[SH],[],[],[ReturnValue,X,Y,Z],[],[SReturnValue,SX,SY,SZ],
	[8],[H],[],[SH],[],[],[ReturnValue,X,YNext,Z],[],[SReturnValue,SX,SYNext,SZ],
	[assign(SYNext,plus(SRV2,5))],
	[call(func_foo,[RV2,5|_],[SRV2,_V2|_],[assign(_V2,5)])],
	[],
	not_branch) :-
	YNext=RV2+5.
trans(func_main, 16,
	[5],[H],[],[SH],[],[],[ReturnValue,X,Y,Z],[],[SReturnValue,SX,SY,SZ],
	[8],[H],[],[SH],[],[],[ReturnValue,X,Y,Z],[],[SReturnValue,SX,SY,SZ],
	[],
	[],
	[],
	not_branch).
trans(func_main, 17,
	[3],[H],[],[SH],[],[],[ReturnValue,X,Y,Z],[],[SReturnValue,SX,SY,SZ],
	[4],[H],[],[SH],[],[],[ReturnValue,X,Y,Z],[],[SReturnValue,SX,SY,SZ],
	[gt(SY,0)],
	[],
	[],
	branch) :-
	Y>0.
trans(func_main, 18,
	[3],[H],[],[SH],[],[],[ReturnValue,X,Y,Z],[],[SReturnValue,SX,SY,SZ],
	[6],[H],[],[SH],[],[],[ReturnValue,X,Y,Z],[],[SReturnValue,SX,SY,SZ],
	[geq(0,SY)],
	[],
	[],
	branch) :-
	Y<=0.
trans(func_main, 19,
	[8],[H],[],[SH],[],[],[ReturnValue,X,Y,Z],[],[SReturnValue,SX,SY,SZ],
	[9],[H],[],[SH],[],[],[ReturnValue,X,Y,ZNext],[],[SReturnValue,SX,SY,SZNext],
	[assign(SZNext,SX)],
	[],
	[],
	not_branch) :-
	ZNext=X.
trans(func_main, 20,
	[9],[H],[],[SH],[],[],[ReturnValue,X,Y,Z],[],[SReturnValue,SX,SY,SZ],
	[10],[H],[],[SH],[],[],[ReturnValueNext,X,Y,Z],[],[SReturnValueNext,SX,SY,SZ],
	[assign(SReturnValueNext,SZ)],
	[],
	[],
	not_branch) :-
	ReturnValueNext=Z.
%--------------------------------------------------
%--------------------------------------------------
start(func_foo, [0]).
start(func_main, [0]).
%--------------------------------------------------
bottom(func_foo, [8]).
bottom(func_main, [10]).
%--------------------------------------------------
freshlocalarrays(func_foo,[]).
freshlocalarrays(func_main,[]).
%--------------------------------------------------
freshlocalvars(func_foo,[_,_,_,_,_]).
freshlocalvars(func_main,[_,_,_,_]).
%--------------------------------------------------
init_goal(func_main, [0], 1, [_],[],[_],[],A,L,SA,SL,[]) :-
	freshlocalarrays(func_main, A), freshlocalvars(func_main, L),
	freshlocalarrays(func_main, SA), freshlocalvars(func_main, SL).
