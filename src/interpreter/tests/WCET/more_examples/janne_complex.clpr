trans(func_complex,
	[0],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[2],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[gt(30,SA)],
	[],
	[]) :-
	A<30.
trans(func_complex,
	[2],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[4],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[gt(SA,SB)],
	[],
	[]) :-
	B<A.
trans(func_complex,
	[5],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[6],[H],[],[SH],[],[],[ReturnValue,A,BNext],[],[SReturnValue,SA,SBNext],
	[eq(SBNext,mult(SB,3))],
	[],
	[]) :-
	BNext=B*3.
trans(func_complex,
	[7],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[8],[H],[],[SH],[],[],[ReturnValue,A,BNext],[],[SReturnValue,SA,SBNext],
	[eq(SBNext,plus(SB,2))],
	[],
	[]) :-
	BNext=B+2.
trans(func_complex,
	[6],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[8],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[],
	[],
	[]).
trans(func_complex,
	[4],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[5],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[gt(SB,5)],
	[],
	[]) :-
	B>5.
trans(func_complex,
	[4],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[7],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[geq(5,SB)],
	[],
	[]) :-
	B<=5.
trans(func_complex,
	[9],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[10],[H],[],[SH],[],[],[ReturnValue,ANext,B],[],[SReturnValue,SANext,SB],
	[eq(SANext,plus(SA,10))],
	[],
	[]) :-
	ANext=A+10.
trans(func_complex,
	[11],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[12],[H],[],[SH],[],[],[ReturnValue,ANext,B],[],[SReturnValue,SANext,SB],
	[eq(SANext,plus(SA,1))],
	[],
	[]) :-
	ANext=A+1.
trans(func_complex,
	[10],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[12],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[],
	[],
	[]).
trans(func_complex,
	[8],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[9],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[geq(SB,10),geq(12,SB)],
	[],
	[]) :-
	B>=10,B<=12.
trans(func_complex,
	[8],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[11],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[gt(10,SB)],
	[],
	[]) :-
	B<10.
trans(func_complex,
	[8],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[11],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[gt(SB,12)],
	[],
	[]) :-
	B>12.
trans(func_complex,
	[2],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[3],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[geq(SB,SA)],
	[],
	[]) :-
	B>=A.
trans(func_complex,
	[12],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[2],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[],
	[],
	[]).
trans(func_complex,
	[3],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[13],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[],
	[],
	[]).
trans(func_complex,
	[13],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[14],[H],[],[SH],[],[],[ReturnValue,ANext,B],[],[SReturnValue,SANext,SB],
	[eq(SANext,plus(SA,2))],
	[],
	[]) :-
	ANext=A+2.
trans(func_complex,
	[14],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[15],[H],[],[SH],[],[],[ReturnValue,A,BNext],[],[SReturnValue,SA,SBNext],
	[eq(SBNext,minus(SB,10))],
	[],
	[]) :-
	BNext=B-10.
trans(func_complex,
	[0],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[1],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[geq(SA,30)],
	[],
	[]) :-
	A>=30.
trans(func_complex,
	[15],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[0],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[],
	[],
	[]).
trans(func_complex,
	[1],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[16],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[],
	[],
	[]).
trans(func_complex,
	[16],[H],[],[SH],[],[],[ReturnValue,A,B],[],[SReturnValue,SA,SB],
	[17],[H],[],[SH],[],[],[ReturnValueNext,A,B],[],[SReturnValueNext,SA,SB],
	[eq(SReturnValueNext,1)],
	[],
	[]) :-
	ReturnValueNext=1.
trans(func_main,
	[0],[H],[],[SH],[],[],[ReturnValue,A,B,Answer],[],[SReturnValue,SA,SB,SAnswer],
	[1],[H],[],[SH],[],[],[ReturnValue,ANext,B,Answer],[],[SReturnValue,SANext,SB,SAnswer],
	[eq(SANext,1)],
	[],
	[]) :-
	ANext=1.
trans(func_main,
	[1],[H],[],[SH],[],[],[ReturnValue,A,B,Answer],[],[SReturnValue,SA,SB,SAnswer],
	[2],[H],[],[SH],[],[],[ReturnValue,A,BNext,Answer],[],[SReturnValue,SA,SBNext,SAnswer],
	[eq(SBNext,1)],
	[],
	[]) :-
	BNext=1.
trans(func_main,
	[2],[H],[],[SH],[],[],[ReturnValue,A,B,Answer],[],[SReturnValue,SA,SB,SAnswer],
	[3],[H],[],[SH],[],[],[ReturnValue,A,B,AnswerNext],[],[SReturnValue,SA,SB,SAnswerNext],
	[eq(SAnswerNext,0)],
	[],
	[]) :-
	AnswerNext=0.
trans(func_main,
	[3],[H],[],[SH],[],[],[ReturnValue,A,B,Answer],[],[SReturnValue,SA,SB,SAnswer],
	[4],[H],[],[SH],[],[],[ReturnValue,A,B,AnswerNext],[],[SReturnValue,SA,SB,SAnswerNext],
	[eq(SAnswerNext,SRV0)],
	[call(func_complex,[RV0,A,B|_],[SRV0,_V1,_V2|_],[eq(_V1,SA),eq(_V2,SB)])],
	[]) :-
	AnswerNext=RV0.
trans(func_main,
	[4],[H],[],[SH],[],[],[ReturnValue,A,B,Answer],[],[SReturnValue,SA,SB,SAnswer],
	[5],[H],[],[SH],[],[],[ReturnValueNext,A,B,Answer],[],[SReturnValueNext,SA,SB,SAnswer],
	[eq(SReturnValueNext,SAnswer)],
	[],
	[]) :-
	ReturnValueNext=Answer.
%--------------------------------------------------
loop(func_complex, [2],[3], _, [n],[],[],[n,u,u]).
loop(func_complex, [0],[1], _, [n],[],[],[n,u,u]).
%--------------------------------------------------
start(func_complex, [0]).
start(func_main, [0]).
%--------------------------------------------------
bottom(func_complex, [17]).
bottom(func_main, [5]).
%--------------------------------------------------
freshlocalarrays(func_complex,[]).
freshlocalarrays(func_main,[]).
%--------------------------------------------------
freshlocalvars(func_complex,[_,_,_]).
freshlocalvars(func_main,[_,_,_,_]).
%--------------------------------------------------
init_goal(func_main, [0], [_],[],[_],[],A,L,SA,SL,[]) :-
	freshlocalarrays(func_main, A), freshlocalvars(func_main, L),
	freshlocalarrays(func_main, SA), freshlocalvars(func_main, SL).

:- consult('../src/clpr/wcetmulti.clpr').