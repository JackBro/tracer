 [&(FlAllocateIoBuffer.maxDmaAddress.QuadPart), &(FlAllocateIoBuffer.maxDmaAddress)]
 [ret$IoGetConfigurationInformation, IoGetConfigurationInformation.tmp, malloc5]
 [IoQueryDeviceDescription.CalloutRoutine, &(FlConfigCallBack)]
 [&(FlConfigCallBack.fDeviceData->ReadWriteGapLength), &(((ptr(typedef(UCHAR)))FlConfigCallBack.PeripheralInformation[1])[FlConfigCallBack.PeripheralInformation[1]->DataOffset]), &(FlConfigCallBack.peripheralData->PartialResourceList), &(FlConfigCallBack.fDeviceData->MotorSettleTime), &(FlConfigCallBack.partial[1]), FlConfigCallBack.partial, &(FlConfigCallBack.fDeviceData->SectorLengthCode), &(FlConfigCallBack.fDeviceData->StepRateHeadUnloadTime), &(FlConfigCallBack.fDeviceData->Version), &(FlConfigCallBack.fDeviceData->FormatGapLength), &(FlConfigCallBack.fDeviceData->MaxDensity), &(FlConfigCallBack.PeripheralInformation[1]->DataLength), &(FlConfigCallBack.peripheralData->PartialResourceList.Count), FlConfigCallBack.peripheralData, &(FlConfigCallBack.fDeviceData->FormatFillCharacter), &(FlConfigCallBack.fDeviceData->SectorPerTrack), ((ptr(typedef(UCHAR)))FlConfigCallBack.PeripheralInformation[1]), FlConfigCallBack.PeripheralInformation[1], FlConfigCallBack.fDeviceData, &(FlConfigCallBack.PeripheralInformation[1][FlConfigCallBack.PeripheralInformation[1]->DataLength]), &(FlConfigCallBack.fDeviceData->HeadLoadTime), &(FlConfigCallBack.peripheralData->PartialResourceList.PartialDescriptors), &(FlConfigCallBack.fDeviceData->DataTransferLength), &(FlConfigCallBack.partial->Type), &(FlConfigCallBack.fDeviceData->MaximumTrackValue), &(FlConfigCallBack.PeripheralInformation[1]->DataOffset), &(FlConfigCallBack.fDeviceData->HeadSettleTime), &(&(FlConfigCallBack.peripheralData->PartialResourceList.PartialDescriptors)[FlConfigCallBack.i]), &(FlConfigCallBack.fDeviceData->MotorOffTime)]
 [RtlQueryRegistryValues.Path, "\\\000R\000e\000g\000i\000s\000t\000r\000y\000\\\000M\000a\000c\000h\000i\000n\000e\000\\\000S\000y\000s\000t\000e\000m\000\\\000D\000I\000S\000K\000"]
 [IoQueryDeviceDescription.PeripheralType, &(FloppyStartDevice.Fp)]
 [&(GLOBAL.Result_Status3_PTOS.ST3_PTOS), &(GLOBAL.Result_Status3_PTOS)]
 [RtlInitString.DestinationString, RtlAnsiStringToUnicodeString.SourceString, &(FloppyAddDevice.arcNameString)]
 [&(FlConsolidateMediaTypeWithBootSector.BootSector->SectorsPerTrack), &(&(FlConsolidateMediaTypeWithBootSector.BootSector->SectorsPerTrack)[1]), ((ptr(void))&(FlConsolidateMediaTypeWithBootSector.BootSector->OemData)), &(FlConsolidateMediaTypeWithBootSector.BootSector->OemData), FlReadWrite.userBuffer, ((ptr(struct(_BOOT_SECTOR_INFO)))FlReadWrite.userBuffer), &(FlConsolidateMediaTypeWithBootSector.BootSector->MediaByte), &(FlConsolidateMediaTypeWithBootSector.BootSector->BytesPerSector), &(&(FlConsolidateMediaTypeWithBootSector.BootSector->BytesPerSector)[1]), FlConsolidateMediaTypeWithBootSector.BootSector, &(FlConsolidateMediaTypeWithBootSector.BootSector->NumberOfHeads), &(&(FlConsolidateMediaTypeWithBootSector.BootSector->NumberOfHeads)[1]), RtlCompareMemory.Source1, &(FlConsolidateMediaTypeWithBootSector.BootSector->NumberOfSectors), &(&(FlConsolidateMediaTypeWithBootSector.BootSector->NumberOfSectors)[1]), &(FlConsolidateMediaTypeWithBootSector.BootSector->JumpByte)]
 [IoBuildDeviceIoControlRequest.IoStatusBlock, &(FlFdcDeviceIo.ioStatus)]
 [((ptr(typedef(WCHAR)))&(FloppyAddDevice.deviceNameBuffer)), RtlInitUnicodeString.SourceString, &(FloppyAddDevice.deviceNameBuffer)]
 [FlConsolidateMediaTypeWithBootSector.BootSector->JumpByte, FlConsolidateMediaTypeWithBootSector.BootSector->SectorsPerTrack, &(FlConsolidateMediaTypeWithBootSector.BootSector->SectorsPerTrack)[1], FlConsolidateMediaTypeWithBootSector.BootSector->BytesPerSector, &(FlConsolidateMediaTypeWithBootSector.BootSector->BytesPerSector)[1], FlConsolidateMediaTypeWithBootSector.BootSector->NumberOfHeads, &(FlConsolidateMediaTypeWithBootSector.BootSector->NumberOfHeads)[1], &(FlConsolidateMediaTypeWithBootSector.BootSector->NumberOfSectors)[1], FlConsolidateMediaTypeWithBootSector.BootSector->NumberOfSectors, FlConsolidateMediaTypeWithBootSector.BootSector->MediaByte]
 [&(FloppyThread.queueWait.QuadPart), KeWaitForSingleObject.Timeout, &(FloppyThread.queueWait)]
 [&(FloppyCancelQueuedRequest.DeviceObject->DeviceExtension), FloppyCancelQueuedRequest.DeviceObject]
 [FlConfigCallBack.biosDriveMediaConstants->StepRateHeadUnloadTime, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MotorOffTime), GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MotorSettleTimeRead, FlReadWriteTrack.driveMediaConstants, FlAcpiConfigureFloppy.biosDriveMediaConstants->MotorOffTime, (FloppyDeviceControl.Irp->IoStatus.Information + ((typedef(ULONG_PTR))size(typedef(DISK_GEOMETRY)))), PsCreateSystemThread.StartContext, FlStartDrive.DisketteExtension->DriveMediaConstants.MotorSettleTimeRead, FloppyThread.irp->IoStatus.Information, GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].HeadSettleTime, FlRecalibrateDrive.DisketteExtension->DeviceUnit, FlFormat.DisketteExtension->DriveMediaConstants.MotorSettleTimeWrite, FlFormat.DisketteExtension->DriveMediaConstants.FormatGapLength, ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.FormatFillCharacter), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.FormatFillCharacter, ((int)((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.MotorSettleTime)), ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.MotorSettleTime), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.MotorSettleTime, &(FlFormat.driveMediaConstants->FormatGapLength), &(FlStartDrive.DisketteExtension->FifoBuffer)[1], FlStartDrive.DisketteExtension->FifoBuffer, &(FlFormat.fdcDiskChangeParms.DriveStatus), &(FlStartDrive.DisketteExtension->FifoBuffer)[2], FloppyDeviceControl.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, FlStartDrive.fdcDiskChangeParms.DriveStatus, &(FloppyDeviceControl.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation[1]), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].SkewDelta), &(FlConsolidateMediaTypeWithBootSector.readidDriveMediaConstants->MediaType), FloppyPower.irpSp->Parameters.Power.State, &(FloppyPnp.nextIrpSp->Control), FloppyStartDevice.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, (FloppyStartDevice.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation - 1), ((ptr(void))FloppyPnp.disketteExtension->FloppyThread), FloppyPnp.disketteExtension->FloppyThread, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].BytesPerSector), ExAllocatePoolWithTag.x, FlStartDrive.DisketteExtension->BiosDriveMediaConstants.DataLength, FloppyThread.disketteExtension->ReleaseFdcWithMotorRunning, FloppyThread.disketteExtension->DriveMediaConstants.NumberOfHeads, ((unsigned long)FloppyThread.disketteExtension->DriveMediaConstants.NumberOfHeads), IoQueryDeviceDescription.BusType, IoCreateDevice.DeviceName, &(FloppyReadWrite.disketteExtension->IsStarted), (FlReadWrite.lastSector - FlReadWrite.currentSector), ((unsigned char)(FlReadWrite.lastSector - FlReadWrite.currentSector)), FloppyThread.disketteExtension->DeviceObject, FloppyThread.disketteExtension->DeviceObject->Flags, &(FloppyCancelQueuedRequest.EEX_Flink->Blink), ((unsigned char)FloppyStartDevice.fdcInfo.UnitNumber), FloppyStartDevice.fdcInfo.UnitNumber, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].NumberOfHeads), &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MediaType), FlConfigCallBack.biosDriveMediaConstants->NumberOfHeads, (size(typedef(USHORT)) + ((unsigned int)FloppyDeviceControl.mountName->NameLength)), ((unsigned long)(size(typedef(USHORT)) + ((unsigned int)FloppyDeviceControl.mountName->NameLength))), &(GLOBAL.DriveMediaConstants->FormatFillCharacter), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].FormatFillCharacter), &(FlStartDrive.DisketteExtension->DeviceObject), IoReleaseCancelSpinLock.Irql, FloppyCancelQueuedRequest.Irp->IoStatus.__annonCompField4.Status, &(FlReadWrite.irpSp->Parameters.Read.ByteOffset.__annonCompField1.LowPart), &(FlDetermineMediaType.DisketteExtension->DriveType), &(FlReadWrite.irpSp->Parameters.Read), FlStartDrive.DisketteExtension->DriveMediaConstants.SectorLengthCode, &(FloppyAddDevice.disketteExtension->HoldNewRequests), &(FloppyDeviceControl.driveLetterName.MaximumLength), FloppyAddDevice.deviceObject->DeviceExtension, ((ptr(typedef(DISKETTE_EXTENSION)))FloppyAddDevice.deviceObject->DeviceExtension), &(FlReadWriteTrack.DisketteExtension->DeviceUnit), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->ReadWriteGapLength), &(FloppyPnp.disketteExtension->FloppyThread), FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MotorOffTime, FlCheckFormatParameters.FormatParameters->MediaType, &(FlStartDrive.DisketteExtension->FifoBuffer), FlStartDrive.DisketteExtension->DriveMediaConstants.MaximumTrack, &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.BytesPerSector), &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MotorSettleTimeRead), &(&(FlStartDrive.DisketteExtension->FifoBuffer)[1]), &(&(FlStartDrive.DisketteExtension->FifoBuffer)[2]), &(FlStartDrive.DisketteExtension->DeviceObject->Vpb), &(FloppyReadWrite.disketteExtension->MediaType), &(FlAllocateIoBuffer.DisketteExtension->MaxTransferSize), FlDatarateSpecifyConfigure.DisketteExtension->ControllerConfigurable, &(FloppyDeviceControl.outputBuffer->Cylinders.__annonCompField1.HighPart), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->MotorSettleTimeWrite), &(FlFormat.DisketteExtension->DriveMediaConstants.MotorSettleTimeWrite), &(FloppyPower.irpSp->Parameters.Power), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MaximumTrack), &(FloppyThread.disketteExtension->DeviceUnit), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].CylinderShift, &(FlHdbit.setHdBitParameter.DeviceUnit), GLOBAL.DriveMediaConstants->FormatFillCharacter, FloppyDeviceControl.uniqueId, &(FlStartDrive.DisketteExtension->MediaType), IoQueryDeviceDescription.ControllerNumber, &(FlReadWrite.irpSp->Flags), (((int)FlDetermineMediaType.ddriveMediaConstants->NumberOfHeads) - 1), ((int)FlDetermineMediaType.ddriveMediaConstants->NumberOfHeads), FlDetermineMediaType.ddriveMediaConstants->NumberOfHeads, FlAcpiConfigureFloppy.biosDriveMediaConstants->StepRateHeadUnloadTime, FloppyDeviceControl.disketteExtension, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].NumberOfHeads), &(FloppyStartDevice.fdcInfo.AcpiFdiSupported), FlFormat.DisketteExtension->DeviceUnit, ((int)FlFormat.DisketteExtension->DeviceUnit), GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MotorOffTime, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].DataTransferRate), &(FlDetermineMediaType.ddriveMediaConstants->NumberOfHeads), IoDetachDevice.TargetDevice, ((ptr(void))FloppyStartDevice.nextIrpSp), FloppyStartDevice.nextIrpSp, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].SkewDelta, DriverEntry.tmp, ((ptr(struct(_FAST_MUTEX)))DriverEntry.tmp), &(FloppyDeviceControl.outputBuffer[1]), FloppyDeviceControl.outputBuffer, FloppyAddDevice.disketteExtension->UnderlyingPDO, FlFormat.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, &(FlReadWriteTrack.DisketteExtension->FifoBuffer)[3], &(FlReadWriteTrack.DisketteExtension->FifoBuffer)[4], &(FlReadWriteTrack.DisketteExtension->FifoBuffer)[1], &(FloppyDeviceControl.irpSp->Parameters.DeviceIoControl), &(FlReadWriteTrack.DisketteExtension->FifoBuffer)[2], FlReadWriteTrack.DisketteExtension->FifoBuffer, FloppyReadWrite.irpSp, &(FlReadWriteTrack.DisketteExtension->FifoBuffer)[7], &(FlReadWriteTrack.DisketteExtension->FifoBuffer)[8], &(FlReadWriteTrack.DisketteExtension->FifoBuffer)[5], FlIssueCommand.DisketteExtension->HardwareFailed, &(FlReadWriteTrack.DisketteExtension->FifoBuffer)[6], ((int)FloppyPnp.Irp->CurrentLocation), FloppyPnp.Irp->CurrentLocation, ((typedef(CHAR))(((int)FloppyPnp.Irp->CurrentLocation) + 1)), (((int)FloppyPnp.Irp->CurrentLocation) + 1), GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType, IoBuildAsynchronousFsdRequest.Buffer, FlQueueIrpToThread.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].StepRateHeadUnloadTime, RtlInitUnicodeString.DestinationString, FlCheckFormatParameters.ddriveMediaConstants, &(FloppyThread.disketteExtension->DeviceObject->Flags), FlStartDrive.DisketteExtension->MediaType, IoRegisterDeviceInterface.SymbolicLinkName, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].SkewDelta), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].DataTransferRate, GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].NumberOfHeads, FlCheckBootSector.DisketteExtension->DeviceObject, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].FormatFillCharacter, &(FlStartDrive.fdcEnableParms.DriveOnValue), (FlCheckBootSector.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation - 1), FloppyStartDevice.irpSp->CompletionRoutine, FlCheckBootSector.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, FlFormat.DisketteExtension->IoBuffer, &(FloppyStartDevice.fdcInfo.BusNumber), FloppyPnp.disketteExtension->TargetObject, &(FlReadWrite.driveMediaConstants->SectorLengthCode), &(FlStartDrive.DisketteExtension->DriveMediaConstants.StepRateHeadUnloadTime), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].HeadSettleTime), &(FlQueueIrpToThread.DisketteExtension->FloppyThread), &(FloppyDeviceControl.disketteExtension->DeviceName), GLOBAL.DriveMediaLimits[FlDetermineMediaType.DisketteExtension->DriveType].LowestDriveMediaType, &(FloppyPnp.irpSp->MinorFunction), IoQueryDeviceDescription.PeripheralNumber, &(FloppyAddDevice.disketteExtension->DeviceName.Buffer), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].SectorLengthCode), FlStartDrive.DisketteExtension->DriveMediaConstants.BytesPerSector, &(FloppyThread.outputBuffer->Cylinders.__annonCompField1.LowPart), FlStartDrive.DisketteExtension->DriveMediaConstants.CylinderShift, FlConsolidateMediaTypeWithBootSector.readidDriveMediaConstants->NumberOfHeads, FlHdbit.setHdBitParameter.Media144MB, &(FlAcpiConfigureFloppy.biosDriveMediaConstants->MotorOffTime), &(FloppyDeviceControl.mountName->Name), ((ptr(void))&(FloppyDeviceControl.mountName->Name)), &(FloppyReadWrite.disketteExtension->BytesPerSector), FloppyDeviceControl.mountName->NameLength, ((unsigned int)FloppyDeviceControl.mountName->NameLength), FlFormat.badTrackBufferLength, &(FlQueueIrpToThread.DisketteExtension->PoweringDown), &(GLOBAL.DriveMediaLimits[FlDetermineMediaType.DisketteExtension->DriveType].HighestDriveMediaType), &(FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveMediaConstants), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.MotorSettleTime), &(FloppyThread.disketteExtension->DriveMediaConstants), FlAcpiConfigureFloppy.biosDriveMediaConstants->MotorSettleTimeWrite, &(FlStartDrive.DisketteExtension->DriveMediaConstants), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].SkewDelta, &(FloppyReadWrite.irpSp->Parameters.Read.ByteOffset.__annonCompField1), FlStartDrive.DisketteExtension->DriveMediaConstants.NumberOfHeads, &(GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType]), &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].FormatGapLength), &(FloppyReadWrite.irpSp->Parameters), &(FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveMediaType), FlFormat.DisketteExtension->MediaType, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MotorOffTime), &(GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].SectorsPerTrack), ((typedef(CHAR))(((int)FlDetermineMediaType.irp->CurrentLocation) - 1)), (((int)FlDetermineMediaType.irp->CurrentLocation) - 1), IoBuildDeviceIoControlRequest.DeviceObject, ((int)FlDetermineMediaType.irp->CurrentLocation), FlDetermineMediaType.irp->CurrentLocation, GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].ReadWriteGapLength, &(FloppyPnp.irpSp->Context), FlConfigCallBack.biosDriveMediaConstants->MotorSettleTimeRead, FloppyDeviceControl.highestDriveMediaType, &(FlStartDrive.DisketteExtension->DriveMediaConstants.DataLength), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.FormatGapLength), FloppyAddDevice.disketteExtension->IsRemoved, &(FloppyAddDevice.disketteExtension->UnderlyingPDO), GLOBAL.DriveMediaConstants, GLOBAL.DriveMediaConstants->FormatGapLength, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].DataLength), &(FlInitializeControllerHardware.DisketteExtension->FifoBuffer)[1], FlInitializeControllerHardware.DisketteExtension->FifoBuffer, &(FlQueueIrpToThread.DisketteExtension->ThreadReferenceMutex), &(FlFormat.driveMediaConstants->SectorLengthCode), FlDetermineMediaType.irp->MdlAddress, &(FlFdcDeviceIo.irpStack->Parameters.DeviceIoControl), &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.FormatFillCharacter), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->CylinderShift), &(FloppyThread.outputBuffer___0->ST3_PTOS), FloppyDeviceControl.Irp->AssociatedIrp.SystemBuffer, ((ptr(struct(_MOUNTDEV_SUGGESTED_LINK_NAME)))FloppyDeviceControl.Irp->AssociatedIrp.SystemBuffer), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.SectorLengthCode), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].SkewDelta), FlConsolidateMediaTypeWithBootSector.DisketteExtension, GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].FormatGapLength, &(FlCheckBootSector.DisketteExtension->DeviceObject), GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].FormatFillCharacter, ExAllocatePoolWithTag.tmp, &(FlFormat.driveMediaConstants->MaximumTrack), FloppyAddDevice.deviceObject, &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.FormatFillCharacter), FlReadWrite.ioBuffer, &(FlConsolidateMediaTypeWithBootSector.DisketteExtension->IsReadOnly), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].ReadWriteGapLength, memcpy.p, FlFormat.formatParameters->EndCylinderNumber, &(FloppyThread.outputBuffer->TracksPerCylinder), GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].DataLength, FloppyAddDevice.disketteExtension->HoldNewRequests, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].BytesPerSector, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].CylinderShift, FlDetermineMediaType.DisketteExtension->DriveType, (((int)FlReadWriteTrack.Sector) + ((unsigned long)FlReadWriteTrack.NumberOfSectors)), ((unsigned char)(((int)FlReadWriteTrack.Sector) + ((unsigned long)FlReadWriteTrack.NumberOfSectors))), FlDatarateSpecifyConfigure.DisketteExtension->DriveMediaType, &(GLOBAL.DriveMediaConstants->BytesPerSector), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.HeadLoadTime), &(FloppyDeviceControl.disketteExtension->TargetObject), GLOBAL.DriveMediaConstants->DataTransferRate, ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.SectorLengthCode), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.SectorLengthCode, FloppyPower.state.SystemState, FlReadWriteTrack.byteToSectorShift, &(FlStartDrive.DisketteExtension->DriveMediaConstants.HeadLoadTime), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->HeadSettleTime), &(GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].NumberOfHeads), &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MotorOffTime), FloppyThread.disketteExtension->DeviceUnit, &(FlReadWrite.DisketteExtension->IoBuffer), &(FloppyAddDevice.disketteExtension->ListSpinLock), FloppyPower.state, GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].DataTransferRate, FlHdbit.DisketteExtension->TargetObject, FloppyDeviceControl.outputBuffer->MediaType, &(FloppyStartDevice.DeviceObject->DeviceExtension), FlDetermineMediaType.DisketteExtension->DriveMediaConstants.HeadLoadTime, GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].SkewDelta, GLOBAL.DriveMediaConstants->StepRateHeadUnloadTime, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].HeadSettleTime, &(FlReadWriteTrack.driveMediaConstants->DataLength), (7 + ((int)FlReadWrite.driveMediaConstants->SectorLengthCode)), ((unsigned long)(7 + ((int)FlReadWrite.driveMediaConstants->SectorLengthCode))), FlStartDrive.DisketteExtension->DriveType, &(FlIssueCommand.issueCommandParms.TimeOut), FlHdbit.setHdBitParameter.DeviceUnit, FloppyThread.disketteExtension->DriveMediaConstants.SectorsPerTrack, ((unsigned long)FloppyThread.disketteExtension->DriveMediaConstants.SectorsPerTrack), FloppyAddDevice.disketteExtension->IsStarted, ((ptr(void))FloppyStartDevice.irpSp), FloppyStartDevice.irpSp, FlReadWrite.driveMediaConstants->SectorLengthCode, ((int)FlReadWrite.driveMediaConstants->SectorLengthCode), FloppyStartDevice.disketteExtension->DriveType, &(FlRecalibrateDrive.DisketteExtension->DeviceUnit), IoBuildDeviceIoControlRequest.Event, &(FloppyAddDevice.disketteExtension->DeviceObject), FlReadWriteTrack.driveMediaConstants->SectorLengthCode, ((int)FlReadWriteTrack.driveMediaConstants->SectorLengthCode), FloppyStartDevice.fdcInfo.BufferSize, &(FlCheckFormatParameters.FormatParameters->EndCylinderNumber), FlReadWrite.driveMediaConstants->SectorsPerTrack, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].ReadWriteGapLength), FlFormat.irpSp->Parameters.DeviceIoControl.OutputBufferLength, FloppyDeviceControl.disketteExtension->DeviceName.Length, ((unsigned int)FloppyDeviceControl.disketteExtension->DeviceName.Length), &(FloppyThread.outputBuffer->SectorsPerTrack), FloppyDeviceControl.disketteExtension->HoldNewRequests, &(FlFormat.formatParameters->StartHeadNumber), FlFormat.driveMediaConstants->BytesPerSector, ((unsigned long)FlFormat.driveMediaConstants->BytesPerSector), FlDetermineMediaType.ddriveMediaConstants, &(FloppyPnp.disketteExtension->DeviceName), &(FloppyThread.irpSp->Parameters.DeviceIoControl), (7 + ((int)FlReadWriteTrack.driveMediaConstants->SectorLengthCode)), ((unsigned long)(7 + ((int)FlReadWriteTrack.driveMediaConstants->SectorLengthCode))), &(FlQueueIrpToThread.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation->Control), &(FloppyPnp.disketteExtension->TargetObject), FloppyPnp.disketteExtension->IsRemoved, &(GLOBAL.PagingMutex->Event), FloppyPower.DeviceObject, FloppyThread.outputBuffer->SectorsPerTrack, ((ptr(struct(_BOOT_SECTOR_INFO)))FlCheckBootSector.tmp), FlCheckBootSector.tmp, FloppyQueueRequest.Irp->IoStatus.__annonCompField4.Status, FloppyThread.disketteExtension, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.FormatFillCharacter, FloppyReadWrite.irpSp->Parameters.Read.Length, ((ptr(typedef(DISKETTE_EXTENSION)))FloppyPnp.DeviceObject->DeviceExtension), FloppyPnp.DeviceObject->DeviceExtension, FloppyThread.irp->AssociatedIrp.SystemBuffer, ((ptr(struct(_SENSE_DEVISE_STATUS_PTOS)))FloppyThread.irp->AssociatedIrp.SystemBuffer), FlStartDrive.DisketteExtension->DeviceUnit, &(GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].NumberOfHeads), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].HeadSettleTime, &(FloppyQueueRequest.DisketteExtension->FlCancelSpinLock), FlReadWriteTrack.driveMediaConstants->HeadSettleTime, ((int)FlReadWriteTrack.driveMediaConstants->HeadSettleTime), FloppyPower.disketteExtension->TargetObject, FloppyReadWrite.disketteExtension->MediaType, FloppyPnp.Irp->IoStatus.Information, FloppyAddDevice.disketteExtension->DriverObject, FloppyThread.disketteExtension->FifoBuffer, &(FloppyThread.disketteExtension->FifoBuffer)[1], GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MotorSettleTimeRead, &(FlStartDrive.DisketteExtension->DriveMediaConstants.SkewDelta), FloppyCancelQueuedRequest.Irp->IoStatus.Information, FlCheckFormatParameters.FormatParameters->EndHeadNumber, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].DataTransferRate), ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.HeadLoadTime), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.HeadLoadTime, FlConfigCallBack.biosDriveMediaConstants->BytesPerSector, FloppyProcessQueuedRequests.irpSp, FloppyThread.outputBuffer, FlFormat.DisketteExtension->DriveMediaConstants.DataTransferRate, GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MotorSettleTimeWrite, &(GLOBAL.DriveMediaLimits[FlCheckFormatParameters.DisketteExtension->DriveType].HighestDriveMediaType), FloppyThread.disketteExtension->DriveMediaConstants.MaximumTrack, ((int)FloppyThread.disketteExtension->DriveMediaConstants.MaximumTrack), (((int)FloppyThread.disketteExtension->DriveMediaConstants.MaximumTrack) + 1), ((unsigned long)(((int)FloppyThread.disketteExtension->DriveMediaConstants.MaximumTrack) + 1)), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].SectorsPerTrack), FlStartDrive.DisketteExtension->BiosDriveMediaConstants.SkewDelta, FloppyProcessQueuedRequests.currentIrp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, FlIssueCommand.issueCommandParms.FifoOutBuffer, &(FlIssueCommand.issueCommandParms.IoOffset), FlFinishOperation.DisketteExtension->DeviceObject, &(FloppyDeviceControl.uniqueId->UniqueIdLength), &(GLOBAL.PagingMutex->Count), &(FloppyAddDevice.disketteExtension->MediaType), ExfInterlockedInsertTailList.ListHead, FloppyThread.irpSp->Flags, ((int)FloppyThread.irpSp->Flags), &(FlStartDrive.DisketteExtension->DriveMediaConstants.MotorSettleTimeRead), &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MotorSettleTimeRead), FlCheckFormatParameters.ddriveMediaConstants->MaximumTrack, GLOBAL.DriveMediaConstants->CylinderShift, IoCreateDevice.tmp, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MotorSettleTimeRead), &(FlReadWrite.DisketteExtension->IsReadOnly), FlConfigCallBack.biosDriveMediaConstants->MotorOffTime, FloppyThread.outputBuffer->Cylinders.__annonCompField1.LowPart, FlReadWrite.DisketteExtension->MediaType, GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType, &(FlFormat.DisketteExtension->DriveMediaConstants.NumberOfHeads), MmUnlockPages.MemoryDescriptorList, &(FlFormat.driveMediaConstants->NumberOfHeads), (((unsigned long)FlReadWrite.sectorsPerTrack) - ((int)FlReadWrite.trackSector)), ((unsigned char)(((unsigned long)FlReadWrite.sectorsPerTrack) - ((int)FlReadWrite.trackSector))), FlFormat.driveMediaConstants->SectorsPerTrack, ((int)FlFormat.driveMediaConstants->SectorsPerTrack), "\\\000D\000o\000s\000D\000e\000v\000i\000c\000e\000s\000\\\000", &(FloppyAddDevice.disketteExtension->ThreadReferenceCount), FlFreeIoBuffer.DisketteExtension->MaxTransferSize, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MediaByte, FlStartDrive.DisketteExtension->BiosDriveMediaConstants.NumberOfHeads, &(FlAcpiConfigureFloppy.biosDriveMediaConstants->DataLength), FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MotorSettleTimeRead, FloppyDeviceControl.disketteExtension->InterfaceString.Buffer, ((ptr(void))FloppyDeviceControl.disketteExtension->InterfaceString.Buffer), FlReadWriteTrack.DisketteExtension->DeviceUnit, ((int)FlReadWriteTrack.DisketteExtension->DeviceUnit), FlConsolidateMediaTypeWithBootSector.DisketteExtension->IsReadOnly, FlStartDrive.fdcDiskChangeParms.DriveOnValue, FlFormat.DisketteExtension->DriveMediaConstants.HeadLoadTime, FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MotorOffTime, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MediaByte), &(FloppyReadWrite.disketteExtension->HoldNewRequests), &(FlFormat.driveMediaConstants->BytesPerSector), FlFormat.driveMediaConstants->FormatFillCharacter, &(GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType]), &(FlStartDrive.DisketteExtension->DeviceObject->Flags), FlReadWrite.DisketteExtension->IsReadOnly, FlFormat.driveMediaConstants->SectorLengthCode, FlFinishOperation.DisketteExtension->HardwareFailed, &(FloppyReadWrite.irpSp->Parameters.Read.Length), GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].BytesPerSector, FlFormat.driveMediaConstants->CylinderShift, ((int)FlFormat.driveMediaConstants->CylinderShift), FloppyStartDevice.fdcInfo.BusType, FlStartDrive.DisketteExtension->DriveMediaConstants.StepRateHeadUnloadTime, FlIssueCommand.DisketteExtension, FlReadWrite.mdl, &(FlDatarateSpecifyConfigure.DisketteExtension->DriveMediaConstants.CylinderShift), GLOBAL.DriveMediaConstants->MaximumTrack, FloppyThread.disketteExtension->MediaType, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].DataLength, &(GLOBAL.DriveMediaLimits[FlFormat.DisketteExtension->DriveType].HighestDriveMediaType), &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.HeadSettleTime), &(GLOBAL.DriveMediaConstants->SectorLengthCode), &(FlStartDrive.DisketteExtension->DriveMediaConstants.SectorLengthCode), FlConsolidateMediaTypeWithBootSector.readidDriveMediaConstants->MaximumTrack, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].DataTransferRate, &(FlCheckFormatParameters.FormatParameters->EndHeadNumber), FloppyDeviceControl.i, ((int)FloppyDeviceControl.i), (((int)FloppyDeviceControl.i) + 1), ((typedef(UCHAR))(((int)FloppyDeviceControl.i) + 1)), &(FloppyReadWrite.DeviceObject->DeviceExtension), &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].SkewDelta), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].StepRateHeadUnloadTime, &(FlFormat.formatParameters->EndCylinderNumber), &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].DataLength), GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MotorSettleTimeWrite, FlInitializeControllerHardware.DisketteExtension->PerpendicularMode, ((int)FlInitializeControllerHardware.DisketteExtension->PerpendicularMode), FloppyAddDevice.disketteExtension->MediaType, &(GLOBAL.DriveMediaConstants->MotorSettleTimeWrite), &(FloppyThread.disketteExtension->PoweringDown), &(FlHdbit.DisketteExtension->TargetObject), GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].SkewDelta, &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.ReadWriteGapLength), FlReadWrite.driveMediaConstants->SkewDelta, FlAcpiConfigureFloppy.DisketteExtension->DriveType, &(FloppyPnp.disketteExtension->InterfaceString.Buffer), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].HeadSettleTime, &(FlHdbit.setHdBitParameter.More120MB), FlReadWrite.DisketteExtension->MaxTransferSize, &(FlReadWriteTrack.driveMediaConstants->SectorLengthCode), &(FlFormat.DisketteExtension->DriveMediaConstants.SectorsPerTrack), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].HeadLoadTime), &(FlFormat.DisketteExtension->BytesPerSector), &(FloppyDeviceControl.outputBuffer->Cylinders), FlConfigCallBack.biosDriveMediaConstants->FormatFillCharacter, FlReadWrite.skewDelta, ((int)FlReadWrite.skewDelta), &(FlIssueCommand.issueCommandParms.IoHandle), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].HeadLoadTime, FlFdcDeviceIo.Data, &(FlIssueCommand.issueCommandParms.FifoInBuffer), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MaximumTrack), FloppyAddDevice.disketteExtension->DeviceName.Buffer, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].HeadSettleTime), FloppyProcessQueuedRequests.DisketteExtension, GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].MaximumTrack, ((int)GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].MaximumTrack), &(FloppyStartDevice.fdcInfo.BusType), (((int)GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].MaximumTrack) + 1), ((unsigned long)(((int)GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].MaximumTrack) + 1)), &(FlQueueIrpToThread.DisketteExtension->ThreadReferenceCount), ExfInterlockedInsertHeadList.Lock, FlAcpiConfigureFloppy.biosDriveMediaConstants->ReadWriteGapLength, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].DataTransferRate), FlStartDrive.DisketteExtension->BiosDriveMediaConstants.DataTransferRate, FloppyDeviceControl.disketteExtension->DriveType, FloppyPnp.nextIrpSp->Control, &(FloppyAddDevice.disketteExtension->HoldNewReqMutex), IoDeleteSymbolicLink.SymbolicLinkName, FloppyDeviceControl.driveLetterName.MaximumLength, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].SectorLengthCode), GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].SectorLengthCode, FlFormat.DisketteExtension->DriveMediaConstants.MediaType, &(FlFormat.DisketteExtension->DriveMediaConstants.StepRateHeadUnloadTime), &(FlDetermineMediaType.DisketteExtension->IsReadOnly), FloppyStartDevice.disketteExtension->IsStarted, FloppyStartDevice.fdcInfo.AcpiFdiSupported, &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.DataTransferRate), &(FlQueueIrpToThread.DisketteExtension->ListEntry), FlAllocateIoBuffer.DisketteExtension->IoBufferSize, &(FloppyDeviceControl.uniqueId->UniqueId), ((ptr(void))&(FloppyDeviceControl.uniqueId->UniqueId)), GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MaximumTrack, &(FloppyAddDevice.disketteExtension->PowerDownMutex.Event), FloppyDeviceControl.suggestedName->UseOnlyIfThereAreNoOtherLinks, FlAcpiConfigureFloppy.biosDriveMediaConstants->SectorsPerTrack, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].NumberOfHeads), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].ReadWriteGapLength), &(FloppyThread.irpSp->MinorFunction), GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].MediaType, &(FlStartDrive.DisketteExtension->DriveMediaConstants.MaximumTrack), GLOBAL.DriveMediaLimits[FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveType].LowestDriveMediaType, ((unsigned long)GLOBAL.DriveMediaLimits[FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveType].LowestDriveMediaType), &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.NumberOfHeads), &(FloppyStartDevice.disketteExtension->TargetObject), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.HeadSettleTime), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->FormatGapLength), FlFreeIoBuffer.DisketteExtension->IoBuffer, ((ptr(void))FlFreeIoBuffer.DisketteExtension->IoBuffer), FlStartDrive.DisketteExtension->DeviceObject->Vpb, ((ptr(void))&(FloppyDeviceControl.queryTable)), FlStartDrive.DisketteExtension->BiosDriveMediaConstants.BytesPerSector, &(FlStartDrive.DisketteExtension->DriveMediaConstants.MotorSettleTimeWrite), FlFormat.badTrackBuffer[FlFormat.numberOfBadTracks], &(FlFinishOperation.DisketteExtension->ListSpinLock), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MotorSettleTimeWrite), &(GLOBAL.DriveMediaLimits[FlFormat.DisketteExtension->DriveType]), FlReadWrite.Irp->MdlAddress, FlInitializeControllerHardware.DisketteExtension, &(FloppyDeviceControl.outputBuffer->SectorsPerTrack), FlDetermineMediaType.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, &(FlReadWrite.irpSp->Parameters.Read.Length), &(FlFormat.formatParameters->StartCylinderNumber), (FlDetermineMediaType.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation - 1), FloppyDeviceControl.mountName, &(FloppyReadWrite.irpSp->Parameters.Read.ByteOffset.__annonCompField1.LowPart), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].DataLength), &(FloppyDeviceControl.driveLetterName.Buffer), &(FlFormat.DisketteExtension->DriveMediaConstants.FormatGapLength), &(FloppyThread.disketteExtension->ThreadReferenceMutex), &(FlFormat.driveMediaConstants->SectorsPerTrack), RtlCopyUnicodeString.SourceString, FlIssueCommand.issueCommandParms.FifoInBuffer, GLOBAL.DriveMediaConstants->MediaType, &(FlFormat.formatExParameters->SectorsPerTrack), GLOBAL.DriveMediaConstants[FlCheckFormatParameters.driveMediaType].MediaType, ((int)FloppyPnp.irpSp->Control), FloppyPnp.irpSp->Control, &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.DataTransferRate), FloppyThread.irpSp->Parameters.DeviceIoControl.OutputBufferLength, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].ReadWriteGapLength, &(FlFormat.badTrackBuffer[FlFormat.numberOfBadTracks]), &(FloppyStartDevice.fdcInfo.AcpiBios), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].StepRateHeadUnloadTime), FlAcpiConfigureFloppy.biosDriveMediaConstants->MediaByte, MmFreeContiguousMemory.BaseAddress, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MotorSettleTimeWrite, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MaximumTrack, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MotorOffTime, FloppyQueueRequest.Irp->Cancel, FloppyCancelQueuedRequest.Irp->CancelIrql, &(FlReadWrite.irpSp->Parameters.Read.ByteOffset), FlDetermineMediaType.ddriveMediaConstants->MediaType, &(GLOBAL.DriveMediaConstants->FormatGapLength), &(FloppyDeviceControl.disketteExtension->HoldNewRequests), &(FlDetermineMediaType.DisketteExtension->DriveMediaType), memcpy.s, &(FlFormat.driveMediaConstants->HeadSettleTime), &(GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].SectorsPerTrack), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].BytesPerSector, FlHdbit.DisketteExtension->DeviceUnit, GLOBAL.DriveMediaConstants->MotorSettleTimeWrite, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].NumberOfHeads, &(FlConsolidateMediaTypeWithBootSector.readidDriveMediaConstants->BytesPerSector), &(FlStartDrive.DisketteExtension->DriveMediaConstants.MediaByte), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType]), ObfDereferenceObject.Object, FloppyPower.Irp->IoStatus.__annonCompField4.Status, &(GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType), &(FloppyDeviceControl.outputBuffer->Cylinders.__annonCompField1), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->NumberOfHeads), &(FlReadWrite.driveMediaConstants->SectorsPerTrack), FlConsolidateMediaTypeWithBootSector.readidDriveMediaConstants, &(FloppyDeviceControl.DeviceObject->DeviceExtension), &(FlAllocateIoBuffer.DisketteExtension->IoBufferMdl), &(FlFormat.DisketteExtension->LastDriveMediaType), (1 + ((int)FlFormat.driveMediaConstants->MaximumTrack)), FlQueueIrpToThread.DisketteExtension, ((ptr(void))FlQueueIrpToThread.DisketteExtension), FlFormat.driveMediaConstants->MaximumTrack, ((int)FlFormat.driveMediaConstants->MaximumTrack), &(FloppyDeviceControl.disketteExtension->DeviceName.Length), &(GLOBAL.DriveMediaConstants->HeadLoadTime), FlFormat.DisketteExtension->ByteCapacity, FlStartDrive.DisketteExtension->BiosDriveMediaConstants.FormatGapLength, FlAcpiConfigureFloppy.biosDriveMediaConstants->SkewDelta, GLOBAL.DriveMediaConstants->SectorLengthCode, (FloppyReadWrite.irpSp->Parameters.Read.ByteOffset.__annonCompField1.LowPart + FloppyReadWrite.irpSp->Parameters.Read.Length), &(FloppyReadWrite.irpSp->Parameters.Read), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].DataLength, FlConfigCallBack.biosDriveMediaConstants->SectorLengthCode, FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MaximumTrack, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MediaType, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MediaByte), &(FlRecalibrateDrive.DisketteExtension->FifoBuffer), &(FloppyPower.irpSp->Parameters), KeWaitForSingleObject.Object, ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.ReadWriteGapLength), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.ReadWriteGapLength, &(&(FlRecalibrateDrive.DisketteExtension->FifoBuffer)[1]), ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.MaxCylinderNumber), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.MaxCylinderNumber, FloppyProcessQueuedRequests.currentIrp->IoStatus.__annonCompField4.Status, GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MediaType, FlStartDrive.DisketteExtension->BiosDriveMediaConstants.ReadWriteGapLength, FlAcpiConfigureFloppy.DisketteExtension, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].StepRateHeadUnloadTime), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].DataLength), FloppyDeviceControl.suggestedName->NameLength, IoQueryDeviceDescription.Context, &(FloppyDeviceControl.disketteExtension->DeviceName.Buffer), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MediaByte), &(&(FlInitializeControllerHardware.DisketteExtension->FifoBuffer)[1]), &(FlInitializeControllerHardware.DisketteExtension->FifoBuffer), &(FlFormat.DisketteExtension->DriveMediaConstants.FormatFillCharacter), &(FlStartDrive.DisketteExtension->DriveMediaConstants.DataTransferRate), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType]), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->StepRateHeadUnloadTime), ((int)ExAllocatePoolWithTag.NumberOfBytes), ExAllocatePoolWithTag.NumberOfBytes, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].HeadSettleTime), &(FlFinishOperation.DisketteExtension->ListEntry), FloppyStartDevice.disketteExtension->MaxTransferSize, &(FloppyPower.disketteExtension->ThreadReferenceMutex), &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.FormatGapLength), FlQueueIrpToThread.DisketteExtension->PoweringDown, &(FlDetermineMediaType.DisketteExtension->DeviceUnit), FlFormat.endTrack, FlStartDrive.DisketteExtension->DriveMediaConstants.MediaByte, &(GLOBAL.DriveMediaConstants->SectorsPerTrack), ExFreePool.P, &(FlReadWriteTrack.driveMediaConstants->ReadWriteGapLength), FlFdcDeviceIo.irpStack, FlStartDrive.driveStatus, FlConfigCallBack.biosDriveMediaConstants->HeadLoadTime, FloppyDeviceControl.Irp->IoStatus.Information, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].HeadLoadTime), &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].SectorsPerTrack), FlDetermineMediaType.DisketteExtension->IsReadOnly, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MotorSettleTimeWrite), &(FlFormat.irpSp->Parameters.DeviceIoControl), &(GLOBAL.DriveMediaLimits[FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveType].HighestDriveMediaType), &(FloppyStartDevice.fdcInfo.UnitNumber), FlAllocateIoBuffer.DisketteExtension->IoBuffer, ((ptr(void))FlAllocateIoBuffer.DisketteExtension->IoBuffer), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].HeadSettleTime, &(FloppyProcessQueuedRequests.irpSp->MajorFunction), &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].CylinderShift), &(FlAllocateIoBuffer.DisketteExtension->IoBufferSize), &(GLOBAL.DriveMediaConstants->ReadWriteGapLength), &(GLOBAL.DriveMediaLimits[FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveType]), &(FloppyQueueRequest.DisketteExtension->NewRequestQueue), &(FlReadWrite.DisketteExtension->DriveMediaConstants), &(FloppyAddDevice.fdcInfo.BufferCount), &(FlReadWrite.irpSp->MajorFunction), GLOBAL.PagingMutex->Contention, &(FlReadWriteTrack.DisketteExtension->ControllerConfigurable), FlIssueCommand.issueCommandParms.IoHandle, FlFormat.DisketteExtension->DriveMediaConstants.NumberOfHeads, &(FloppyStartDevice.irpSp->CompletionRoutine), &(GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].MediaType), &(FlDetermineMediaType.ddriveMediaConstants->SectorsPerTrack), &(FlStartDrive.fdcDiskChangeParms.DriveOnValue), &(FlReadWriteTrack.DisketteExtension->DriveMediaConstants), &(FloppyThread.outputBuffer->Cylinders.__annonCompField1.HighPart), FlStartDrive.DisketteExtension->DriveMediaConstants.MotorSettleTimeWrite, &(FloppyAddDevice.disketteExtension->IsRemoved), FlAllocateIoBuffer.DisketteExtension->IoBufferMdl, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].FormatGapLength), &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].BytesPerSector), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.HeadSettleTime), GLOBAL.DriveMediaLimits[FloppyDeviceControl.disketteExtension->DriveType].HighestDriveMediaType, &(FloppyReadWrite.irpSp->Parameters.Read.ByteOffset), FlReadWrite.numberOfHeads, ((typedef(ULONG))FlReadWrite.numberOfHeads), FlStartDrive.DisketteExtension->DriveMediaConstants.DataTransferRate, MmAllocateContiguousMemory.tmp, FlFormat.formatParameters, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.BytesPerSector, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].CylinderShift), FloppyDeviceControl.disketteExtension->DeviceName.Buffer, ((ptr(void))FloppyDeviceControl.disketteExtension->DeviceName.Buffer), (FlConsolidateMediaTypeWithBootSector.i + 1), (FloppyDeviceControl.Irp->IoStatus.Information + ((typedef(ULONG_PTR))size(typedef(DISK_GEOMETRY)))), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].SectorsPerTrack), ((enum(_DRIVE_MEDIA_TYPE))FlConsolidateMediaTypeWithBootSector.i), FlConsolidateMediaTypeWithBootSector.i, &(FlReadWrite.driveMediaConstants->SkewDelta), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MotorSettleTimeWrite, &(GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].BytesPerSector), &(FlDetermineMediaType.DisketteExtension->ByteCapacity), ((ptr(typedef(DISKETTE_EXTENSION)))FloppyPower.DeviceObject->DeviceExtension), FloppyPower.DeviceObject->DeviceExtension, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].SectorLengthCode, &(FloppyStartDevice.disketteExtension->UnderlyingPDO), &(FloppyPnp.disketteExtension->HoldNewReqMutex), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MediaType, &(FlAcpiConfigureFloppy.biosDriveMediaConstants->MaximumTrack), FloppyAddDevice.disketteExtension->DeviceObject, FloppyDeviceControl.irpSp->Parameters.DeviceIoControl.OutputBufferLength, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].ReadWriteGapLength), GLOBAL.DriveMediaLimits[FlCheckFormatParameters.DisketteExtension->DriveType].LowestDriveMediaType, GLOBAL.DriveMediaConstants->HeadLoadTime, FloppyStartDevice.irpSp->Context, FlReadWrite.byteToSectorShift, FlFdcDeviceIo.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, (FlFdcDeviceIo.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation - 1), KfReleaseSpinLock.SpinLock, FlFormat.DisketteExtension->DriveMediaConstants.StepRateHeadUnloadTime, GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].HeadLoadTime, &(GLOBAL.DriveMediaConstants->StepRateHeadUnloadTime), &(FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveMediaConstants.NumberOfHeads), &(FlFormat.DisketteExtension->DriveMediaConstants.DataLength), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].DataTransferRate, FloppyThread.Context, ((ptr(typedef(DISKETTE_EXTENSION)))FloppyThread.Context), &(FlFdcDeviceIo.irpStack->Parameters.DeviceIoControl.Type3InputBuffer), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].ReadWriteGapLength, &(FloppyPower.irpSp->Parameters.Power.State), FlHdbit.setHdBitParameter.More120MB, FloppyCancelQueuedRequest.Irp->Tail.Overlay.__annonCompField17.ListEntry.Blink, FlStartDrive.DisketteExtension->DriveMediaConstants.MediaType, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.DataLength, &(GLOBAL.DriveMediaConstants[FlCheckFormatParameters.driveMediaType]), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MediaType), FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveType, &(FlStartDrive.DisketteExtension->DriveMediaConstants.FormatFillCharacter), ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.MotorOffTime), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.MotorOffTime, FlAcpiConfigureFloppy.biosDriveMediaConstants->NumberOfHeads, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].FormatGapLength, FloppyReadWrite.disketteExtension->BytesPerSector, (FloppyReadWrite.disketteExtension->BytesPerSector - 1), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->MediaType), GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].CylinderShift, FloppyAddDevice.disketteExtension->TargetObject, FlCheckFormatParameters.ddriveMediaConstants->NumberOfHeads, ((int)FlDetermineMediaType.ddriveMediaConstants->SectorsPerTrack), FlDetermineMediaType.ddriveMediaConstants->SectorsPerTrack, FloppyReadWrite.irpSp->Parameters.Read.ByteOffset.__annonCompField1.LowPart, (FlCheckFormatParameters.ddriveMediaConstants->NumberOfHeads - 1), FlDatarateSpecifyConfigure.DisketteExtension->DriveMediaConstants.StepRateHeadUnloadTime, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].NumberOfHeads, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].StepRateHeadUnloadTime, FloppyDeviceControl.disketteExtension->IsStarted, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MotorSettleTimeWrite, FlConfigCallBack.biosDriveMediaConstants->SectorsPerTrack, &(FlFormat.irpSp->Parameters), FlAllocateIoBuffer.tmp, ((ptr(typedef(UCHAR)))FlAllocateIoBuffer.tmp), &(FlFormat.DisketteExtension->DriveMediaConstants.SectorLengthCode), GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].BytesPerSector, ((unsigned long)GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].BytesPerSector), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MediaByte, &(FloppyPnp.irpSp->CompletionRoutine), FloppyCancelQueuedRequest.EEX_Flink, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MotorSettleTimeWrite), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MediaType, FlReadWriteTrack.driveMediaConstants->ReadWriteGapLength, FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveMediaConstants.NumberOfHeads, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].FormatGapLength, &(FloppyPower.disketteExtension->ThreadReferenceCount), ((unsigned int)FlFormat.driveMediaType), FlFormat.driveMediaType, ((typedef(DRIVE_MEDIA_TYPE))(((unsigned int)FlFormat.driveMediaType) - 1)), (((unsigned int)FlFormat.driveMediaType) - 1), FlStartDrive.DisketteExtension->DriveMediaConstants.ReadWriteGapLength, &(FlAcpiConfigureFloppy.biosDriveMediaConstants->SectorLengthCode), IoAllocateMdl.VirtualAddress, &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.SectorLengthCode), FloppyQueueRequest.DisketteExtension, ExfInterlockedInsertTailList.Lock, &(FlFormat.formatExParameters->SectorNumber), FlFormat.DisketteExtension->IoBufferMdl, FlFormat.formatParameters->EndHeadNumber, ((ptr(void))FloppyPnp.irpSp), FloppyPnp.irpSp, &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.SectorPerTrack), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->SkewDelta), FlFormat.DisketteExtension->DriveType, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].HeadLoadTime), FloppyPower.type, &(GLOBAL.DriveMediaLimits[FloppyDeviceControl.disketteExtension->DriveType].HighestDriveMediaType), GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].MediaType, &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.FormatFillCharacter), GLOBAL.DriveMediaConstants->SectorsPerTrack, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType]), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.MotorOffTime), FlFormat.DisketteExtension->DriveMediaConstants.BytesPerSector, FlFreeIoBuffer.DisketteExtension->IoBufferSize, FlCheckFormatParameters.FormatParameters->StartCylinderNumber, &(FloppyPower.irpSp->MinorFunction), &(FlFormat.DisketteExtension->DriveMediaConstants.DataTransferRate), &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants), FlConfigCallBack.biosDriveMediaConstants->MotorSettleTimeWrite, GLOBAL.DriveMediaLimits, FlFormat.formatParameters->MediaType, FlConsolidateMediaTypeWithBootSector.readidDriveMediaConstants->BytesPerSector, FloppyReadWrite.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, FlFormat.DisketteExtension, (FlReadWrite.currentSector - FlReadWrite.firstSector), &(FloppyPnp.DeviceObject->DeviceExtension), FloppyCancelQueuedRequest.EEX_Flink->Blink, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].ReadWriteGapLength, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MotorOffTime, FlReadWrite.sectorsPerTrack, ((unsigned long)FlReadWrite.sectorsPerTrack), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].ReadWriteGapLength), &(FlCheckFormatParameters.FormatParameters->StartHeadNumber), &(FlFormat.DisketteExtension->FifoBuffer)[5], &(FlFormat.DisketteExtension->FifoBuffer)[4], &(FlFormat.DisketteExtension->FifoBuffer)[1], &(FlFormat.DisketteExtension->FifoBuffer)[3], FlStartDrive.DisketteExtension->DriveMediaConstants.MotorOffTime, &(FlFormat.DisketteExtension->FifoBuffer)[2], FlFormat.DisketteExtension->FifoBuffer, FloppyAddDevice.disketteExtension->ReleaseFdcWithMotorRunning, FlReadWrite.irpSp->Parameters.Read.ByteOffset.__annonCompField1.LowPart, FlConfigCallBack.biosDriveMediaConstants->MediaByte, GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].StepRateHeadUnloadTime, ((typedef(DRIVE_MEDIA_TYPE))(((unsigned int)FlDetermineMediaType.DisketteExtension->DriveMediaType) - 1)), (((unsigned int)FlDetermineMediaType.DisketteExtension->DriveMediaType) - 1), GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].MaximumTrack, ((ptr(void))FloppyPnp.nextIrpSp), FloppyPnp.nextIrpSp, &(FlFormat.DisketteExtension->IoBuffer[((((int)FlFormat.whichSector) * 4) + 3)]), &(FlFormat.DisketteExtension->IoBuffer[((((int)FlFormat.whichSector) * 4) + 2)]), &(FlFormat.DisketteExtension->IoBuffer[((((int)FlFormat.whichSector) * 4) + 1)]), &(FlFormat.DisketteExtension->IoBuffer[(((int)FlFormat.whichSector) * 4)]), &(FloppyAddDevice.disketteExtension->IsReadOnly), ((unsigned int)FlDetermineMediaType.DisketteExtension->DriveMediaType), FlDetermineMediaType.DisketteExtension->DriveMediaType, &(FloppyStartDevice.disketteExtension->IsStarted), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].FormatGapLength), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MotorSettleTimeRead, &(FlFormat.DisketteExtension->TargetObject), ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.StepRateHeadUnloadTime), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.StepRateHeadUnloadTime, &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.CylinderShift), &(FlStartDrive.DisketteExtension->DriveMediaConstants.HeadSettleTime), FloppyStartDevice.Irp->IoStatus.__annonCompField4.Status, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MotorSettleTimeRead), FloppyDeviceControl.outputBuffer->BytesPerSector, FlFdcDeviceIo.DeviceObject, FloppyQueueRequest.Irp->IoStatus.Information, FlDetermineMediaType.DisketteExtension, &(FlStartDrive.DisketteExtension->DriveMediaType), RtlQueryRegistryValues.QueryTable, &(GLOBAL.PagingMutex->Contention), ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.HeadSettleTime), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.HeadSettleTime, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MediaType), &(FloppyDeviceControl.disketteExtension->InterfaceString), FloppyThread.outputBuffer___0->ST3_PTOS, ((typedef(CHAR))(((int)FloppyPower.Irp->CurrentLocation) + 1)), (((int)FloppyPower.Irp->CurrentLocation) + 1), ObReferenceObjectByHandle.Object, &(FlFdcDeviceIo.irpStack->Parameters), ((int)FloppyPower.Irp->CurrentLocation), FloppyPower.Irp->CurrentLocation, &(FlCheckFormatParameters.ddriveMediaConstants->MaximumTrack), &(FlAcpiConfigureFloppy.DisketteExtension->DriveType), &(FlStartDrive.fdcDiskChangeParms.DriveStatus), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MotorOffTime), (((typedef(ULONG))(((unsigned char)FloppyDeviceControl.lowestDriveMediaType) - 1)) + (FloppyDeviceControl.outputBufferLength / ((typedef(ULONG))size(typedef(DISK_GEOMETRY))))), ((enum(_DRIVE_MEDIA_TYPE))(((typedef(ULONG))(((unsigned char)FloppyDeviceControl.lowestDriveMediaType) - 1)) + (FloppyDeviceControl.outputBufferLength / ((typedef(ULONG))size(typedef(DISK_GEOMETRY)))))), FlReadWriteTrack.DisketteExtension->ControllerConfigurable, FlAcpiConfigureFloppy.biosDriveMediaConstants->SectorLengthCode, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.FormatGapLength, &(FlFormat.DisketteExtension->DriveMediaConstants.HeadSettleTime), GLOBAL.PagingMutex->Count, FloppyDeviceControl.queryTable.Name, FlStartDrive.DisketteExtension->BiosDriveMediaConstants.CylinderShift, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.DataTransferRate, &(GLOBAL.DriveMediaLimits[FlFormat.DisketteExtension->DriveType].LowestDriveMediaType), FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveMediaType, FlStartDrive.fdcEnableParms.DriveOnValue, &(FlFreeIoBuffer.DisketteExtension->IoBufferMdl), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MotorSettleTimeWrite), &(FloppyStartDevice.fdcInfo.MaxTransferSize), FloppyPower.irpSp->MinorFunction, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.NumberOfHeads, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MaximumTrack), &(FlStartDrive.DisketteExtension->DriveMediaConstants.ReadWriteGapLength), &(FloppyThread.outputBuffer->Cylinders), IoSetHardErrorOrVerifyDevice.DeviceObject, FlReadWriteTrack.DisketteExtension->HardwareFailed, (FloppyDeviceControl.highestDriveMediaType - FloppyDeviceControl.lowestDriveMediaType), FloppyCreateClose.Irp->IoStatus.Information, (FlReadWrite.currentSector + ((int)FlReadWrite.numTransferSectors)), FlDetermineMediaType.DisketteExtension->MediaType, FloppyPnp.irpSp->Context, ((FloppyDeviceControl.highestDriveMediaType - FloppyDeviceControl.lowestDriveMediaType) + 1), FlAcpiConfigureFloppy.biosDriveMediaConstants->DataLength, FloppyDeviceControl.outputBuffer->TracksPerCylinder, &(FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveMediaConstants.SectorsPerTrack), FlStartDrive.DisketteExtension->BiosDriveMediaConstants.FormatFillCharacter, &(&(FlReadWriteTrack.DisketteExtension->FifoBuffer)[3]), &(&(FlReadWriteTrack.DisketteExtension->FifoBuffer)[4]), &(&(FlReadWriteTrack.DisketteExtension->FifoBuffer)[5]), FloppyDeviceControl.DeviceObject->Characteristics, &(&(FlReadWriteTrack.DisketteExtension->FifoBuffer)[6]), &(&(FlReadWriteTrack.DisketteExtension->FifoBuffer)[7]), &(&(FlReadWriteTrack.DisketteExtension->FifoBuffer)[8]), &(FlReadWriteTrack.DisketteExtension->FifoBuffer), &(&(FlReadWriteTrack.DisketteExtension->FifoBuffer)[1]), &(&(FlReadWriteTrack.DisketteExtension->FifoBuffer)[2]), &(FlQueueIrpToThread.DisketteExtension->ListSpinLock), ret$IoAttachDeviceToDeviceStack, &(FloppyAddDevice.disketteExtension->HoldNewReqMutex.Event), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.DataTransferLength), &(FloppyAddDevice.disketteExtension->IsStarted), &(FlDatarateSpecifyConfigure.DisketteExtension->DriveMediaConstants), &(FlQueueIrpToThread.DisketteExtension->RequestSemaphore), FloppyAddDevice.disketteExtension->FloppyControllerAllocated, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].FormatFillCharacter), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MaximumTrack, &(FlIssueCommand.DisketteExtension->HardwareFailed), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].CylinderShift), KeInitializeEvent.Event, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].CylinderShift), FlAcpiConfigureFloppy.biosDriveMediaConstants->MotorSettleTimeRead, FlConfigCallBack.biosDriveMediaConstants->DataTransferRate, FlStartDrive.DisketteExtension->TargetObject, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MaximumTrack), &(FlStartDrive.DisketteExtension->TargetObject), &(FlFormat.DisketteExtension->IoBufferMdl), &(FlDetermineMediaType.ddriveMediaConstants->BytesPerSector), &(FlReadWrite.DisketteExtension->IoBufferMdl), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.ReadWriteGapLength), FlDetermineMediaType.DisketteExtension->DriveMediaConstants.CylinderShift, &(FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveMediaConstants.SkewDelta), &(GLOBAL.DriveMediaConstants->MaximumTrack), &(GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType), FloppyStartDevice.disketteExtension->DriveOnValue, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.HeadSettleTime, &(FloppyPnp.disketteExtension->IsRemoved), FloppyProcessQueuedRequests.currentIrp->Tail.Overlay.__annonCompField17.ListEntry.Flink, FloppyDeviceControl.disketteExtension->TargetObject, FlFinishOperation.DisketteExtension->MediaType, GLOBAL.PagingMutex, ((ptr(void))GLOBAL.PagingMutex), FloppyDeviceControl.valueName, ((ptr(void))FloppyDeviceControl.valueName), FlConfigCallBack.biosDriveMediaConstants->MediaType, &(FloppyStartDevice.disketteExtension->DeviceUnit), FlStartDrive.DisketteExtension->LastDriveMediaType, FlFormat.formatParameters->StartHeadNumber, ((int)FlDetermineMediaType.DisketteExtension->DeviceUnit), FlDetermineMediaType.DisketteExtension->DeviceUnit, &(FlStartDrive.DisketteExtension->DriveMediaConstants.BytesPerSector), &(FloppyAddDevice.disketteExtension->DeviceName), FloppyPnp.disketteExtension, FlStartDrive.DisketteExtension->HardwareFailed, &(FloppyThread.outputBuffer->MediaType), FlFormat.formatExParameters, FlCheckFormatParameters.FormatParameters, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MediaByte), FlAcpiConfigureFloppy.biosDriveMediaConstants->CylinderShift, &(GLOBAL.DriveMediaConstants->NumberOfHeads), GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].NumberOfHeads, FloppyThread.outputBuffer->Cylinders.__annonCompField1.HighPart, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].HeadLoadTime, FlDatarateSpecifyConfigure.DisketteExtension->TargetObject, FlFormat.DisketteExtension->DriveMediaConstants.FormatFillCharacter, FlAcpiConfigureFloppy.FdcInfo, &(FlReadWriteTrack.driveMediaConstants->HeadSettleTime), &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MediaByte), FloppyAddDevice.disketteExtension->IsReadOnly, FlStartDrive.DisketteExtension->DriveMediaConstants.HeadLoadTime, FlFormat.formatExParameters->FormatGapLength, ((unsigned char)FlFormat.formatExParameters->FormatGapLength), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MotorOffTime), FlAcpiConfigureFloppy.biosDriveMediaConstants->FormatFillCharacter, FlFdcDeviceIo.irpStack->Parameters.DeviceIoControl.Type3InputBuffer, FloppyStartDevice.DeviceObject, IofCallDriver.DeviceObject, &(FlFormat.DisketteExtension->DriveMediaConstants), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.HeadLoadTime), FloppyStartDevice.disketteExtension->UnderlyingPDO, IoCreateSymbolicLink.SymbolicLinkName, FlConfigCallBack.biosDriveMediaConstants->CylinderShift, &(GLOBAL.DriveMediaConstants->CylinderShift), FloppyPnpComplete.DeviceObject, FlCheckFormatParameters.FormatParameters->StartHeadNumber, &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.DataLength), FlConfigCallBack.disketteExtension->DriveType, &(GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType]), (((int)FlFormat.currentTrack) + 1), ((typedef(UCHAR))(((int)FlFormat.currentTrack) + 1)), &(FlFormat.DisketteExtension->FifoBuffer), FlFormat.currentTrack, ((int)FlFormat.currentTrack), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].SectorLengthCode, &(&(FlFormat.DisketteExtension->FifoBuffer)[1]), &(&(FlFormat.DisketteExtension->FifoBuffer)[3]), &(&(FlFormat.DisketteExtension->FifoBuffer)[2]), &(&(FlFormat.DisketteExtension->FifoBuffer)[5]), &(&(FlFormat.DisketteExtension->FifoBuffer)[4]), FloppyPnp.irpSp->MinorFunction, FlIssueCommand.TransferBytes, &(FloppyThread.disketteExtension->FloppyThread), GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MotorSettleTimeRead, FloppyDeviceControl.Irp->IoStatus.__annonCompField4.Status, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].FormatFillCharacter), IoCreateSymbolicLink.DeviceName, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].CylinderShift, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].HeadLoadTime), FloppyThread.disketteExtension->DriveMediaConstants.BytesPerSector, ((unsigned long)FloppyThread.disketteExtension->DriveMediaConstants.BytesPerSector), FlFormat.badTrackBuffer, ret$IoAllocateMdl, FlReadWriteTrack.driveMediaConstants->CylinderShift, ((int)FlReadWriteTrack.driveMediaConstants->CylinderShift), &(FlConsolidateMediaTypeWithBootSector.DisketteExtension->MediaType), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].CylinderShift, FlReadWrite.driveMediaConstants->NumberOfHeads, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MotorSettleTimeWrite), FlStartDrive.DisketteExtension->DriveMediaType, &(FlFormat.DisketteExtension->HardwareFailed), ((int)FlCheckBootSector.irp->CurrentLocation), FlCheckBootSector.irp->CurrentLocation, &(FlStartDrive.DisketteExtension->DriveOnValue), FlAllocateIoBuffer.DisketteExtension, ((typedef(CHAR))(((int)FlCheckBootSector.irp->CurrentLocation) - 1)), (((int)FlCheckBootSector.irp->CurrentLocation) - 1), &(FlIssueCommand.DisketteExtension->TargetObject), FloppyThread.disketteExtension->PoweringDown, FloppyCancelQueuedRequest.EEX_Blink, &(FloppyAddDevice.disketteExtension->PowerDownMutex), &(FloppyDeviceControl.outputBuffer->BytesPerSector), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].SkewDelta, &(FloppyDeviceControl.irpSp->Parameters.DeviceIoControl.OutputBufferLength), (FlQueueIrpToThread.DisketteExtension->ThreadReferenceCount + 1), FlQueueIrpToThread.DisketteExtension->ThreadReferenceCount, &(FlFormat.driveMediaConstants->CylinderShift), FlAllocateIoBuffer.tmp___0, ((ptr(struct(_MDL)))FlAllocateIoBuffer.tmp___0), &(FlReadWrite.DisketteExtension->MaxTransferSize), &(FlFormat.DisketteExtension->DriveMediaConstants.HeadLoadTime), FlQueueIrpToThread.Irp->IoStatus.__annonCompField4.Status, FloppyDeviceControl.outputBuffer->Cylinders.__annonCompField1.LowPart, &(FloppyAddDevice.disketteExtension->ThreadReferenceMutex), &(FloppyAddDevice.disketteExtension->ArcName), &(FloppyThread.disketteExtension->IsReadOnly), FloppyDeviceControl.queryTable.EntryContext, ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.FormatGapLength), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.FormatGapLength, GLOBAL.DriveMediaLimits[FloppyDeviceControl.disketteExtension->DriveType].LowestDriveMediaType, &(FlFinishOperation.DisketteExtension->HardwareFailed), &(GLOBAL.DriveMediaConstants[FloppyDeviceControl.i]), &(GLOBAL.DriveMediaLimits[FloppyDeviceControl.disketteExtension->DriveType]), FloppyThread.disketteExtension->IoBuffer, FlReadWrite.irpSp, FloppyReadWrite.disketteExtension->IsStarted, (size(typedef(USHORT)) + ((unsigned int)FloppyDeviceControl.uniqueId->UniqueIdLength)), ((unsigned long)(size(typedef(USHORT)) + ((unsigned int)FloppyDeviceControl.uniqueId->UniqueIdLength))), GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType, FloppyAddDevice.deviceObject->AlignmentRequirement, &(FloppyAddDevice.deviceObject->DeviceExtension), &(FloppyReadWrite.disketteExtension->ByteCapacity), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].HeadLoadTime), &(FlFormat.DisketteExtension->ByteCapacity), FlIssueCommand.issueCommandParms.TransferBytes, &(FlStartDrive.DisketteExtension->DeviceObject->Vpb->Flags), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MediaType), FlConsolidateMediaTypeWithBootSector.readidDriveMediaConstants->MediaType, &(&(FlDetermineMediaType.DisketteExtension->FifoBuffer)[1]), &(FlDetermineMediaType.DisketteExtension->FifoBuffer), FloppyCancelQueuedRequest.EEX_Blink->Flink, &(FlReadWrite.irpSp->Parameters), FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MotorSettleTimeRead, &(FlInitializeControllerHardware.DisketteExtension->TargetObject), KeInitializeSpinLock.SpinLock, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].FormatFillCharacter, &(FlAcpiConfigureFloppy.biosDriveMediaConstants->FormatFillCharacter), GLOBAL.DriveMediaLimits[FlDetermineMediaType.DisketteExtension->DriveType].HighestDriveMediaType, &(FloppyThread.disketteExtension->HardwareFailed), FlFormat.driveStatus, FlReadWrite.irpSp->Parameters.Read.Length, FlFormat.driveMediaConstants->HeadSettleTime, ((int)FlFormat.driveMediaConstants->HeadSettleTime), ((ptr(void))FloppyPower.disketteExtension->FloppyThread), FloppyPower.disketteExtension->FloppyThread, &(FlIssueCommand.issueCommandParms.TransferBytes), FlIssueCommand.issueCommandParms.TimeOut, &(GLOBAL.DriveMediaLimits[FlCheckFormatParameters.DisketteExtension->DriveType].LowestDriveMediaType), FlConsolidateMediaTypeWithBootSector.DisketteExtension->MediaType, &(GLOBAL.DriveMediaConstants->MotorOffTime), FlFormat.DisketteExtension->DriveMediaConstants.MaximumTrack, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].HeadSettleTime), &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MaximumTrack), (FlReadWrite.numTransferSectors + FlReadWrite.trackSector), (((int)FlReadWrite.numTransferSectors) + ((int)FlReadWrite.trackSector)), &(FloppyProcessQueuedRequests.DisketteExtension->NewRequestQueueSpinLock), FloppyReadWrite.Irp->IoStatus.__annonCompField4.Status, FlFormat.DisketteExtension->IsReadOnly, GLOBAL.DriveMediaConstants->MotorOffTime, &(FloppyPnp.disketteExtension->InterfaceString), FlIssueCommand.DisketteExtension->TargetObject, &(GLOBAL.DriveMediaConstants[FlCheckFormatParameters.driveMediaType].MediaType), &(FloppyStartDevice.disketteExtension->MaxTransferSize), &(FloppyAddDevice.disketteExtension->DriverObject), FlCheckBootSector.irp->MdlAddress, FloppyDeviceControl.lowestDriveMediaType, ((unsigned char)FloppyDeviceControl.lowestDriveMediaType), FlAcpiConfigureFloppy.biosDriveMediaConstants, (((unsigned char)FloppyDeviceControl.lowestDriveMediaType) - 1), ((typedef(ULONG))(((unsigned char)FloppyDeviceControl.lowestDriveMediaType) - 1)), GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].SectorsPerTrack, &(FlFinishOperation.DisketteExtension->ThreadReferenceMutex), FloppyDeviceControl.tmp___0, ((ptr(typedef(WCHAR)))FloppyDeviceControl.tmp___0), &(FlFinishOperation.DisketteExtension->DeviceObject), &(FlDetermineMediaType.DisketteExtension->MediaType), FloppyCreateClose.DeviceObject, FlAcpiConfigureFloppy.biosDriveMediaConstants->DataTransferRate, &(FloppyThread.disketteExtension->RequestSemaphore), &(GLOBAL.DriveMediaLimits[FlCheckFormatParameters.DisketteExtension->DriveType]), GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].FormatGapLength, ((ptr(typedef(DISKETTE_EXTENSION)))FloppyReadWrite.DeviceObject->DeviceExtension), FloppyReadWrite.DeviceObject->DeviceExtension, ((ptr(void))FlDetermineMediaType.bootSector), FlDetermineMediaType.bootSector, ExfInterlockedRemoveHeadList.Lock, FloppyThread.irpSp->MajorFunction, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MaximumTrack, &(FlReadWriteTrack.driveMediaConstants->CylinderShift), FloppyAddDevice.disketteExtension->ThreadReferenceCount, &(FlFormat.DisketteExtension->DriveMediaConstants.MotorOffTime), &(&(FlFormat.formatExParameters->SectorNumber)[FlFormat.whichSector]), &(FloppyStartDevice.nextIrpSp->Control), FlReadWrite.DisketteExtension->IoBuffer, ((ptr(typedef(CHAR)))FlReadWrite.DisketteExtension->IoBuffer), &(FlFreeIoBuffer.DisketteExtension->MaxTransferSize), FlCheckFormatParameters.FormatParameters->EndCylinderNumber, &(FloppyAddDevice.disketteExtension->RequestSemaphore), &(FlStartDrive.fdcEnableParms.TimeToWait), FloppyPower.irpSp->Parameters.Power.Type, FloppyThread.disketteExtension->IsReadOnly, GLOBAL.DriveMediaLimits[FlFormat.DisketteExtension->DriveType].HighestDriveMediaType, FloppyReadWrite.disketteExtension->HoldNewRequests, &(FloppyPower.disketteExtension->TargetObject), ((unsigned short)GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].SectorLengthCode), GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].SectorLengthCode, &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.StepRateHeadUnloadTime), &(FlFormat.irpSp->Parameters.DeviceIoControl.OutputBufferLength), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MediaType, GLOBAL.DriveMediaConstants->MediaByte, GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].FormatFillCharacter, &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.SkewDelta), FlStartDrive.fdcEnableParms.TimeToWait, FloppyThread.disketteExtension->FloppyControllerAllocated, FlReadWrite.currentSector, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].StepRateHeadUnloadTime), &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.HeadLoadTime), &(FlStartDrive.DisketteExtension->DriveMediaConstants.MotorOffTime), &(FloppyThread.disketteExtension->DriveMediaConstants.SectorsPerTrack), FlFormat.irpSp, FlStartDrive.motorStarted, &(FlDatarateSpecifyConfigure.DisketteExtension->ControllerConfigurable), IoAllocateMdl.tmp, FloppyCreateClose.Irp->IoStatus.__annonCompField4.Status, &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.ReadWriteGapLength), &(FloppyThread.disketteExtension->DriveMediaConstants.MaximumTrack), FlFormat.driveMediaConstants->NumberOfHeads, ((int)FlFormat.driveMediaConstants->NumberOfHeads), &(FlFormat.DisketteExtension->DeviceUnit), FlDetermineMediaType.DisketteExtension->DeviceObject, &(FlRecalibrateDrive.DisketteExtension->HardwareFailed), &(FloppyDeviceControl.outputBuffer->Cylinders.__annonCompField1.LowPart), FloppyProcessQueuedRequests.irpSp->MajorFunction, &(FlDetermineMediaType.ddriveMediaConstants->MediaType), &(FlAllocateIoBuffer.DisketteExtension->IoBuffer), ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.DataTransferLength), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.DataTransferLength, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MotorOffTime), &(FlAcpiConfigureFloppy.DisketteExtension->BiosDriveMediaConstants), FloppyStartDevice.fdcInfo.BufferCount, FlFreeIoBuffer.DisketteExtension->IoBufferMdl, ((unsigned char)FloppyStartDevice.fdcInfo.PeripheralNumber), FloppyStartDevice.fdcInfo.PeripheralNumber, &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.CylinderShift), &(FloppyStartDevice.disketteExtension->InterfaceString), &(FlCheckFormatParameters.ddriveMediaConstants->NumberOfHeads), &(FloppyStartDevice.disketteExtension->HoldNewRequests), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].HeadLoadTime, GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MediaByte, &(FlStartDrive.DisketteExtension->LastDriveMediaType), &(FlConsolidateMediaTypeWithBootSector.readidDriveMediaConstants->NumberOfHeads), FlRecalibrateDrive.DisketteExtension->HardwareFailed, FloppyAddDevice.deviceName.Length, ((unsigned long)FloppyAddDevice.deviceName.Length), (((unsigned long)FlReadWrite.skew) + ((int)FlReadWrite.skewDelta)), FlReadWrite.DisketteExtension, &(FloppyThread.outputBuffer->Cylinders.__annonCompField1), &(GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i]), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->MotorSettleTimeRead), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].SectorLengthCode, FloppyDeviceControl.outputBuffer->Cylinders.__annonCompField1.HighPart, PoCallDriver.DeviceObject, FlReadWrite.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, &(FloppyDeviceControl.disketteExtension->HoldNewReqMutex), FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveMediaConstants.SkewDelta, ((unsigned long)FlDetermineMediaType.ddriveMediaConstants->BytesPerSector), FlDetermineMediaType.ddriveMediaConstants->BytesPerSector, FlAcpiConfigureFloppy.biosDriveMediaConstants->HeadSettleTime, &(FlStartDrive.DisketteExtension->DriveType), &(FlStartDrive.DisketteExtension->DriveMediaConstants.SectorsPerTrack), FloppyDeviceControl.driveLetterName.Length, FlFormat.DisketteExtension->LastDriveMediaType, &(FloppyCancelQueuedRequest.disketteExtension->FlCancelSpinLock), &(FloppyStartDevice.fdcInfo.PeripheralNumber), FloppyThread.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, FloppyPnp.disketteExtension->HoldNewRequests, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MediaType, FlFormat.DisketteExtension->HardwareFailed, &(FloppyQueueRequest.DisketteExtension->NewRequestQueueSpinLock), FloppyCancelQueuedRequest.Irp->Tail.Overlay.__annonCompField17.ListEntry.Flink, &(FloppyReadWrite.disketteExtension->HoldNewReqMutex), &(FlIssueCommand.issueCommandParms.FifoOutBuffer), &(FloppyDeviceControl.mountName->NameLength), FlFormat.driveMediaConstants->FormatGapLength, &(FloppyAddDevice.disketteExtension->TargetObject), &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MotorSettleTimeWrite), FlStartDrive.DisketteExtension->DeviceObject->Flags, &(FlStartDrive.fdcEnableParms.MotorStarted), FlInitializeControllerHardware.DisketteExtension->TargetObject, (FloppyPnp.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation - 1), &(FloppyPnp.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation[1]), FloppyPnp.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, &(FloppyDeviceControl.suggestedName->NameLength), FlDetermineMediaType.DisketteExtension->FifoBuffer, IoBuildAsynchronousFsdRequest.DeviceObject, FlCheckFormatParameters.DisketteExtension->DriveType, &(FloppyAddDevice.disketteExtension->FlCancelSpinLock), &(FlDetermineMediaType.DisketteExtension->FifoBuffer)[1], &(FlAcpiConfigureFloppy.biosDriveMediaConstants->HeadLoadTime), FloppyPnp.disketteExtension->InterfaceString.Buffer, KeInitializeSemaphore.Semaphore, FlStartDrive.DisketteExtension->BiosDriveMediaConstants.HeadSettleTime, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].CylinderShift), FlConfigCallBack.biosDriveMediaConstants->MaximumTrack, RtlCopyUnicodeString.DestinationString, GLOBAL.DriveMediaConstants->MotorSettleTimeRead, ((ptr(struct(_FORMAT_PARAMETERS)))FlFormat.Irp->AssociatedIrp.SystemBuffer), FlFormat.Irp->AssociatedIrp.SystemBuffer, FloppyCancelQueuedRequest.disketteExtension, FloppyThread.outputBuffer___0, FlStartDrive.DisketteExtension, GLOBAL.DriveMediaConstants->NumberOfHeads, FlFormat.DisketteExtension->TargetObject, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.StepRateHeadUnloadTime, FlFormat.DisketteExtension->DriveMediaConstants.HeadSettleTime, &(&(FloppyDeviceControl.suggestedName->Name)[13]), &(&(FloppyDeviceControl.suggestedName->Name)[12]), FloppyDeviceControl.suggestedName, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].FormatGapLength), ExReleaseFastMutex.FastMutex, &(FloppyDeviceControl.suggestedName->Name), ((ptr(void))&(FloppyDeviceControl.suggestedName->Name)), FloppyThread.disketteExtension->FloppyThread, ((ptr(void))FloppyThread.disketteExtension->FloppyThread), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].BytesPerSector), FlHdbit.DisketteExtension, ExAcquireFastMutex.FastMutex, &(FlFormat.formatExParameters->SectorNumber)[FlFormat.whichSector], ((unsigned char)&(FlFormat.formatExParameters->SectorNumber)[FlFormat.whichSector]), &(FlDetermineMediaType.DisketteExtension->DeviceObject), &(FloppyDeviceControl.suggestedName->UseOnlyIfThereAreNoOtherLinks), FlInterpretError.StatusRegister2, FloppyPower.disketteExtension, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].SectorsPerTrack), FlFormat.formatParameters->StartCylinderNumber, FlConsolidateMediaTypeWithBootSector.DisketteExtension->ByteCapacity, &(FloppyPnp.disketteExtension->ArcName.Length), &(FlFinishOperation.DisketteExtension->ThreadReferenceCount), FlFormat.DisketteExtension->IoBuffer[(((int)FlFormat.whichSector) * 4)], FlFormat.DisketteExtension->IoBuffer[((((int)FlFormat.whichSector) * 4) + 2)], FlFormat.DisketteExtension->IoBuffer[((((int)FlFormat.whichSector) * 4) + 3)], FlFormat.DisketteExtension->DriveMediaConstants.MediaByte, FlFormat.DisketteExtension->IoBuffer[((((int)FlFormat.whichSector) * 4) + 1)], &(FloppyThread.disketteExtension->IoBuffer), FloppyPnp.disketteExtension->ArcName.Length, &(FlCheckFormatParameters.DisketteExtension->DriveType), &(FlCheckFormatParameters.FormatParameters->StartCylinderNumber), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MotorOffTime, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.ReadWriteGapLength, FloppyThread.disketteExtension->ThreadReferenceCount, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].FormatFillCharacter), (FloppyThread.disketteExtension->ThreadReferenceCount - 1), &(FlFormat.DisketteExtension->IsReadOnly), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].DataLength, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].StepRateHeadUnloadTime, &(FlFormat.DisketteExtension->DriveMediaType), &(GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].BytesPerSector), IoQueryDeviceDescription.BusNumber, FlFormat.DisketteExtension->DriveMediaConstants.SectorsPerTrack, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].NumberOfHeads), ((int)FloppyStartDevice.irpSp->Control), FloppyStartDevice.irpSp->Control, FlStartDrive.DisketteExtension->BiosDriveMediaConstants.StepRateHeadUnloadTime, &(FlRecalibrateDrive.DisketteExtension->FifoBuffer)[1], &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].SkewDelta), FlRecalibrateDrive.DisketteExtension->FifoBuffer, FloppyAddDevice.PhysicalDeviceObject, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.SkewDelta, FloppyDeviceControl.outputBufferLength, FlFormat.DisketteExtension->DriveMediaType, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].SectorsPerTrack, &(FloppyPower.disketteExtension->FloppyThread), &(FloppyDeviceControl.outputBuffer->MediaType), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.StepRateHeadUnloadTime), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].SectorLengthCode), FlReadWrite.driveMediaConstants, FloppyThread.irpSp->MinorFunction, &(GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].MaximumTrack), &(FloppyDeviceControl.outputBuffer->TracksPerCylinder), FlReadWriteTrack.DisketteExtension, GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].BytesPerSector, &(FloppyPnp.disketteExtension->HoldNewRequests), &(FloppyStartDevice.disketteExtension->DriveType), IoCreateDevice.DriverObject, FloppyThread.irpSp, &(GLOBAL.DriveMediaConstants->MotorSettleTimeRead), ((FlFormat.formatParameters->StartCylinderNumber * ((int)FlFormat.driveMediaConstants->NumberOfHeads)) + FlFormat.formatParameters->StartHeadNumber), ((unsigned char)((FlFormat.formatParameters->StartCylinderNumber * ((int)FlFormat.driveMediaConstants->NumberOfHeads)) + FlFormat.formatParameters->StartHeadNumber)), &(FloppyAddDevice.disketteExtension->ThreadReferenceMutex.Event), &(FlConsolidateMediaTypeWithBootSector.readidDriveMediaConstants->MaximumTrack), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.SectorLengthCode), FloppyProcessQueuedRequests.DisketteExtension->DeviceObject, ((FlFormat.formatParameters->EndCylinderNumber * ((int)FlFormat.driveMediaConstants->NumberOfHeads)) + FlFormat.formatParameters->EndHeadNumber), ((unsigned char)((FlFormat.formatParameters->EndCylinderNumber * ((int)FlFormat.driveMediaConstants->NumberOfHeads)) + FlFormat.formatParameters->EndHeadNumber)), &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.SectorsPerTrack), &(FloppyStartDevice.irpSp->Context), &(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[3], ((int)&(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[2]), &(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[2], FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer, &(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[1], &(FloppyThread.irpSp->Flags), &(FloppyDeviceControl.queryTable.Name), &(FlHdbit.DisketteExtension->DeviceUnit), &(FlDetermineMediaType.ddriveMediaConstants->MaximumTrack), FlRecalibrateDrive.DisketteExtension, &(FloppyThread.disketteExtension->ReleaseFdcWithMotorRunning), FloppyUnload.DriverObject, &(GLOBAL.DriveMediaLimits[FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveType].LowestDriveMediaType), &(FlHdbit.setHdBitParameter.Media144MB), FlFormat.DisketteExtension->DriveMediaConstants.SkewDelta, IoAttachDeviceToDeviceStack.SourceDevice, FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveMediaConstants.SectorsPerTrack, &(FloppyDeviceControl.disketteExtension->InterfaceString.Length), FlDatarateSpecifyConfigure.DisketteExtension, ret$ExAllocatePoolWithTag, &(FloppyThread.irpSp->Parameters.DeviceIoControl.OutputBufferLength), &(GLOBAL.DriveMediaConstants->DataTransferRate), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->MediaByte), GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].MediaByte, &(FlFormat.formatParameters->MediaType), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].SectorsPerTrack, FlCheckFormatParameters.driveMediaType, ((unsigned int)FlCheckFormatParameters.driveMediaType), (((unsigned int)FlCheckFormatParameters.driveMediaType) - 1), ((typedef(DRIVE_MEDIA_TYPE))(((unsigned int)FlCheckFormatParameters.driveMediaType) - 1)), &(FloppyPower.disketteExtension->PoweringDown), &(FlFormat.formatExParameters->FormatGapLength), FloppyDeviceControl.outputBuffer->SectorsPerTrack, FlReadWrite.irpSp->Flags, ((int)FlReadWrite.irpSp->Flags), &(FloppyPnp.disketteExtension->ArcName), &(FloppyAddDevice.disketteExtension->ReleaseFdcWithMotorRunning), FlQueueIrpToThread.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation->Control, ((int)FlQueueIrpToThread.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation->Control), &(FloppyDeviceControl.disketteExtension->IsStarted), &(FlFinishOperation.DisketteExtension->HardwareFailCount), FloppyPnp.DeviceObject, GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].SectorsPerTrack, ((unsigned long)GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].SectorsPerTrack), &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].HeadSettleTime), GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].HeadLoadTime, FlFormat.DisketteExtension->DriveMediaConstants.SectorLengthCode, &(FloppyStartDevice.irpSp->Control), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.SectorsPerTrack), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MotorOffTime, FlHdbit.setHdBitParameter.ChangedHdBit, &(FlDatarateSpecifyConfigure.DisketteExtension->LastDriveMediaType), FloppyDeviceControl.DeviceObject->DeviceExtension, ((ptr(typedef(DISKETTE_EXTENSION)))FloppyDeviceControl.DeviceObject->DeviceExtension), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiSupported), FlStartDrive.DisketteExtension->DriveMediaConstants.HeadSettleTime, &(FloppyAddDevice.deviceObject->AlignmentRequirement), &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.BytesPerSector), &(FlFormat.driveMediaConstants->FormatFillCharacter), &(FlFormat.DisketteExtension->MediaType), FlReadWriteTrack.driveMediaConstants->DataLength, FloppyStartDevice.fdcInfo.MaxTransferSize, FlFormat.DisketteExtension->DriveMediaConstants.DataLength, &(FlReadWrite.driveMediaConstants->NumberOfHeads), &(FloppyProcessQueuedRequests.DisketteExtension->FlCancelSpinLock), FloppyStartDevice.disketteExtension->TargetObject, FlReadWrite.irpSp->MajorFunction, &(GLOBAL.DriveMediaConstants->MediaByte), &(FloppyPower.disketteExtension->PowerDownMutex), &(FloppyDeviceControl.suggestedName->Name)[13], &(FlFreeIoBuffer.DisketteExtension->IoBufferSize), &(FloppyDeviceControl.suggestedName->Name)[12], FloppyAddDevice.tmp, ((ptr(typedef(WCHAR)))FloppyAddDevice.tmp), FlStartDrive.DisketteExtension->BiosDriveMediaConstants.SectorLengthCode, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].DataTransferRate), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MediaByte), &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].DataTransferRate), FloppyPower.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, &(FlStartDrive.DisketteExtension->DriveMediaConstants.MediaType), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MotorSettleTimeRead, &(FloppyPower.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation[1]), &(FloppyThread.disketteExtension->DriveMediaConstants.NumberOfHeads), &(FloppyThread.disketteExtension->FloppyControllerAllocated), FloppyPnp.disketteExtension->IsStarted, FloppyDeviceControl.uniqueId->UniqueIdLength, ((unsigned int)FloppyDeviceControl.uniqueId->UniqueIdLength), FloppyAddDevice.disketteExtension->DeviceName.Length, &(FlReadWrite.irpSp->Parameters.Read.ByteOffset.__annonCompField1), FloppyStartDevice.nextIrpSp->Control, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].BytesPerSector), &(FlFormat.DisketteExtension->DriveMediaConstants.CylinderShift), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].SectorsPerTrack, &(FlFormat.DisketteExtension->DriveMediaConstants.ReadWriteGapLength), &(FloppyThread.disketteExtension->FifoBuffer), &(&(FloppyThread.disketteExtension->FifoBuffer)[1]), &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MaximumTrack), memset.p, IoDeleteDevice.DeviceObject, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MediaType), &(FlQueueIrpToThread.DisketteExtension->PowerDownMutex), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].FormatFillCharacter), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->SectorsPerTrack), FloppyReadWrite.disketteExtension->ByteCapacity, FlReadWriteTrack.NumberOfSectors, ((unsigned long)FlReadWriteTrack.NumberOfSectors), FlStartDrive.DisketteExtension->BiosDriveMediaConstants.SectorsPerTrack, &(FloppyThread.irpSp->Parameters), FlIssueCommand.issueCommandParms.IoOffset, FloppyAddDevice.DriverObject, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].FormatGapLength), ret$MmAllocateContiguousMemory, FlDetermineMediaType.DisketteExtension->BytesPerSector, ExfInterlockedRemoveHeadList.ListHead, IoFreeMdl.Mdl, &(GLOBAL.DriveMediaLimits[FlDetermineMediaType.DisketteExtension->DriveType]), FlDatarateSpecifyConfigure.DisketteExtension->DriveMediaConstants.HeadLoadTime, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.SectorsPerTrack, ((unsigned char)(((int)&(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[2]) + 16)), (((int)&(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[2]) + 16), &(GLOBAL.DriveMediaConstants->DataLength), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].StepRateHeadUnloadTime), FloppyPnp.irpSp->CompletionRoutine, &(FloppyAddDevice.disketteExtension->DeviceName.MaximumLength), FlReadWriteTrack.IoMdl, &(FloppyAddDevice.disketteExtension->DeviceName.Length), FlDatarateSpecifyConfigure.DisketteExtension->LastDriveMediaType, FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MediaType, ((unsigned char)(((int)&(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[2]) + 64)), (((int)&(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[2]) + 64), &(FlFormat.DisketteExtension->DriveMediaConstants.MaximumTrack), FlAcpiConfigureFloppy.biosDriveMediaConstants->BytesPerSector, &(GLOBAL.DriveMediaConstants->SkewDelta), FlStartDrive.DisketteExtension->BiosDriveMediaConstants.HeadLoadTime, FlReadWrite.DisketteExtension->IoBufferMdl, &(FlDatarateSpecifyConfigure.DisketteExtension->TargetObject), &(FlDatarateSpecifyConfigure.DisketteExtension->DriveMediaConstants.DataTransferRate), GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].NumberOfHeads, ((unsigned long)GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].NumberOfHeads), FlAcpiConfigureFloppy.biosDriveMediaConstants->HeadLoadTime, FlCheckBootSector.DisketteExtension, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].StepRateHeadUnloadTime), ((((int)FlReadWrite.numTransferSectors) + ((int)FlReadWrite.trackSector)) - ((unsigned long)FlReadWrite.skew)), ((unsigned char)((((int)FlReadWrite.numTransferSectors) + ((int)FlReadWrite.trackSector)) - ((unsigned long)FlReadWrite.skew))), FloppyDeviceControl.driveLetterName.Buffer, &(FlCheckFormatParameters.FormatParameters->MediaType), &(FloppyDeviceControl.driveLetterName.Buffer[1]), FlAcpiConfigureFloppy.biosDriveMediaConstants->FormatGapLength, &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MediaByte), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MaximumTrack, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].DataLength), FlFormat.length, FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MotorSettleTimeWrite, FloppyThread.outputBuffer->BytesPerSector, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].BytesPerSector, FloppyDeviceControl.disketteExtension->InterfaceString.Length, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].ReadWriteGapLength), FlDetermineMediaType.DisketteExtension->DriveMediaConstants.SectorLengthCode, &(FloppyCancelQueuedRequest.EEX_Blink->Flink), &(GLOBAL.DriveMediaConstants->MediaType), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MediaType), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].SectorsPerTrack), FloppyThread.disketteExtension->HardwareFailed, FloppyPower.Irp->IoStatus.Information, &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.FormatGapLength), &(FloppyDeviceControl.queryTable.EntryContext), IoRegisterDeviceInterface.PhysicalDeviceObject, &(FlDatarateSpecifyConfigure.DisketteExtension->DriveMediaType), memcpy.t, &(FloppyThread.irpSp->MajorFunction), &(FlConsolidateMediaTypeWithBootSector.DisketteExtension->ByteCapacity), FlQueueIrpToThread.irpSp, &(FlFreeIoBuffer.DisketteExtension->IoBuffer), &(FlFormat.DisketteExtension->DriveMediaConstants.SkewDelta), &(GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].MediaByte), GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].DataTransferRate, &(FloppyProcessQueuedRequests.DisketteExtension->NewRequestQueue), FloppyPower.disketteExtension->ThreadReferenceCount, FlFormat.DisketteExtension->BytesPerSector, FloppyAddDevice.disketteExtension, &(GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].MediaType), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MediaByte, FloppyDeviceControl.DeviceObject, FlConsolidateMediaTypeWithBootSector.n, FloppyPnp.Irp->IoStatus.__annonCompField4.Status, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].NumberOfHeads, ((ptr(void))FloppyStartDevice.disketteExtension), FloppyStartDevice.disketteExtension, &(FloppyPower.DeviceObject->DeviceExtension), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType]), &(FloppyThread.disketteExtension->ThreadReferenceCount), &(FloppyAddDevice.disketteExtension->FloppyControllerAllocated), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].NumberOfHeads), FlStartDrive.DisketteExtension->DriveMediaConstants.SectorsPerTrack, &(FloppyPnp.disketteExtension->IsStarted), FloppyStartDevice.disketteExtension->DeviceUnit, &(GLOBAL.DriveMediaLimits[FlDetermineMediaType.DisketteExtension->DriveType].LowestDriveMediaType), RtlAnsiStringToUnicodeString.DestinationString, FlFormat.DisketteExtension->DriveMediaConstants.MotorOffTime, &(FlFormat.DisketteExtension->DriveMediaConstants.MediaType), &(FlFormat.DisketteExtension->DriveType), FlConfigCallBack.biosDriveMediaConstants->ReadWriteGapLength, &(FlStartDrive.DisketteExtension->DriveMediaConstants.CylinderShift), &(FlDatarateSpecifyConfigure.DisketteExtension->DriveMediaConstants.StepRateHeadUnloadTime), GLOBAL.DriveMediaConstants->DataLength, *FloppyDeviceControl.driveLetterName.Buffer, FloppyDeviceControl.driveLetterName.Buffer[1], &(&(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[3]), &(&(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[2]), &(&(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[1]), FlFinishOperation.DisketteExtension, &(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer), &(FlStartDrive.DisketteExtension->DriveMediaConstants.FormatGapLength), FlConfigCallBack.biosDriveMediaConstants->SkewDelta, &(FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveType), FlStartDrive.DisketteExtension->DeviceObject, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MotorSettleTimeRead), FlAcpiConfigureFloppy.biosDriveMediaConstants->MediaType, &(FlStartDrive.DisketteExtension->HardwareFailed), &(FlDatarateSpecifyConfigure.DisketteExtension->DriveMediaConstants.HeadLoadTime), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiSupported, &(FloppyThread.disketteExtension->MediaType), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].NumberOfHeads, &(FloppyDeviceControl.disketteExtension->InterfaceString.Buffer), FlFormat.DisketteExtension->DriveMediaConstants.CylinderShift, *IoCreateDevice.DeviceObject, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MotorSettleTimeRead), &(GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].MaximumTrack), &(FlDetermineMediaType.DisketteExtension->BytesPerSector), FlStartDrive.DisketteExtension->DeviceObject->Vpb->Flags, FlAllocateIoBuffer.DisketteExtension->MaxTransferSize, &(FlFinishOperation.DisketteExtension->MediaType), &(FlReadWrite.DisketteExtension->MediaType), IoSetDeviceInterfaceState.SymbolicLinkName, &(FloppyThread.disketteExtension->PowerDownMutex), FloppyAddDevice.disketteExtension->DeviceName.MaximumLength, FlConfigCallBack.biosDriveMediaConstants->DataLength, IoAttachDeviceToDeviceStack.TargetDevice, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MediaByte, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].BytesPerSector), FlFormat.formatExParameters->SectorsPerTrack, ((unsigned char)FlFormat.formatExParameters->SectorsPerTrack), FloppyDeviceControl.irpSp, FloppyReadWrite.DeviceObject, FloppyStartDevice.disketteExtension->HoldNewRequests, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].DataLength, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MaximumTrack, GLOBAL.DriveMediaConstants->ReadWriteGapLength, FlIssueCommand.IoMdl, ((ptr(void))FlIssueCommand.IoMdl), FlDatarateSpecifyConfigure.DisketteExtension->DriveMediaConstants.CylinderShift, FlConfigCallBack.biosDriveMediaConstants->HeadSettleTime, FloppyReadWrite.disketteExtension, ((int)FlDetermineMediaType.ddriveMediaConstants->MaximumTrack), FlDetermineMediaType.ddriveMediaConstants->MaximumTrack, (1 + ((int)FlDetermineMediaType.ddriveMediaConstants->MaximumTrack)), ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.SectorPerTrack), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.SectorPerTrack, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MaximumTrack), GLOBAL.DriveMediaLimits[FlFormat.DisketteExtension->DriveType].LowestDriveMediaType, FlStartDrive.DisketteExtension->DriveMediaConstants.SkewDelta, &(FloppyStartDevice.fdcInfo.BufferCount), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].FormatGapLength, (((int)FloppyDeviceControl.Irp->CurrentLocation) + 1), ((typedef(CHAR))(((int)FloppyDeviceControl.Irp->CurrentLocation) + 1)), FloppyThread.outputBuffer->TracksPerCylinder, FloppyDeviceControl.Irp->CurrentLocation, ((int)FloppyDeviceControl.Irp->CurrentLocation), &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.DataLength), FloppyDeviceControl.queryTable.Flags, &(FlFormat.DisketteExtension->DriveMediaConstants.MotorSettleTimeRead), &(GLOBAL.DriveMediaConstants->HeadSettleTime), FlQueueIrpToThread.Irp->IoStatus.Information, &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.SkewDelta), &(FlStartDrive.DisketteExtension->DriveMediaConstants.NumberOfHeads), &(FlFormat.formatParameters->EndHeadNumber), FlStartDrive.DisketteExtension->DriveOnValue, FlRecalibrateDrive.fifoBuffer, &(FlRecalibrateDrive.fifoBuffer)[1], FlConfigCallBack.biosDriveMediaConstants->FormatGapLength, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType]), FlAcpiConfigureFloppy.biosDriveMediaConstants->MaximumTrack, FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MediaByte, &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MotorOffTime), &(FlFormat.DisketteExtension->DriveMediaConstants.MediaByte), RtlFreeUnicodeString.UnicodeString, &(FloppyAddDevice.deviceName.Length), ((ptr(void))FlCheckBootSector.bootSector), FlCheckBootSector.bootSector, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].SectorLengthCode), FloppyAddDevice.fdcInfo.BufferCount, FlConsolidateMediaTypeWithBootSector.bpbMediaType, &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MotorSettleTimeRead), &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MotorSettleTimeWrite), ExfInterlockedInsertHeadList.ListHead, &(FlFormat.DisketteExtension->IoBuffer), &(FloppyDeviceControl.driveLetterName.Length), FlInterpretError.StatusRegister1, FlFormat.DisketteExtension->DriveMediaConstants.MotorSettleTimeRead, FlFinishOperation.DisketteExtension->ThreadReferenceCount, (FlFinishOperation.DisketteExtension->ThreadReferenceCount + 1), FlFormat.driveMediaConstants, GLOBAL.DriveMediaConstants->SkewDelta, FlFreeIoBuffer.DisketteExtension, &(FloppyStartDevice.fdcInfo.ControllerNumber), FlCheckFormatParameters.DisketteExtension, &(FloppyThread.disketteExtension->DriveMediaConstants.BytesPerSector), ((int)FlFinishOperation.DisketteExtension->HardwareFailCount), FlFinishOperation.DisketteExtension->HardwareFailCount, ((typedef(UCHAR))(((int)FlFinishOperation.DisketteExtension->HardwareFailCount) + 1)), (((int)FlFinishOperation.DisketteExtension->HardwareFailCount) + 1), FlIssueCommand.FifoOutBuffer, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MotorSettleTimeWrite, &(FloppyThread.disketteExtension->DeviceObject), FlIssueCommand.FifoInBuffer, FloppyReadWrite.Irp->IoStatus.Information, FloppyThread.irp->IoStatus.__annonCompField4.Status, &(FloppyPower.irpSp->Parameters.Power.Type), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.MaxCylinderNumber), &(FloppyStartDevice.disketteExtension->DriveOnValue), &(FloppyThread.outputBuffer->BytesPerSector), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].BytesPerSector, &(GLOBAL.DriveMediaLimits[FloppyDeviceControl.disketteExtension->DriveType].LowestDriveMediaType), GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].SectorsPerTrack, FlFormat.fdcDiskChangeParms.DriveStatus, &(FloppyDeviceControl.DeviceObject->Characteristics), &(FloppyDeviceControl.queryTable.Flags), FloppyPower.disketteExtension->PoweringDown, &(FloppyProcessQueuedRequests.DisketteExtension->DeviceObject), FlDetermineMediaType.sectorLengthCode, FlDetermineMediaType.DisketteExtension->ByteCapacity, &(FloppyStartDevice.fdcInfo.BufferSize), &(FlFormat.DisketteExtension->DriveMediaConstants.BytesPerSector), FlStartDrive.DisketteExtension->DriveMediaConstants.FormatGapLength, GLOBAL.DriveMediaConstants->BytesPerSector, FlFormat.DisketteExtension->DriveMediaConstants.ReadWriteGapLength, &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.StepRateHeadUnloadTime), GLOBAL.DriveMediaLimits[FlCheckFormatParameters.DisketteExtension->DriveType].HighestDriveMediaType, GLOBAL.DriveMediaLimits[FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveType].HighestDriveMediaType, ((unsigned long)GLOBAL.DriveMediaLimits[FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveType].HighestDriveMediaType), &(FloppyDeviceControl.disketteExtension->DriveType), FlStartDrive.DisketteExtension->DriveMediaConstants.DataLength, &(FlReadWriteTrack.DisketteExtension->HardwareFailed), FloppyThread.outputBuffer->MediaType, &(FlAcpiConfigureFloppy.biosDriveMediaConstants->DataTransferRate), &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].SectorLengthCode), FloppyStartDevice.fdcInfo.AcpiBios, &(FlHdbit.setHdBitParameter.ChangedHdBit), &(FloppyStartDevice.disketteExtension->HoldNewReqMutex), &(FloppyAddDevice.disketteExtension->NewRequestQueueSpinLock), FlStartDrive.DisketteExtension->DriveMediaConstants.FormatFillCharacter, FlReadWrite.numTransferSectors, ((int)FlReadWrite.numTransferSectors), &(FloppyPnp.irpSp->Control), FloppyAddDevice.fdcInfo.BufferSize, FlReadWrite.Irp->IoStatus.Information, &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MediaType), FloppyPower.irpSp, FloppyProcessQueuedRequests.currentIrp->IoStatus.Information, &(FloppyAddDevice.fdcInfo.BufferSize), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].FormatFillCharacter, ((ptr(typedef(DISKETTE_EXTENSION)))FloppyStartDevice.DeviceObject->DeviceExtension), FloppyStartDevice.DeviceObject->DeviceExtension, GLOBAL.pirp->IoStatus.__annonCompField4.Status, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MediaByte, DriverEntry.DriverObject, &(FloppyDeviceControl.irpSp->Parameters), &(FlStartDrive.DisketteExtension->DeviceUnit), GLOBAL.DriveMediaConstants->HeadSettleTime, GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].SectorsPerTrack, FloppyCancelQueuedRequest.DeviceObject->DeviceExtension, ((ptr(typedef(DISKETTE_EXTENSION)))FloppyCancelQueuedRequest.DeviceObject->DeviceExtension), &(FlInitializeControllerHardware.DisketteExtension->PerpendicularMode), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.NumberOfHeads), KeReleaseSemaphore.Semaphore, &(GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->BytesPerSector), FlStartDrive.fdcEnableParms.MotorStarted, &(FloppyPnp.doneEvent), &(main.devobj), &(FloppyStartDevice.fdcInfo), &(FlHdbit.setHdBitParameter), &(FloppyDeviceControl.queryTable), &(FlFdcDeviceIo.doneEvent), &(FloppyPnpComplete), &(FlIssueCommand.issueCommandParms), &(FlStartDrive.fdcEnableParms), &(FloppyDeviceControl.driveLetterNameBuffer), &(FlFormat.fdcDiskChangeParms), &(main.d), &(FloppyAddDevice.fdcInfo), &(FloppyAddDevice.deviceName), &(FloppyStartDevice.doneEvent), &(FloppyDeviceControl.driveLetterName), &(FlStartDrive.fdcDiskChangeParms), malloc3, malloc4, malloc1, malloc0]
 [((ptr(char))&(FloppyAddDevice.arcNameBuffer)), RtlInitString.SourceString, &(FloppyAddDevice.arcNameBuffer)]
 [IoQueryDeviceDescription.ControllerType, &(FloppyStartDevice.Dc)]
 [&(FloppyDeviceControl.Irp->AssociatedIrp), FlFormat.Irp, &(FloppyReadWrite.Irp->Tail), &(FloppyQueueRequest.Irp->Cancel), FloppyDeviceControl.Irp, &(FlQueueIrpToThread.Irp->Tail.Overlay.__annonCompField17.__annonCompField16), GLOBAL.pirp, &(FloppyCancelQueuedRequest.Irp->Tail.Overlay.__annonCompField17.ListEntry.Flink), &(FloppyDeviceControl.Irp->IoStatus.__annonCompField4), &(FloppyDeviceControl.Irp->IoStatus.__annonCompField4.Status), &(FloppyPnp.Irp->Tail.Overlay), &(FloppyProcessQueuedRequests.currentIrp->Tail.Overlay.__annonCompField17.__annonCompField16), &(FloppyStartDevice.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), &(FloppyDeviceControl.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), IoBuildDeviceIoControlRequest.tmp, ((ptr(typedef(CHAR)))FloppyProcessQueuedRequests.headOfList), FloppyProcessQueuedRequests.headOfList, &(FloppyQueueRequest.Irp->IoStatus.__annonCompField4.Status), &(FloppyProcessQueuedRequests.currentIrp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), &(((enum(_MEDIA_TYPE))0)->Tail.Overlay.__annonCompField17.ListEntry), ((unsigned long)&(((enum(_MEDIA_TYPE))0)->Tail.Overlay.__annonCompField17.ListEntry)), &(FloppyQueueRequest.Irp->Tail.Overlay.__annonCompField17.ListEntry), &(FlQueueIrpToThread.Irp->Tail), &(FloppyCancelQueuedRequest.Irp->Tail.Overlay.__annonCompField17.ListEntry.Blink), &(FloppyPower.Irp->IoStatus), &(FlFdcDeviceIo.irp->Tail.Overlay), FloppyProcessQueuedRequests.currentIrp, &(FloppyDeviceControl.Irp->IoStatus.Information), FlFdcDeviceIo.irp, &(FloppyThread.irp->Tail.Overlay.__annonCompField17), PoCallDriver.Irp, &(FloppyPower.Irp->IoStatus.__annonCompField4.Status), &(FloppyPnp.Irp->Tail.Overlay.__annonCompField17.__annonCompField16), &(FlQueueIrpToThread.Irp->IoStatus.__annonCompField4), FloppyCreateClose.Irp, &(FlDetermineMediaType.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), FloppyPower.Irp, &(FlDetermineMediaType.irp->CurrentLocation), &(FlQueueIrpToThread.Irp->Tail.Overlay.__annonCompField17), PoStartNextPowerIrp.Irp, &(FloppyCancelQueuedRequest.Irp->Tail), &(FloppyQueueRequest.Irp->Tail.Overlay), &(FloppyPnp.Irp->IoStatus.Information), (((ptr(typedef(CHAR)))FloppyProcessQueuedRequests.headOfList) - ((unsigned long)&(((enum(_MEDIA_TYPE))0)->Tail.Overlay.__annonCompField17.ListEntry))), &(FloppyProcessQueuedRequests.currentIrp->Tail.Overlay.__annonCompField17), &(FlReadWrite.Irp->IoStatus), &(FloppyPower.Irp->CurrentLocation), &(FlReadWrite.Irp->Tail), &(FlQueueIrpToThread.Irp->IoStatus.Information), &(FloppyProcessQueuedRequests.currentIrp->Tail), &(FlCheckBootSector.irp->Tail.Overlay.__annonCompField17.__annonCompField16), &(FloppyStartDevice.Irp->IoStatus.__annonCompField4), FlFinishOperation.Irp, IofCallDriver.Irp, FlQueueIrpToThread.Irp, &(GLOBAL.pirp->IoStatus.__annonCompField4), IofCompleteRequest.Irp, FloppyPnpComplete.Irp, &(FloppyDeviceControl.Irp->IoStatus), &(FlReadWrite.Irp->IoStatus.Information), &(FlCheckBootSector.irp->Tail), &(FloppyProcessQueuedRequests.currentIrp->Tail.Overlay), ret$IoBuildAsynchronousFsdRequest, ret$ExfInterlockedRemoveHeadList, &(((enum(_MEDIA_TYPE))0)->Tail.Overlay), &(FloppyReadWrite.Irp->Tail.Overlay.__annonCompField17), ExfInterlockedInsertTailList.ListEntry, &(FloppyPnp.Irp->IoStatus.__annonCompField4), &(FloppyThread.irp->Tail), &(FloppyStartDevice.Irp->IoStatus), &(FloppyPower.Irp->Tail.Overlay), &(FloppyCancelQueuedRequest.Irp->Tail.Overlay), FlDetermineMediaType.irp, &(FlDetermineMediaType.irp->Tail), &(GLOBAL.pirp->IoStatus), FloppyReadWrite.Irp, &(FloppyCancelQueuedRequest.Irp->IoStatus), FloppyQueueRequest.Irp, &(FloppyReadWrite.Irp->IoStatus.__annonCompField4), &(FlDetermineMediaType.irp->MdlAddress), &(FlFdcDeviceIo.irp->Tail.Overlay.__annonCompField17.__annonCompField16), &(FloppyDeviceControl.Irp->Tail), &(FlReadWrite.Irp->Tail.Overlay.__annonCompField17.__annonCompField16), &(FlQueueIrpToThread.Irp->IoStatus), &(FloppyProcessQueuedRequests.currentIrp->Tail.Overlay.__annonCompField17.ListEntry.Flink), &(FloppyCreateClose.Irp->IoStatus), &(FloppyDeviceControl.Irp->CurrentLocation), &(FloppyReadWrite.Irp->IoStatus.__annonCompField4.Status), &(FloppyCancelQueuedRequest.Irp->Tail.Overlay.__annonCompField17), FlCheckBootSector.irp, &(FlFormat.Irp->Tail.Overlay.__annonCompField17), &(FloppyStartDevice.Irp->Tail), &(FloppyCancelQueuedRequest.Irp->IoStatus.Information), &(FloppyPnp.Irp->Tail), &(FloppyQueueRequest.Irp->IoStatus.__annonCompField4), &(FlFormat.Irp->AssociatedIrp.SystemBuffer), &(FloppyThread.irp->IoStatus.__annonCompField4), &(FloppyPower.Irp->IoStatus.Information), &(FloppyDeviceControl.Irp->Tail.Overlay), &(FloppyQueueRequest.Irp->Tail.Overlay.__annonCompField17), &(FlFormat.Irp->Tail.Overlay.__annonCompField17.__annonCompField16), &(FloppyThread.irp->AssociatedIrp.SystemBuffer), &(FloppyPower.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), &(FlFormat.Irp->Tail.Overlay), &(FlCheckBootSector.irp->CurrentLocation), &(FloppyThread.irp->Tail.Overlay.__annonCompField17.__annonCompField16), &(FlReadWrite.Irp->MdlAddress), &(FloppyReadWrite.Irp->Tail.Overlay), IoSetHardErrorOrVerifyDevice.Irp, &(FloppyCancelQueuedRequest.Irp->CancelIrql), &(FloppyDeviceControl.Irp->Tail.Overlay.__annonCompField17.__annonCompField16), &(FloppyReadWrite.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), &(FloppyPnp.Irp->IoStatus.__annonCompField4.Status), &(FloppyPnp.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), &(FloppyStartDevice.Irp->Tail.Overlay), &(FlFdcDeviceIo.irp->Tail.Overlay.__annonCompField17), &(FloppyPnp.Irp->Tail.Overlay.__annonCompField17), FloppyThread.irp, &(FloppyReadWrite.Irp->IoStatus), &(FlQueueIrpToThread.Irp->IoStatus.__annonCompField4.Status), &(FloppyProcessQueuedRequests.currentIrp->Tail.Overlay.__annonCompField17.ListEntry), &(FloppyCreateClose.Irp->IoStatus.Information), &(FloppyPnp.Irp->IoStatus), FloppyCancelQueuedRequest.Irp, &(FloppyPnp.Irp->CurrentLocation), &(FloppyQueueRequest.Irp->IoStatus), ret$IoBuildDeviceIoControlRequest, &(FloppyCancelQueuedRequest.Irp->IoStatus.__annonCompField4), &(FlQueueIrpToThread.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), &(FloppyPower.Irp->Tail), InterlockedExchange.Target, &(FloppyThread.irp->AssociatedIrp), &(FloppyThread.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), &(FloppyPower.Irp->Tail.Overlay.__annonCompField17.__annonCompField16), &(FlCheckBootSector.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), &(FlDetermineMediaType.irp->Tail.Overlay.__annonCompField17), IoFreeIrp.Irp, &(FlReadWrite.Irp->Tail.Overlay), IoBuildAsynchronousFsdRequest.tmp, &(FlDetermineMediaType.irp->Tail.Overlay.__annonCompField17.__annonCompField16), &(FlFormat.Irp->AssociatedIrp), &(FlCheckBootSector.irp->Tail.Overlay), &(FloppyProcessQueuedRequests.currentIrp->IoStatus.__annonCompField4.Status), &(FloppyCancelQueuedRequest.Irp->Tail.Overlay.__annonCompField17.ListEntry), &(FlReadWrite.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), &(FlCheckBootSector.irp->Tail.Overlay.__annonCompField17), &(FloppyCancelQueuedRequest.Irp->IoStatus.__annonCompField4.Status), &(FlFinishOperation.Irp->Tail.Overlay), &(FloppyReadWrite.Irp->IoStatus.Information), FlStartDrive.Irp, &(FloppyQueueRequest.Irp->CancelRoutine), &(FlFdcDeviceIo.irp->Tail), FlReadWrite.Irp, &(FlFdcDeviceIo.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), &(FlFinishOperation.Irp->Tail.Overlay.__annonCompField17.ListEntry), &(FloppyPower.Irp->Tail.Overlay.__annonCompField17), &(FloppyThread.irp->IoStatus), &(FloppyDeviceControl.Irp->AssociatedIrp.SystemBuffer), &(FlReadWrite.Irp->Tail.Overlay.__annonCompField17), &(FloppyCreateClose.Irp->IoStatus.__annonCompField4.Status), &(FlDetermineMediaType.irp->Tail.Overlay), &(FloppyProcessQueuedRequests.currentIrp->IoStatus.__annonCompField4), &(((enum(_MEDIA_TYPE))0)->Tail), &(FloppyPower.Irp->IoStatus.__annonCompField4), &(FlFinishOperation.Irp->Tail), &(FloppyCreateClose.Irp->IoStatus.__annonCompField4), &(FloppyQueueRequest.Irp->IoStatus.Information), &(FloppyStartDevice.Irp->IoStatus.__annonCompField4.Status), FloppyThread.request, ((ptr(typedef(CHAR)))FloppyThread.request), &(FlCheckBootSector.irp->MdlAddress), &(FloppyThread.irp->IoStatus.__annonCompField4.Status), (((ptr(typedef(CHAR)))FloppyThread.request) - ((unsigned long)&(((enum(_MEDIA_TYPE))0)->Tail.Overlay.__annonCompField17.ListEntry))), &(FlQueueIrpToThread.Irp->Tail.Overlay.__annonCompField17.ListEntry), &(GLOBAL.pirp->IoStatus.__annonCompField4.Status), FloppyPnp.Irp, &(FlFormat.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), &(FloppyReadWrite.Irp->Tail.Overlay.__annonCompField17.__annonCompField16), &(FloppyThread.irp->Tail.Overlay), FloppyStartDevice.Irp, &(((enum(_MEDIA_TYPE))0)->Tail.Overlay.__annonCompField17), &(FlFormat.Irp->Tail), &(FlFinishOperation.Irp->Tail.Overlay.__annonCompField17), &(FloppyStartDevice.Irp->Tail.Overlay.__annonCompField17.__annonCompField16), &(FloppyQueueRequest.Irp->Tail), &(FloppyThread.irp->IoStatus.Information), &(FloppyDeviceControl.Irp->Tail.Overlay.__annonCompField17), &(FloppyProcessQueuedRequests.currentIrp->IoStatus), &(FloppyProcessQueuedRequests.currentIrp->IoStatus.Information), &(FlQueueIrpToThread.Irp->Tail.Overlay), ExfInterlockedInsertHeadList.ListEntry, &(FloppyStartDevice.Irp->Tail.Overlay.__annonCompField17), &(main.irp), malloc6, malloc2]
 [ret$memset, memset.x]
 [FlDetermineMediaType.offset.__annonCompField1.LowPart, FlCheckBootSector.offset.__annonCompField1.LowPart, FlCheckBootSector.offset.__annonCompField1.HighPart, FlDetermineMediaType.offset.__annonCompField1.HighPart]
 [&(FloppyThread.acquireWait.QuadPart), &(FloppyThread.acquireWait)]
 [FlConfigCallBack.PeripheralInformation, &(FlConfigCallBack.PeripheralInformation[1])]
 [DriverEntry.RegistryPath, &(main.u)]
 [PsCreateSystemThread.StartRoutine, FlQueueIrpToThread.MyFloppyThread]
 [&(FlCheckBootSector.offset.__annonCompField1.LowPart), &(FlDetermineMediaType.offset.__annonCompField1), &(FlCheckBootSector.offset.__annonCompField1.HighPart), &(FlCheckBootSector.offset.__annonCompField1), IoBuildAsynchronousFsdRequest.StartingOffset, &(FlDetermineMediaType.offset.__annonCompField1.HighPart), &(FlDetermineMediaType.offset.__annonCompField1.LowPart), &(FlDetermineMediaType.offset), &(FlCheckBootSector.offset)]
 [PsCreateSystemThread.ThreadHandle, &(FlQueueIrpToThread.threadHandle)]
 [((long)&(FloppyCancelQueuedRequest)), InterlockedExchange.Value, &(FloppyCancelQueuedRequest)]
 [PsCreateSystemThread.ObjectAttributes, &(FlQueueIrpToThread.ObjAttributes)]
 [&(FlReadWriteTrack.headSettleTime.__annonCompField1.HighPart), &(FlFormat.headSettleTime.__annonCompField1), &(FlReadWriteTrack.headSettleTime.__annonCompField1), &(FlFormat.headSettleTime.__annonCompField1.LowPart), &(FlFormat.headSettleTime.__annonCompField1.HighPart), KeDelayExecutionThread.Interval, &(FlStartDrive.delay.__annonCompField1.LowPart), &(FlStartDrive.delay.__annonCompField1), &(FlReadWriteTrack.headSettleTime.__annonCompField1.LowPart), &(FlStartDrive.delay.__annonCompField1.HighPart), &(FlReadWriteTrack.headSettleTime), &(FlStartDrive.delay), &(FlFormat.headSettleTime)]
 [FlAllocateIoBuffer.maxDmaAddress, FlAllocateIoBuffer.maxDmaAddress.QuadPart]
 [FlQueueIrpToThread.threadHandle, ZwClose.Handle, ObReferenceObjectByHandle.Handle]
 [&(FloppyPower.state.SystemState), &(FloppyPower.state)]
 [ret$memcpy, memcpy.x]
 [&(FlConfigCallBack.biosDriveMediaConstants->CylinderShift), &(FlConfigCallBack.biosDriveMediaConstants->MotorOffTime), &(FlConfigCallBack.biosDriveMediaConstants->DataTransferRate), &(FlConfigCallBack.biosDriveMediaConstants->ReadWriteGapLength), &(FlConfigCallBack.biosDriveMediaConstants->HeadLoadTime), &(FlConfigCallBack.biosDriveMediaConstants->StepRateHeadUnloadTime), &(FlConfigCallBack.biosDriveMediaConstants->FormatGapLength), &(FlConfigCallBack.biosDriveMediaConstants->SectorsPerTrack), FlConfigCallBack.disketteExtension, &(FlConfigCallBack.disketteExtension->BiosDriveMediaConstants), &(FlConfigCallBack.biosDriveMediaConstants->SectorLengthCode), &(FlConfigCallBack.biosDriveMediaConstants->FormatFillCharacter), FlConfigCallBack.biosDriveMediaConstants, &(FlConfigCallBack.biosDriveMediaConstants->MaximumTrack), &(FlConfigCallBack.biosDriveMediaConstants->SkewDelta), &(FlConfigCallBack.biosDriveMediaConstants->DataLength), &(FlConfigCallBack.biosDriveMediaConstants->MotorSettleTimeWrite), &(FlConfigCallBack.biosDriveMediaConstants->BytesPerSector), &(FlConfigCallBack.biosDriveMediaConstants->HeadSettleTime), &(FlConfigCallBack.biosDriveMediaConstants->NumberOfHeads), ((ptr(typedef(DISKETTE_EXTENSION)))FlConfigCallBack.Context), FlConfigCallBack.Context, &(FlConfigCallBack.disketteExtension->DriveType), &(FlConfigCallBack.biosDriveMediaConstants->MediaType), &(FlConfigCallBack.biosDriveMediaConstants->MediaByte), &(FlConfigCallBack.biosDriveMediaConstants->MotorSettleTimeRead)]
 ["MSDMF3.", RtlCompareMemory.Source2]
 [IoCreateDevice.DeviceObject, &(FloppyAddDevice.deviceObject)]
 [IoRegisterDeviceInterface.InterfaceClassGuid, &(GLOBAL.MOUNTDEV_MOUNTED_DEVICE_GUID)]
 [FlConfigCallBack.peripheralData->PartialResourceList.Count, FlConfigCallBack.PeripheralInformation[1]->DataOffset, FlConfigCallBack.PeripheralInformation[1]->DataLength, FlConfigCallBack.fDeviceData->DataTransferLength, FlConfigCallBack.fDeviceData->FormatFillCharacter, FlConfigCallBack.fDeviceData->HeadLoadTime, FlConfigCallBack.fDeviceData->Version, FlConfigCallBack.fDeviceData->FormatGapLength, FlConfigCallBack.fDeviceData->StepRateHeadUnloadTime, FlConfigCallBack.fDeviceData->SectorPerTrack, FlConfigCallBack.fDeviceData->SectorLengthCode, FlConfigCallBack.partial->Type, FlConfigCallBack.fDeviceData->MaximumTrackValue, FlConfigCallBack.fDeviceData->MotorSettleTime, FlConfigCallBack.fDeviceData->ReadWriteGapLength, FlConfigCallBack.fDeviceData->HeadSettleTime, FlConfigCallBack.fDeviceData->MotorOffTime, FlConfigCallBack.fDeviceData->MaxDensity]
 [&(&(FlRecalibrateDrive.fifoBuffer)[1]), &(FlRecalibrateDrive.fifoBuffer)]
 [IofCallDriver.lcontext, PoCallDriver.lcontext, ((ptr(struct(_KEVENT)))FloppyPnpComplete.Context), FloppyPnpComplete.Context, KeSetEvent.Event]
 [FlStartDrive.delay.__annonCompField1.HighPart, FlFormat.headSettleTime.__annonCompField1.LowPart, FlReadWriteTrack.headSettleTime.__annonCompField1.LowPart, FlFormat.headSettleTime.__annonCompField1.HighPart, FlStartDrive.delay.__annonCompField1.LowPart, FlReadWriteTrack.headSettleTime.__annonCompField1.HighPart]
