 [&(FlConfigCallBack.biosDriveMediaConstants->DataTransferRate), &(FlConfigCallBack.biosDriveMediaConstants->MotorSettleTimeWrite), &(FlConfigCallBack.biosDriveMediaConstants->HeadLoadTime), &(FlConfigCallBack.biosDriveMediaConstants->ReadWriteGapLength), &(FlConfigCallBack.biosDriveMediaConstants->SectorsPerTrack), &(FlConfigCallBack.biosDriveMediaConstants->CylinderShift), &(FlConfigCallBack.disketteExtension->DriveType), &(FlConfigCallBack.biosDriveMediaConstants->MaximumTrack), &(FlConfigCallBack.biosDriveMediaConstants->FormatFillCharacter), &(FlConfigCallBack.biosDriveMediaConstants->BytesPerSector), FlConfigCallBack.biosDriveMediaConstants, &(FlConfigCallBack.biosDriveMediaConstants->SectorLengthCode), &(FlConfigCallBack.biosDriveMediaConstants->MotorSettleTimeRead), &(FlConfigCallBack.biosDriveMediaConstants->StepRateHeadUnloadTime), &(FlConfigCallBack.biosDriveMediaConstants->FormatGapLength), &(FlConfigCallBack.biosDriveMediaConstants->MotorOffTime), &(FlConfigCallBack.disketteExtension->BiosDriveMediaConstants), FlConfigCallBack.Context, ((ptr(typedef(DISKETTE_EXTENSION)))FlConfigCallBack.Context), &(FlConfigCallBack.biosDriveMediaConstants->MediaByte), &(FlConfigCallBack.biosDriveMediaConstants->NumberOfHeads), &(FlConfigCallBack.biosDriveMediaConstants->MediaType), &(FlConfigCallBack.biosDriveMediaConstants->HeadSettleTime), &(FlConfigCallBack.biosDriveMediaConstants->SkewDelta), &(FlConfigCallBack.biosDriveMediaConstants->DataLength), FlConfigCallBack.disketteExtension]
 [&(FloppyPower.state.SystemState), &(FloppyPower.state)]
 [FlFormat.headSettleTime.__annonCompField1.LowPart, FlFormat.headSettleTime.__annonCompField1.HighPart, FlStartDrive.delay.__annonCompField1.HighPart, FlReadWriteTrack.headSettleTime.__annonCompField1.HighPart, FlReadWriteTrack.headSettleTime.__annonCompField1.LowPart, FlStartDrive.delay.__annonCompField1.LowPart]
 [FlConfigCallBack.fDeviceData->Version, FlConfigCallBack.fDeviceData->SectorPerTrack, FlConfigCallBack.peripheralData->PartialResourceList.Count, FlConfigCallBack.fDeviceData->MaxDensity, FlConfigCallBack.fDeviceData->DataTransferLength, FlConfigCallBack.PeripheralInformation[1]->DataLength, FlConfigCallBack.fDeviceData->MaximumTrackValue, FlConfigCallBack.fDeviceData->ReadWriteGapLength, FlConfigCallBack.fDeviceData->HeadSettleTime, FlConfigCallBack.fDeviceData->FormatGapLength, FlConfigCallBack.fDeviceData->MotorOffTime, FlConfigCallBack.PeripheralInformation[1]->DataOffset, FlConfigCallBack.fDeviceData->FormatFillCharacter, FlConfigCallBack.fDeviceData->SectorLengthCode, FlConfigCallBack.fDeviceData->StepRateHeadUnloadTime, FlConfigCallBack.fDeviceData->HeadLoadTime, FlConfigCallBack.fDeviceData->MotorSettleTime, FlConfigCallBack.partial->Type]
 [IoBuildAsynchronousFsdRequest.StartingOffset, &(FlCheckBootSector.offset.__annonCompField1), &(FlDetermineMediaType.offset.__annonCompField1.LowPart), &(FlDetermineMediaType.offset.__annonCompField1.HighPart), &(FlCheckBootSector.offset.__annonCompField1.LowPart), &(FlCheckBootSector.offset.__annonCompField1.HighPart), &(FlDetermineMediaType.offset.__annonCompField1), &(FlDetermineMediaType.offset), &(FlCheckBootSector.offset)]
 [ret$IoGetConfigurationInformation, IoGetConfigurationInformation.tmp, malloc6]
 [PsCreateSystemThread.ThreadHandle, &(FlQueueIrpToThread.threadHandle)]
 [InterlockedExchange.Value, ((long)&(FloppyCancelQueuedRequest)), &(FloppyCancelQueuedRequest)]
 [&(&(FlRecalibrateDrive.fifoBuffer)[1]), &(FlRecalibrateDrive.fifoBuffer)]
 ["\\\000R\000e\000g\000i\000s\000t\000r\000y\000\\\000M\000a\000c\000h\000i\000n\000e\000\\\000S\000y\000s\000t\000e\000m\000\\\000D\000I\000S\000K\000", RtlQueryRegistryValues.Path]
 [RtlInitString.DestinationString, RtlAnsiStringToUnicodeString.SourceString, &(FloppyAddDevice.arcNameString)]
 [DriverEntry.RegistryPath, &(main.u)]
 [FlConfigCallBack.PeripheralInformation, &(FlConfigCallBack.PeripheralInformation[1])]
 [IoQueryDeviceDescription.ControllerType, &(FloppyStartDevice.Dc)]
 [PsCreateSystemThread.ObjectAttributes, &(FlQueueIrpToThread.ObjAttributes)]
 [&(GLOBAL.Result_Status3_PTOS.ST3_PTOS), &(GLOBAL.Result_Status3_PTOS)]
 [IoQueryDeviceDescription.PeripheralType, &(FloppyStartDevice.Fp)]
 [FlConsolidateMediaTypeWithBootSector.BootSector->NumberOfSectors, &(FlConsolidateMediaTypeWithBootSector.BootSector->NumberOfSectors)[1], FlConsolidateMediaTypeWithBootSector.BootSector->NumberOfHeads, &(FlConsolidateMediaTypeWithBootSector.BootSector->NumberOfHeads)[1], FlConsolidateMediaTypeWithBootSector.BootSector->BytesPerSector, &(FlConsolidateMediaTypeWithBootSector.BootSector->BytesPerSector)[1], FlConsolidateMediaTypeWithBootSector.BootSector->MediaByte, FlConsolidateMediaTypeWithBootSector.BootSector->JumpByte, &(FlConsolidateMediaTypeWithBootSector.BootSector->SectorsPerTrack)[1], FlConsolidateMediaTypeWithBootSector.BootSector->SectorsPerTrack]
 [&(FlConfigCallBack.PeripheralInformation[1]->DataLength), FlConfigCallBack.PeripheralInformation[1], ((ptr(typedef(UCHAR)))FlConfigCallBack.PeripheralInformation[1]), &(FlConfigCallBack.fDeviceData->FormatGapLength), &(FlConfigCallBack.fDeviceData->SectorLengthCode), &(&(FlConfigCallBack.peripheralData->PartialResourceList.PartialDescriptors)[FlConfigCallBack.i]), &(FlConfigCallBack.fDeviceData->Version), &(((ptr(typedef(UCHAR)))FlConfigCallBack.PeripheralInformation[1])[FlConfigCallBack.PeripheralInformation[1]->DataLength]), &(FlConfigCallBack.fDeviceData->StepRateHeadUnloadTime), &(FlConfigCallBack.fDeviceData->HeadLoadTime), &(FlConfigCallBack.fDeviceData->MaxDensity), &(FlConfigCallBack.fDeviceData->MaximumTrackValue), &(FlConfigCallBack.fDeviceData->HeadSettleTime), &(FlConfigCallBack.fDeviceData->SectorPerTrack), &(FlConfigCallBack.peripheralData->PartialResourceList), &(FlConfigCallBack.fDeviceData->ReadWriteGapLength), FlConfigCallBack.fDeviceData, &(FlConfigCallBack.partial->Type), &(FlConfigCallBack.fDeviceData->DataTransferLength), &(((ptr(typedef(UCHAR)))FlConfigCallBack.PeripheralInformation[1])[FlConfigCallBack.PeripheralInformation[1]->DataOffset]), &(FlConfigCallBack.peripheralData->PartialResourceList.Count), &(FlConfigCallBack.fDeviceData->FormatFillCharacter), &(FlConfigCallBack.PeripheralInformation[1]->DataOffset), FlConfigCallBack.peripheralData, &(FlConfigCallBack.fDeviceData->MotorSettleTime), FlConfigCallBack.partial, &(FlConfigCallBack.partial[1]), &(FlConfigCallBack.peripheralData->PartialResourceList.PartialDescriptors), &(FlConfigCallBack.fDeviceData->MotorOffTime)]
 [IoBuildDeviceIoControlRequest.IoStatusBlock, &(FlFdcDeviceIo.ioStatus)]
 [&(FlFormat.headSettleTime.__annonCompField1.HighPart), &(FlFormat.headSettleTime.__annonCompField1.LowPart), KeDelayExecutionThread.Interval, &(FlReadWriteTrack.headSettleTime.__annonCompField1), &(FlReadWriteTrack.headSettleTime.__annonCompField1.LowPart), &(FlReadWriteTrack.headSettleTime.__annonCompField1.HighPart), &(FlStartDrive.delay.__annonCompField1), &(FlStartDrive.delay.__annonCompField1.LowPart), &(FlFormat.headSettleTime.__annonCompField1), &(FlStartDrive.delay.__annonCompField1.HighPart), &(FlStartDrive.delay), &(FlFormat.headSettleTime), &(FlReadWriteTrack.headSettleTime)]
 [IoQueryDeviceDescription.CalloutRoutine, &(FlConfigCallBack)]
 [ret$memcpy, memcpy.x]
 [memset.x, ret$memset]
 [&(FloppyThread.acquireWait.QuadPart), &(FloppyThread.acquireWait)]
 [&(FloppyThread.queueWait.QuadPart), KeWaitForSingleObject.Timeout, &(FloppyThread.queueWait)]
 [IoRegisterDeviceInterface.InterfaceClassGuid, &(GLOBAL.MOUNTDEV_MOUNTED_DEVICE_GUID)]
 [&(&(FlConsolidateMediaTypeWithBootSector.BootSector->NumberOfHeads)[1]), &(FlConsolidateMediaTypeWithBootSector.BootSector->NumberOfHeads), &(&(FlConsolidateMediaTypeWithBootSector.BootSector->SectorsPerTrack)[1]), &(FlConsolidateMediaTypeWithBootSector.BootSector->SectorsPerTrack), RtlCompareMemory.Source1, &(FlConsolidateMediaTypeWithBootSector.BootSector->BytesPerSector), &(&(FlConsolidateMediaTypeWithBootSector.BootSector->BytesPerSector)[1]), ((unsigned int)FlReadWrite.userBuffer), FlReadWrite.userBuffer, &(FlConsolidateMediaTypeWithBootSector.BootSector->MediaByte), &(&(FlConsolidateMediaTypeWithBootSector.BootSector->NumberOfSectors)[1]), &(FlConsolidateMediaTypeWithBootSector.BootSector->NumberOfSectors), FlConsolidateMediaTypeWithBootSector.BootSector, &(FlConsolidateMediaTypeWithBootSector.BootSector->JumpByte), &(FlConsolidateMediaTypeWithBootSector.BootSector->OemData), ((ptr(void))&(FlConsolidateMediaTypeWithBootSector.BootSector->OemData))]
 [&(((char)0)->Tail.Overlay.__annonCompField17.ListEntry), ((unsigned long)&(((char)0)->Tail.Overlay.__annonCompField17.ListEntry)), &(FlFormat.Irp->Tail.Overlay.__annonCompField17), FloppyThread.request, ((ptr(typedef(CHAR)))FloppyThread.request), &(FloppyPower.Irp->Tail.Overlay.__annonCompField17.__annonCompField16), &(FloppyProcessQueuedRequests.currentIrp->Tail.Overlay.__annonCompField17), &(FloppyStartDevice.Irp->IoStatus.__annonCompField4), &(FloppyPower.Irp->IoStatus.__annonCompField4), &(FloppyPnp.Irp->IoStatus.__annonCompField4), IofCompleteRequest.Irp, &(FlFdcDeviceIo.irp->Tail), &(FlReadWrite.Irp->Tail.Overlay), &(FloppyCancelQueuedRequest.Irp->IoStatus.__annonCompField4.Status), &(FloppyPower.Irp->IoStatus.Information), &(FloppyThread.irp->IoStatus.__annonCompField4.Status), &(FloppyProcessQueuedRequests.currentIrp->Tail.Overlay.__annonCompField17.ListEntry.Flink), &(FloppyQueueRequest.Irp->IoStatus.__annonCompField4), &(FloppyPower.Irp->Tail.Overlay.__annonCompField17), &(FloppyStartDevice.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), &(FloppyThread.irp->IoStatus), ret$ExfInterlockedRemoveHeadList, &(FloppyThread.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), &(FloppyQueueRequest.Irp->Cancel), &(GLOBAL.pirp->IoStatus), FlQueueIrpToThread.Irp, FloppyPnp.Irp, &(FloppyReadWrite.Irp->IoStatus.__annonCompField4.Status), IoBuildDeviceIoControlRequest.tmp, &(GLOBAL.pirp->IoStatus.__annonCompField4.Status), FlFormat.Irp, &(FlReadWrite.Irp->MdlAddress), ret$IoBuildAsynchronousFsdRequest, &(FlFormat.Irp->Tail.Overlay), &(FloppyProcessQueuedRequests.currentIrp->Tail.Overlay), &(FloppyDeviceControl.Irp->IoStatus.Information), &(FloppyStartDevice.Irp->Tail.Overlay.__annonCompField17.__annonCompField16), FlDetermineMediaType.irp, &(FloppyDeviceControl.Irp->Tail.Overlay), &(FloppyPnp.Irp->Tail.Overlay.__annonCompField17), &(FlQueueIrpToThread.Irp->Tail.Overlay.__annonCompField17.__annonCompField16), ExfInterlockedInsertTailList.ListEntry, PoCallDriver.Irp, &(FloppyCancelQueuedRequest.Irp->Tail.Overlay.__annonCompField17), FloppyStartDevice.Irp, &(FloppyQueueRequest.Irp->Tail.Overlay.__annonCompField17), GLOBAL.pirp, &(FloppyQueueRequest.Irp->Tail.Overlay.__annonCompField17.ListEntry), &(FloppyReadWrite.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), FloppyReadWrite.Irp, &(FlCheckBootSector.irp->Tail.Overlay.__annonCompField17), &(FlDetermineMediaType.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), FloppyCreateClose.Irp, &(FloppyPnp.Irp->Tail.Overlay), &(FloppyQueueRequest.Irp->CancelRoutine), &(FlCheckBootSector.irp->Tail.Overlay), &(FlFormat.Irp->AssociatedIrp), &(FloppyDeviceControl.Irp->IoStatus.__annonCompField4), &(FloppyPower.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), &(FloppyCancelQueuedRequest.Irp->IoStatus.__annonCompField4), &(FloppyThread.irp->Tail.Overlay.__annonCompField17), &(FlDetermineMediaType.irp->Tail), FlReadWrite.Irp, &(FloppyThread.irp->AssociatedIrp.SystemBuffer), &(FlFdcDeviceIo.irp->Tail.Overlay.__annonCompField17), &(FlFdcDeviceIo.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), &(FloppyThread.irp->Tail), &(FloppyPower.Irp->IoStatus), &(FloppyCancelQueuedRequest.Irp->IoStatus), &(FloppyStartDevice.Irp->Tail.Overlay), &(FloppyReadWrite.Irp->Tail), &(FloppyProcessQueuedRequests.currentIrp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), &(FloppyProcessQueuedRequests.currentIrp->IoStatus.__annonCompField4), &(FloppyDeviceControl.Irp->Tail.Overlay.__annonCompField17.__annonCompField16), &(FlFormat.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), &(FloppyQueueRequest.Irp->IoStatus.Information), FloppyPnpComplete.Irp, &(FlFormat.Irp->AssociatedIrp.SystemBuffer), &(FlReadWrite.Irp->Tail), FloppyThread.irp, IoBuildAsynchronousFsdRequest.tmp, &(FloppyProcessQueuedRequests.currentIrp->Tail), &(FloppyPnp.Irp->IoStatus.Information), &(FloppyCancelQueuedRequest.Irp->IoStatus.Information), &(FloppyDeviceControl.Irp->CurrentLocation), &(FloppyPnp.Irp->Tail.Overlay.__annonCompField17.__annonCompField16), FlFinishOperation.Irp, &(FlQueueIrpToThread.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), &(FlFinishOperation.Irp->Tail), ret$IoBuildDeviceIoControlRequest, &(FloppyReadWrite.Irp->Tail.Overlay), &(FloppyPnp.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), &(FlQueueIrpToThread.Irp->Tail), &(FloppyPnp.Irp->IoStatus), &(FlDetermineMediaType.irp->Tail.Overlay.__annonCompField17.__annonCompField16), &(FlQueueIrpToThread.Irp->Tail.Overlay.__annonCompField17), &(FloppyReadWrite.Irp->IoStatus.Information), &(FlDetermineMediaType.irp->CurrentLocation), &(FlQueueIrpToThread.Irp->IoStatus.__annonCompField4), &(FlReadWrite.Irp->IoStatus), &(FloppyCancelQueuedRequest.Irp->Tail.Overlay), &(FloppyThread.irp->AssociatedIrp), &(((char)0)->Tail.Overlay.__annonCompField17), &(FloppyThread.irp->Tail.Overlay), &(FloppyCreateClose.Irp->IoStatus), IoSetHardErrorOrVerifyDevice.Irp, &(FloppyReadWrite.Irp->IoStatus), &(FlCheckBootSector.irp->CurrentLocation), &(FlReadWrite.Irp->Tail.Overlay.__annonCompField17), &(FloppyDeviceControl.Irp->IoStatus.__annonCompField4.Status), &(FloppyCreateClose.Irp->IoStatus.__annonCompField4.Status), &(FloppyPnp.Irp->Tail), &(FlFinishOperation.Irp->Tail.Overlay), &(FlReadWrite.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), &(FlCheckBootSector.irp->Tail.Overlay.__annonCompField17.__annonCompField16), &(FloppyProcessQueuedRequests.currentIrp->IoStatus), &(FloppyStartDevice.Irp->Tail.Overlay.__annonCompField17), &(GLOBAL.pirp->IoStatus.__annonCompField4), &(FlCheckBootSector.irp->MdlAddress), &(FlFormat.Irp->Tail), &(FloppyCancelQueuedRequest.Irp->Tail.Overlay.__annonCompField17.ListEntry.Flink), &(FloppyStartDevice.Irp->IoStatus), &(FloppyQueueRequest.Irp->IoStatus.__annonCompField4.Status), FloppyProcessQueuedRequests.currentIrp, &(FloppyProcessQueuedRequests.currentIrp->Tail.Overlay.__annonCompField17.ListEntry), &(FlFinishOperation.Irp->Tail.Overlay.__annonCompField17.ListEntry), &(FloppyDeviceControl.Irp->IoStatus), &(FlFdcDeviceIo.irp->Tail.Overlay.__annonCompField17.__annonCompField16), &(FloppyPower.Irp->IoStatus.__annonCompField4.Status), ((unsigned int)FlFdcDeviceIo.irp), FlFdcDeviceIo.irp, &(FloppyDeviceControl.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), FlCheckBootSector.irp, &(FloppyStartDevice.Irp->Tail), &(FloppyReadWrite.Irp->IoStatus.__annonCompField4), &(FloppyQueueRequest.Irp->IoStatus), &(FlQueueIrpToThread.Irp->Tail.Overlay.__annonCompField17.ListEntry), &(FloppyReadWrite.Irp->Tail.Overlay.__annonCompField17.__annonCompField16), &(FloppyPnp.Irp->IoStatus.__annonCompField4.Status), FloppyProcessQueuedRequests.headOfList, ((unsigned int)FloppyProcessQueuedRequests.headOfList), &(FloppyThread.irp->IoStatus.Information), &(FlFormat.Irp->Tail.Overlay.__annonCompField17.__annonCompField16), FloppyPower.Irp, (((unsigned int)FloppyProcessQueuedRequests.headOfList) - ((unsigned long)&(((char)0)->Tail.Overlay.__annonCompField17.ListEntry))), FloppyQueueRequest.Irp, FloppyDeviceControl.Irp, &(FloppyQueueRequest.Irp->Tail.Overlay), &(FloppyDeviceControl.Irp->AssociatedIrp), FloppyCancelQueuedRequest.Irp, &(FlReadWrite.Irp->Tail.Overlay.__annonCompField17.__annonCompField16), &(FloppyQueueRequest.Irp->Tail), &(FloppyCancelQueuedRequest.Irp->Tail), &(FloppyCreateClose.Irp->IoStatus.__annonCompField4), IofCallDriver.Irp, &(FloppyCancelQueuedRequest.Irp->CancelIrql), &(FloppyCancelQueuedRequest.Irp->Tail.Overlay.__annonCompField17.ListEntry), &(FloppyDeviceControl.Irp->AssociatedIrp.SystemBuffer), &(FlQueueIrpToThread.Irp->IoStatus.Information), &(FloppyPnp.Irp->CurrentLocation), &(FlFinishOperation.Irp->Tail.Overlay.__annonCompField17), &(FlDetermineMediaType.irp->MdlAddress), FlStartDrive.Irp, &(FlFdcDeviceIo.irp->Tail.Overlay), &(((char)0)->Tail.Overlay), &(FlQueueIrpToThread.Irp->Tail.Overlay), &(FloppyPower.Irp->Tail.Overlay), &(FloppyProcessQueuedRequests.currentIrp->Tail.Overlay.__annonCompField17.__annonCompField16), &(FlQueueIrpToThread.Irp->IoStatus.__annonCompField4.Status), &(FloppyPower.Irp->Tail), (((ptr(typedef(CHAR)))FloppyThread.request) - ((unsigned long)&(((char)0)->Tail.Overlay.__annonCompField17.ListEntry))), &(FloppyStartDevice.Irp->IoStatus.__annonCompField4.Status), ExfInterlockedInsertHeadList.ListEntry, &(FloppyReadWrite.Irp->Tail.Overlay.__annonCompField17), IoFreeIrp.Irp, &(FloppyProcessQueuedRequests.currentIrp->IoStatus.Information), &(FlDetermineMediaType.irp->Tail.Overlay.__annonCompField17), &(FlCheckBootSector.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation), &(FloppyThread.irp->IoStatus.__annonCompField4), &(FlQueueIrpToThread.Irp->IoStatus), &(FlReadWrite.Irp->IoStatus.Information), &(FlCheckBootSector.irp->Tail), InterlockedExchange.Target, &(FloppyCancelQueuedRequest.Irp->Tail.Overlay.__annonCompField17.ListEntry.Blink), &(FloppyPower.Irp->CurrentLocation), &(FlDetermineMediaType.irp->Tail.Overlay), &(FloppyCreateClose.Irp->IoStatus.Information), &(FloppyThread.irp->Tail.Overlay.__annonCompField17.__annonCompField16), PoStartNextPowerIrp.Irp, &(FloppyDeviceControl.Irp->Tail), &(FloppyDeviceControl.Irp->Tail.Overlay.__annonCompField17), &(((char)0)->Tail), &(FloppyProcessQueuedRequests.currentIrp->IoStatus.__annonCompField4.Status), &(main.irp), malloc1, malloc0]
 [FlDetermineMediaType.offset.__annonCompField1.LowPart, FlDetermineMediaType.offset.__annonCompField1.HighPart, FlCheckBootSector.offset.__annonCompField1.HighPart, FlCheckBootSector.offset.__annonCompField1.LowPart]
 [RtlCompareMemory.Source2, "MSDMF3."]
 [PsCreateSystemThread.StartRoutine, FlQueueIrpToThread.MyFloppyThread]
 [&(FlStartDrive.DisketteExtension->DeviceObject->Vpb), ((ptr(void))FloppyPnp.nextIrpSp), FloppyPnp.nextIrpSp, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].BytesPerSector, &(FlFormat.DisketteExtension->DriveMediaConstants.SectorLengthCode), FlIssueCommand.TransferBytes, &(FlQueueIrpToThread.DisketteExtension->ThreadReferenceMutex), FloppyThread.disketteExtension->IsReadOnly, FlAcpiConfigureFloppy.DisketteExtension, &(GLOBAL.DriveMediaConstants->StepRateHeadUnloadTime), &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].SectorsPerTrack), FlFormat.DisketteExtension->HardwareFailed, FloppyDeviceControl.driveLetterName.Buffer, &(FloppyDeviceControl.driveLetterName.Buffer[1]), ret$ExAllocatePoolWithTag, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].BytesPerSector), &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.StepRateHeadUnloadTime), FloppyDeviceControl.outputBuffer->BytesPerSector, &(FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveMediaConstants), &(FloppyThread.outputBuffer->MediaType), FlDetermineMediaType.DisketteExtension->DeviceUnit, ((int)FlDetermineMediaType.DisketteExtension->DeviceUnit), FloppyPnp.disketteExtension->ArcName.Length, ((int)FloppyPnp.disketteExtension->ArcName.Length), FlConfigCallBack.biosDriveMediaConstants->MediaType, ((int)FlReadWrite.driveMediaConstants->SectorLengthCode), FlReadWrite.driveMediaConstants->SectorLengthCode, GLOBAL.DriveMediaConstants->BytesPerSector, &(FloppyReadWrite.disketteExtension->HoldNewRequests), FlReadWrite.driveMediaConstants->NumberOfHeads, ((unsigned long)(7 + ((int)FlReadWrite.driveMediaConstants->SectorLengthCode))), (7 + ((int)FlReadWrite.driveMediaConstants->SectorLengthCode)), &(FlStartDrive.DisketteExtension->DriveMediaConstants.MediaByte), &(FloppyDeviceControl.disketteExtension->InterfaceString.Length), &(FlCheckBootSector.DisketteExtension->DeviceObject), FlFormat.DisketteExtension->MediaType, IoSetHardErrorOrVerifyDevice.DeviceObject, FloppyDeviceControl.DeviceObject->Characteristics, &(FloppyPower.irpSp->Parameters.Power.State), &(FloppyStartDevice.disketteExtension->TargetObject), GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].MediaByte, ((int)GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].MediaByte), &(FloppyThread.disketteExtension->DriveMediaConstants.BytesPerSector), FlFormat.DisketteExtension->DriveMediaConstants.SkewDelta, FlFdcDeviceIo.DeviceObject, ((ptr(typedef(DISKETTE_EXTENSION)))FloppyDeviceControl.DeviceObject->DeviceExtension), FloppyDeviceControl.DeviceObject->DeviceExtension, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].HeadSettleTime), &(FlDatarateSpecifyConfigure.DisketteExtension->LastDriveMediaType), FlAcpiConfigureFloppy.biosDriveMediaConstants->SectorLengthCode, FlFormat.DisketteExtension->IoBuffer, &(FlIssueCommand.issueCommandParms.IoOffset), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].ReadWriteGapLength), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MotorSettleTimeWrite, &(GLOBAL.DriveMediaLimits[FlCheckFormatParameters.DisketteExtension->DriveType].HighestDriveMediaType), FloppyCancelQueuedRequest.Irp->CancelIrql, FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MediaType, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MediaByte), &(FlFormat.DisketteExtension->DriveMediaConstants.MotorSettleTimeRead), &(FloppyProcessQueuedRequests.DisketteExtension->NewRequestQueue), &(FlStartDrive.DisketteExtension->DriveMediaConstants.HeadSettleTime), FloppyProcessQueuedRequests.currentIrp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, FlStartDrive.DisketteExtension->DriveMediaConstants.FormatGapLength, FlDetermineMediaType.bootSector, ((ptr(void))FlDetermineMediaType.bootSector), GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MediaType, ((int)FloppyPnp.Irp->CurrentLocation), FloppyPnp.Irp->CurrentLocation, ((typedef(CHAR))(((int)FloppyPnp.Irp->CurrentLocation) + 1)), (((int)FloppyPnp.Irp->CurrentLocation) + 1), &(FlStartDrive.DisketteExtension->DriveMediaConstants.DataTransferRate), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].NumberOfHeads), &(GLOBAL.DriveMediaLimits[FlDetermineMediaType.DisketteExtension->DriveType].LowestDriveMediaType), FloppyThread.outputBuffer->SectorsPerTrack, FlStartDrive.motorStarted, &(FlConsolidateMediaTypeWithBootSector.DisketteExtension->ByteCapacity), ((unsigned int)FloppyThread.disketteExtension->FloppyThread), FloppyThread.disketteExtension->FloppyThread, FlAcpiConfigureFloppy.biosDriveMediaConstants->BytesPerSector, FlFormat.driveMediaConstants->SectorLengthCode, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].DataLength, &(FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveType), &(FlReadWrite.irpSp->Parameters.Read.Length), FlStartDrive.fdcEnableParms.MotorStarted, FlCheckBootSector.irp->MdlAddress, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].SectorsPerTrack), &(FlFinishOperation.DisketteExtension->ListSpinLock), &(&(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[2]), &(&(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[3]), &(FlInitializeControllerHardware.DisketteExtension->FifoBuffer)[1], FlInitializeControllerHardware.DisketteExtension->FifoBuffer, &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.CylinderShift), &(&(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[1]), &(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer), &(FlDetermineMediaType.DisketteExtension->DriveMediaType), &(FloppyDeviceControl.outputBuffer->Cylinders), GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MediaByte, FlHdbit.setHdBitParameter.DeviceUnit, FlConfigCallBack.biosDriveMediaConstants->MediaByte, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].FormatFillCharacter), &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MediaByte), FloppyStartDevice.disketteExtension->DriveOnValue, GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].MaximumTrack, ((int)GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].MaximumTrack), FloppyCancelQueuedRequest.Irp->Tail.Overlay.__annonCompField17.ListEntry.Blink, &(FlFormat.DisketteExtension->DriveMediaConstants.MotorSettleTimeWrite), FloppyAddDevice.deviceObject->AlignmentRequirement, &(FloppyReadWrite.irpSp->Parameters.Read), FlFinishOperation.DisketteExtension, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].FormatFillCharacter), &(GLOBAL.DriveMediaConstants->HeadLoadTime), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MotorOffTime, FlRecalibrateDrive.DisketteExtension->DeviceUnit, FlCheckFormatParameters.FormatParameters->EndHeadNumber, GLOBAL.DriveMediaConstants->FormatGapLength, GLOBAL.PagingMutex->Contention, &(FlAcpiConfigureFloppy.biosDriveMediaConstants->BytesPerSector), FloppyDeviceControl.irpSp->Parameters.DeviceIoControl.OutputBufferLength, &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.ReadWriteGapLength), GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].SectorLengthCode, FlStartDrive.DisketteExtension->BiosDriveMediaConstants.SectorLengthCode, IoSetDeviceInterfaceState.SymbolicLinkName, &(FlConsolidateMediaTypeWithBootSector.readidDriveMediaConstants->NumberOfHeads), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MediaType), FlInterpretError.StatusRegister2, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].SectorsPerTrack, FloppyAddDevice.fdcInfo.BufferSize, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].FormatGapLength), GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].NumberOfHeads, ((int)GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].NumberOfHeads), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.SkewDelta), &(FlFormat.DisketteExtension->TargetObject), &(FloppyReadWrite.disketteExtension->ByteCapacity), FlIssueCommand.issueCommandParms.IoOffset, FlAcpiConfigureFloppy.biosDriveMediaConstants->MaximumTrack, FlFormat.Irp->AssociatedIrp.SystemBuffer, ((ptr(struct(_FORMAT_PARAMETERS)))FlFormat.Irp->AssociatedIrp.SystemBuffer), &(GLOBAL.DriveMediaConstants[FloppyDeviceControl.i]), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->DataLength), FlStartDrive.DisketteExtension->BiosDriveMediaConstants.StepRateHeadUnloadTime, &(FlFdcDeviceIo.irpStack->Parameters.DeviceIoControl.Type3InputBuffer), FloppyThread.outputBuffer->Cylinders.__annonCompField1.HighPart, FlDetermineMediaType.DisketteExtension->DeviceObject, FloppyQueueRequest.Irp->IoStatus.__annonCompField4.Status, &(FlStartDrive.fdcEnableParms.MotorStarted), FlCheckBootSector.tmp, ((ptr(struct(_BOOT_SECTOR_INFO)))FlCheckBootSector.tmp), FlAcpiConfigureFloppy.biosDriveMediaConstants->DataLength, FloppyDeviceControl.queryTable.Flags, &(GLOBAL.DriveMediaLimits[FloppyDeviceControl.disketteExtension->DriveType]), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].SkewDelta), FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MaximumTrack, FlDatarateSpecifyConfigure.DisketteExtension->DriveMediaConstants.StepRateHeadUnloadTime, IoAllocateMdl.tmp, &(FloppyPower.irpSp->MinorFunction), GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType, FlFormat.DisketteExtension->DriveMediaConstants.FormatFillCharacter, FlReadWrite.Irp->MdlAddress, FlAllocateIoBuffer.tmp___0, ((ptr(struct(_MDL)))FlAllocateIoBuffer.tmp___0), &(FloppyDeviceControl.suggestedName->Name)[13], &(FloppyDeviceControl.suggestedName->Name)[12], FloppyPower.DeviceObject->DeviceExtension, ((ptr(typedef(DISKETTE_EXTENSION)))FloppyPower.DeviceObject->DeviceExtension), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].SectorLengthCode, &(GLOBAL.DriveMediaConstants->MotorSettleTimeWrite), &(FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveMediaType), &(GLOBAL.DriveMediaConstants->SkewDelta), FlFormat.DisketteExtension->DriveType, ((int)FlFormat.DisketteExtension->DriveType), FloppyThread.outputBuffer___0->ST3_PTOS, FlStartDrive.DisketteExtension->BiosDriveMediaConstants.FormatFillCharacter, FlStartDrive.DisketteExtension->DriveMediaConstants.StepRateHeadUnloadTime, &(GLOBAL.DriveMediaLimits[FlFormat.DisketteExtension->DriveType].LowestDriveMediaType), FlStartDrive.DisketteExtension->BiosDriveMediaConstants.CylinderShift, &(FloppyAddDevice.disketteExtension->PowerDownMutex.Event), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.SectorsPerTrack), &(FloppyPower.disketteExtension->TargetObject), &(FlReadWriteTrack.driveMediaConstants->ReadWriteGapLength), &(FloppyPnp.disketteExtension->InterfaceString.Buffer), (((int)FlReadWrite.skew) + ((int)FlReadWrite.skewDelta)), &(FloppyAddDevice.disketteExtension->HoldNewReqMutex.Event), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MotorSettleTimeWrite), FlStartDrive.DisketteExtension->DriveMediaConstants.SkewDelta, GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].DataTransferRate, GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].CylinderShift, FlAcpiConfigureFloppy.biosDriveMediaConstants->CylinderShift, &(FlFormat.DisketteExtension->FifoBuffer), FlIssueCommand.issueCommandParms.FifoInBuffer, &(&(FlFormat.DisketteExtension->FifoBuffer)[5]), &(&(FlFormat.DisketteExtension->FifoBuffer)[3]), &(&(FlFormat.DisketteExtension->FifoBuffer)[4]), &(&(FlFormat.DisketteExtension->FifoBuffer)[1]), &(&(FlFormat.DisketteExtension->FifoBuffer)[2]), FloppyThread.outputBuffer, ((unsigned int)FlReadWrite.DisketteExtension->MediaType), FlReadWrite.DisketteExtension->MediaType, &(FlAcpiConfigureFloppy.biosDriveMediaConstants->NumberOfHeads), &(FloppyThread.disketteExtension->PowerDownMutex), FloppyAddDevice.disketteExtension->TargetObject, FlStartDrive.DisketteExtension->DriveMediaConstants.MotorOffTime, &(FlDetermineMediaType.ddriveMediaConstants->BytesPerSector), GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].StepRateHeadUnloadTime, GLOBAL.DriveMediaLimits, FloppyReadWrite.irpSp->Parameters.Read.ByteOffset.__annonCompField1.LowPart, &(FloppyPnp.irpSp->Control), FloppyDeviceControl.outputBuffer->Cylinders.__annonCompField1.LowPart, ((unsigned long)FloppyThread.disketteExtension->DriveMediaConstants.BytesPerSector), FloppyThread.disketteExtension->DriveMediaConstants.BytesPerSector, ((int)GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].MaximumTrack), GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].MaximumTrack, FlAcpiConfigureFloppy.FdcInfo->AcpiFdiSupported, (((unsigned int)FlDetermineMediaType.DisketteExtension->DriveMediaType) - 1), ((typedef(DRIVE_MEDIA_TYPE))(((unsigned int)FlDetermineMediaType.DisketteExtension->DriveMediaType) - 1)), FlIssueCommand.DisketteExtension->HardwareFailed, FlDetermineMediaType.DisketteExtension->DriveMediaType, ((unsigned int)FlDetermineMediaType.DisketteExtension->DriveMediaType), ((int)((unsigned int)FlDetermineMediaType.DisketteExtension->DriveMediaType)), FlDetermineMediaType.DisketteExtension->MediaType, &(FloppyPower.DeviceObject->DeviceExtension), FlFormat.DisketteExtension->BytesPerSector, &(FlStartDrive.DisketteExtension->DriveMediaConstants.HeadLoadTime), FloppyDeviceControl.suggestedName->NameLength, FlFreeIoBuffer.DisketteExtension->IoBufferSize, ((unsigned long)(((int)GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].MaximumTrack) + 1)), (((int)GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].MaximumTrack) + 1), FlConsolidateMediaTypeWithBootSector.readidDriveMediaConstants->NumberOfHeads, ((int)FlConsolidateMediaTypeWithBootSector.readidDriveMediaConstants->NumberOfHeads), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiSupported), &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MotorOffTime), FlFormat.DisketteExtension->DriveMediaType, GLOBAL.DriveMediaLimits[FlCheckFormatParameters.DisketteExtension->DriveType].HighestDriveMediaType, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MotorOffTime), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].BytesPerSector, &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.SectorsPerTrack), &(FlFormat.DisketteExtension->DriveMediaConstants.ReadWriteGapLength), &(FlFormat.DisketteExtension->MediaType), FlCheckFormatParameters.ddriveMediaConstants, FloppyAddDevice.disketteExtension->DeviceName.Buffer, ((unsigned int)FloppyAddDevice.disketteExtension->DeviceName.Buffer), ((typedef(ULONG))FlReadWrite.numTransferSectors), FlReadWrite.numTransferSectors, &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.BytesPerSector), &(FloppyThread.disketteExtension->ThreadReferenceMutex), &(FloppyPnp.disketteExtension->InterfaceString), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].FormatFillCharacter), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->FormatGapLength), &(FlHdbit.DisketteExtension->TargetObject), FloppyPower.disketteExtension->FloppyThread, ((unsigned int)FloppyPower.disketteExtension->FloppyThread), FloppyReadWrite.DeviceObject, FloppyAddDevice.disketteExtension->DeviceName.Length, &(FloppyDeviceControl.disketteExtension->InterfaceString.Buffer), IoCreateDevice.tmp, FlDetermineMediaType.ddriveMediaConstants->SectorsPerTrack, ((int)FlDetermineMediaType.ddriveMediaConstants->SectorsPerTrack), &(FloppyStartDevice.fdcInfo.BusNumber), FlFormat.formatParameters->EndCylinderNumber, FlStartDrive.DisketteExtension->TargetObject, &(FloppyStartDevice.disketteExtension->DriveOnValue), FloppyThread.irpSp->Flags, ((int)FloppyThread.irpSp->Flags), FlStartDrive.DisketteExtension->DriveOnValue, FlIssueCommand.issueCommandParms.IoHandle, &(FlQueueIrpToThread.DisketteExtension->ThreadReferenceCount), &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MotorSettleTimeWrite), FloppyAddDevice.disketteExtension, &(FlQueueIrpToThread.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation->Control), GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].ReadWriteGapLength, &(FloppyDeviceControl.driveLetterName.MaximumLength), ExfInterlockedInsertTailList.Lock, FlFormat.DisketteExtension->DriveMediaConstants.FormatGapLength, FlConfigCallBack.biosDriveMediaConstants->MotorSettleTimeRead, &(GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType), &(FlFreeIoBuffer.DisketteExtension->IoBuffer), &(FlDetermineMediaType.ddriveMediaConstants->MaximumTrack), GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].HeadLoadTime, FlAcpiConfigureFloppy.biosDriveMediaConstants->SectorsPerTrack, FloppyReadWrite.disketteExtension, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].StepRateHeadUnloadTime), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].HeadSettleTime), FloppyPower.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, &(FloppyPower.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation[1]), FlStartDrive.fdcDiskChangeParms.DriveOnValue, &(FlFormat.DisketteExtension->DriveMediaConstants.MediaByte), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MediaByte, &(FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveMediaConstants.SkewDelta), FloppyStartDevice.disketteExtension->TargetObject, &(FlDetermineMediaType.ddriveMediaConstants->NumberOfHeads), &(FlReadWriteTrack.DisketteExtension->FifoBuffer)[4], &(FlReadWriteTrack.DisketteExtension->FifoBuffer)[3], &(FlReadWriteTrack.DisketteExtension->FifoBuffer)[2], &(FlReadWriteTrack.DisketteExtension->FifoBuffer)[1], ((int)&(FlReadWriteTrack.DisketteExtension->FifoBuffer)[1]), &(FlReadWriteTrack.DisketteExtension->FifoBuffer)[8], &(FlReadWriteTrack.DisketteExtension->FifoBuffer)[7], &(FlReadWriteTrack.DisketteExtension->FifoBuffer)[6], ((int)&(FlReadWriteTrack.DisketteExtension->FifoBuffer)[5]), &(FlReadWriteTrack.DisketteExtension->FifoBuffer)[5], &(FloppyPower.irpSp->Parameters.Power.Type), GLOBAL.DriveMediaConstants->DataLength, &(GLOBAL.DriveMediaConstants[FlCheckFormatParameters.driveMediaType]), ((int)FlReadWriteTrack.DisketteExtension->FifoBuffer), FlReadWriteTrack.DisketteExtension->FifoBuffer, &(GLOBAL.DriveMediaConstants->FormatFillCharacter), MmUnlockPages.MemoryDescriptorList, &(FlFormat.formatExParameters->SectorNumber), FloppyPnp.disketteExtension, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].CylinderShift, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].FormatGapLength, FlAcpiConfigureFloppy.biosDriveMediaConstants->FormatFillCharacter, &(FloppyQueueRequest.DisketteExtension->FlCancelSpinLock), FlAcpiConfigureFloppy.biosDriveMediaConstants->MediaByte, FloppyPnp.disketteExtension->InterfaceString.Buffer, ((unsigned int)FloppyPnp.disketteExtension->InterfaceString.Buffer), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].StepRateHeadUnloadTime), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].SkewDelta, &(FloppyProcessQueuedRequests.DisketteExtension->DeviceObject), &(FlFormat.DisketteExtension->BytesPerSector), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].CylinderShift, ((typedef(CHAR))(((int)FloppyDeviceControl.Irp->CurrentLocation) + 1)), (((int)FloppyDeviceControl.Irp->CurrentLocation) + 1), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].StepRateHeadUnloadTime, ((int)FloppyDeviceControl.Irp->CurrentLocation), FloppyDeviceControl.Irp->CurrentLocation, GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].HeadSettleTime, RtlFreeUnicodeString.UnicodeString, FloppyAddDevice.deviceObject->DeviceExtension, ((ptr(typedef(DISKETTE_EXTENSION)))FloppyAddDevice.deviceObject->DeviceExtension), &(FlAllocateIoBuffer.DisketteExtension->IoBufferSize), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->StepRateHeadUnloadTime), GLOBAL.PagingMutex, ((ptr(void))GLOBAL.PagingMutex), &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MaximumTrack), FlConsolidateMediaTypeWithBootSector.readidDriveMediaConstants->MaximumTrack, ((int)FlConsolidateMediaTypeWithBootSector.readidDriveMediaConstants->MaximumTrack), &(FloppyReadWrite.disketteExtension->IsStarted), &(GLOBAL.DriveMediaConstants->MaximumTrack), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MotorSettleTimeWrite), FloppyThread.irpSp->Parameters.DeviceIoControl.OutputBufferLength, ret$IoAttachDeviceToDeviceStack, ((unsigned long)(size(typedef(USHORT)) + ((unsigned int)FloppyDeviceControl.mountName->NameLength))), (size(typedef(USHORT)) + ((unsigned int)FloppyDeviceControl.mountName->NameLength)), &(GLOBAL.DriveMediaLimits[FloppyDeviceControl.disketteExtension->DriveType].HighestDriveMediaType), FlDetermineMediaType.ddriveMediaConstants->MaximumTrack, ((int)FlDetermineMediaType.ddriveMediaConstants->MaximumTrack), &(FlFormat.DisketteExtension->HardwareFailed), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].DataTransferRate), FloppyProcessQueuedRequests.currentIrp->Tail.Overlay.__annonCompField17.ListEntry.Flink, (1 + ((int)FlDetermineMediaType.ddriveMediaConstants->MaximumTrack)), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.FormatFillCharacter), &(FlFreeIoBuffer.DisketteExtension->IoBufferMdl), GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].FormatGapLength, &(GLOBAL.DriveMediaConstants->SectorLengthCode), IoBuildDeviceIoControlRequest.DeviceObject, FloppyProcessQueuedRequests.irpSp->MajorFunction, ((int)FloppyProcessQueuedRequests.irpSp->MajorFunction), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.SectorPerTrack), FloppyStartDevice.irpSp->Control, ((int)FloppyStartDevice.irpSp->Control), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType]), IoQueryDeviceDescription.BusNumber, &(FloppyThread.disketteExtension->FloppyThread), FlQueueIrpToThread.Irp->IoStatus.Information, FlStartDrive.DisketteExtension->BiosDriveMediaConstants.HeadLoadTime, FloppyPower.DeviceObject, ExAllocatePoolWithTag.tmp, &(FloppyProcessQueuedRequests.DisketteExtension->NewRequestQueueSpinLock), ((ptr(void))FloppyStartDevice.disketteExtension), FloppyStartDevice.disketteExtension, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MotorOffTime, &(FlStartDrive.DisketteExtension->DeviceObject), ((int)FloppyPnp.irpSp->Control), FloppyPnp.irpSp->Control, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MaximumTrack), &(FloppyQueueRequest.DisketteExtension->NewRequestQueueSpinLock), (FloppyDeviceControl.Irp->IoStatus.Information + ((typedef(ULONG_PTR))size(typedef(DISK_GEOMETRY)))), ExAcquireFastMutex.FastMutex, &(FlReadWrite.driveMediaConstants->SectorsPerTrack), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.DataTransferLength, ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.DataTransferLength), FloppyThread.disketteExtension->FloppyControllerAllocated, FloppyDeviceControl.DeviceObject, FlConsolidateMediaTypeWithBootSector.readidDriveMediaConstants->BytesPerSector, ((int)FlConsolidateMediaTypeWithBootSector.readidDriveMediaConstants->BytesPerSector), &(FloppyDeviceControl.disketteExtension->DeviceName.Length), FloppyDeviceControl.outputBufferLength, FloppyStartDevice.Irp->IoStatus.__annonCompField4.Status, FlFormat.DisketteExtension->DeviceUnit, ((int)FlFormat.DisketteExtension->DeviceUnit), &(FlQueueIrpToThread.DisketteExtension->FloppyThread), ((unsigned long)FloppyThread.disketteExtension->DriveMediaConstants.SectorsPerTrack), FloppyThread.disketteExtension->DriveMediaConstants.SectorsPerTrack, &(FloppyDeviceControl.suggestedName->UseOnlyIfThereAreNoOtherLinks), FlQueueIrpToThread.Irp->IoStatus.__annonCompField4.Status, DriverEntry.DriverObject, IoQueryDeviceDescription.ControllerNumber, &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MotorSettleTimeRead), &(GLOBAL.DriveMediaLimits[FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveType]), FlFormat.driveMediaConstants->CylinderShift, ((int)FlFormat.driveMediaConstants->CylinderShift), &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MotorSettleTimeRead), ((unsigned long)FlReadWrite.sectorsPerTrack), FlReadWrite.sectorsPerTrack, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].FormatGapLength), &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].DataTransferRate), FloppyCreateClose.DeviceObject, &(FlQueueIrpToThread.DisketteExtension->RequestSemaphore), FloppyThread.outputBuffer->BytesPerSector, &(FlStartDrive.DisketteExtension->DriveMediaConstants.MotorOffTime), &(FloppyProcessQueuedRequests.DisketteExtension->FlCancelSpinLock), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].DataTransferRate), &(FlStartDrive.DisketteExtension->DriveMediaConstants), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.StepRateHeadUnloadTime), &(GLOBAL.DriveMediaConstants->MediaType), &(FloppyDeviceControl.outputBuffer->TracksPerCylinder), &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType]), &(FlFinishOperation.DisketteExtension->HardwareFailCount), FloppyQueueRequest.Irp->Cancel, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MediaType, FlReadWriteTrack.driveMediaConstants->DataLength, &(FlDetermineMediaType.DisketteExtension->ByteCapacity), ((unsigned char)((((typedef(ULONG))FlReadWrite.numTransferSectors) + ((int)FlReadWrite.trackSector)) - ((int)FlReadWrite.skew))), ((((typedef(ULONG))FlReadWrite.numTransferSectors) + ((int)FlReadWrite.trackSector)) - ((int)FlReadWrite.skew)), &(GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i]), FlDetermineMediaType.DisketteExtension->DriveMediaConstants.DataTransferRate, &(FlStartDrive.DisketteExtension->MediaType), FloppyCancelQueuedRequest.EEX_Flink->Blink, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MediaType), &(FlHdbit.setHdBitParameter.More120MB), &(FloppyThread.outputBuffer___0->ST3_PTOS), &(FlRecalibrateDrive.DisketteExtension->HardwareFailed), &(FlFinishOperation.DisketteExtension->HardwareFailed), GLOBAL.DriveMediaConstants->SectorLengthCode, &(FloppyAddDevice.disketteExtension->ThreadReferenceMutex.Event), FloppyThread.disketteExtension->IoBuffer, FlAcpiConfigureFloppy.biosDriveMediaConstants->MediaType, &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MotorSettleTimeRead), &(FlStartDrive.DisketteExtension->DriveMediaConstants.MotorSettleTimeWrite), &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].SectorLengthCode), (((unsigned int)FlFormat.driveMediaType) - 1), ((typedef(DRIVE_MEDIA_TYPE))(((unsigned int)FlFormat.driveMediaType) - 1)), FlFormat.driveMediaType, ((unsigned int)FlFormat.driveMediaType), FloppyStartDevice.irpSp->Context, &(FloppyAddDevice.disketteExtension->NewRequestQueueSpinLock), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].CylinderShift, &(FloppyPnp.irpSp->Context), FlFormat.driveMediaConstants, FlCheckFormatParameters.FormatParameters->StartHeadNumber, &(FloppyAddDevice.disketteExtension->HoldNewRequests), &(FloppyThread.disketteExtension->ThreadReferenceCount), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MediaByte, &(FlReadWrite.DisketteExtension->DriveMediaConstants), &(FloppyPower.disketteExtension->FloppyThread), ((unsigned int)FloppyThread.disketteExtension->MediaType), FloppyThread.disketteExtension->MediaType, &(FlDetermineMediaType.DisketteExtension->DeviceObject), FloppyStartDevice.fdcInfo.BufferSize, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].ReadWriteGapLength, &(FlStartDrive.DisketteExtension->DriveMediaConstants.ReadWriteGapLength), ((int)FlReadWrite.irpSp->MajorFunction), FlReadWrite.irpSp->MajorFunction, &(FloppyThread.outputBuffer->Cylinders.__annonCompField1.LowPart), &(GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].MaximumTrack), FloppyPnp.disketteExtension->IsStarted, &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.FormatGapLength), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MediaType, &(GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].NumberOfHeads), ((FlFormat.formatParameters->EndCylinderNumber * ((int)FlFormat.driveMediaConstants->NumberOfHeads)) + FlFormat.formatParameters->EndHeadNumber), ((unsigned char)((FlFormat.formatParameters->EndCylinderNumber * ((int)FlFormat.driveMediaConstants->NumberOfHeads)) + FlFormat.formatParameters->EndHeadNumber)), memcpy.p, FlReadWriteTrack.DisketteExtension, &(FloppyProcessQueuedRequests.irpSp->MajorFunction), KeReleaseSemaphore.Semaphore, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].HeadSettleTime), &(FlFormat.formatParameters->EndHeadNumber), FlStartDrive.DisketteExtension->DeviceUnit, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].SectorLengthCode, &(GLOBAL.DriveMediaLimits[FlDetermineMediaType.DisketteExtension->DriveType].HighestDriveMediaType), ((int)FlReadWrite.skewDelta), FlReadWrite.skewDelta, FlReadWrite.DisketteExtension->IoBufferMdl, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MotorSettleTimeRead, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].DataLength, FlAllocateIoBuffer.tmp, ((ptr(typedef(UCHAR)))FlAllocateIoBuffer.tmp), FlDatarateSpecifyConfigure.DisketteExtension, FlDatarateSpecifyConfigure.DisketteExtension->DriveMediaType, &(FloppyThread.disketteExtension->FloppyControllerAllocated), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MotorSettleTimeWrite), FloppyAddDevice.tmp, ((ptr(typedef(WCHAR)))FloppyAddDevice.tmp), &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MotorOffTime), &(FloppyReadWrite.DeviceObject->DeviceExtension), &(FlQueueIrpToThread.DisketteExtension->PowerDownMutex), &(FlFormat.DisketteExtension->DriveMediaConstants.MaximumTrack), FloppyDeviceControl.mountName, FloppyDeviceControl.Irp->IoStatus.__annonCompField4.Status, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].NumberOfHeads), &(GLOBAL.DriveMediaConstants->BytesPerSector), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].SectorLengthCode, memset.p, &(FloppyThread.irpSp->MinorFunction), FlStartDrive.DisketteExtension->DriveMediaConstants.SectorLengthCode, FloppyReadWrite.Irp->IoStatus.Information, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].SkewDelta), FlAcpiConfigureFloppy.biosDriveMediaConstants, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.SectorsPerTrack, &(FlDatarateSpecifyConfigure.DisketteExtension->DriveMediaConstants.CylinderShift), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MediaType), FloppyStartDevice.irpSp, ((ptr(void))FloppyStartDevice.irpSp), ExAllocatePoolWithTag.x, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.SkewDelta, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].BytesPerSector), GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].FormatFillCharacter, &(FloppyStartDevice.irpSp->Context), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].NumberOfHeads, ((typedef(ULONG))(((unsigned int)FloppyDeviceControl.lowestDriveMediaType) - 1)), (((unsigned int)FloppyDeviceControl.lowestDriveMediaType) - 1), FlConfigCallBack.biosDriveMediaConstants->NumberOfHeads, FlReadWriteTrack.IoMdl, &(FlFormat.DisketteExtension->DriveMediaConstants.DataTransferRate), GLOBAL.PagingMutex->Count, ((unsigned int)FloppyDeviceControl.lowestDriveMediaType), FloppyDeviceControl.lowestDriveMediaType, ((ptr(void))&(FloppyDeviceControl.queryTable)), FlConsolidateMediaTypeWithBootSector.readidDriveMediaConstants, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].SkewDelta, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].HeadSettleTime), FloppyThread.disketteExtension->DeviceObject->Flags, &(FlIssueCommand.issueCommandParms.FifoInBuffer), IoAttachDeviceToDeviceStack.TargetDevice, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MediaByte), PsCreateSystemThread.StartContext, ((unsigned char)(((unsigned long)FlReadWrite.sectorsPerTrack) - ((int)FlReadWrite.trackSector))), (((unsigned long)FlReadWrite.sectorsPerTrack) - ((int)FlReadWrite.trackSector)), FloppyDeviceControl.outputBuffer->SectorsPerTrack, FlFormat.DisketteExtension->DriveMediaConstants.HeadLoadTime, FlAcpiConfigureFloppy.biosDriveMediaConstants->MotorSettleTimeRead, IoCreateSymbolicLink.SymbolicLinkName, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MediaType), &(FlReadWrite.irpSp->Parameters), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].HeadLoadTime), ((int)((unsigned int)FloppyDeviceControl.highestDriveMediaType)), ((unsigned int)FloppyDeviceControl.highestDriveMediaType), FloppyDeviceControl.highestDriveMediaType, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].DataLength), &(FloppyDeviceControl.suggestedName->NameLength), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].DataTransferRate, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].NumberOfHeads), &(GLOBAL.DriveMediaLimits[FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveType].HighestDriveMediaType), &(FloppyAddDevice.disketteExtension->ReleaseFdcWithMotorRunning), ((ptr(void))FloppyDeviceControl.disketteExtension->DeviceName.Buffer), FloppyDeviceControl.disketteExtension->DeviceName.Buffer, &(GLOBAL.DriveMediaConstants->MotorSettleTimeRead), FlFdcDeviceIo.irpStack->Parameters.DeviceIoControl.Type3InputBuffer, (FloppyReadWrite.disketteExtension->BytesPerSector - 1), FloppyReadWrite.disketteExtension->BytesPerSector, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].ReadWriteGapLength), &(FloppyAddDevice.disketteExtension->IsReadOnly), GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].HeadLoadTime, FlDatarateSpecifyConfigure.DisketteExtension->TargetObject, FlConfigCallBack.biosDriveMediaConstants->BytesPerSector, &(FlStartDrive.DisketteExtension->DriveMediaConstants.MotorSettleTimeRead), &(FloppyThread.disketteExtension->DeviceObject), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->SectorsPerTrack), FloppyDeviceControl.disketteExtension->DriveType, IoRegisterDeviceInterface.SymbolicLinkName, &(FlDetermineMediaType.DisketteExtension->IsReadOnly), &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].FormatFillCharacter), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData), &(FlFormat.driveMediaConstants->HeadSettleTime), &(FlDatarateSpecifyConfigure.DisketteExtension->DriveMediaConstants.StepRateHeadUnloadTime), FlAcpiConfigureFloppy.biosDriveMediaConstants->DataTransferRate, FlRecalibrateDrive.fifoBuffer, &(FlRecalibrateDrive.fifoBuffer)[1], GLOBAL.DriveMediaLimits[FlDetermineMediaType.DisketteExtension->DriveType].LowestDriveMediaType, ((char)GLOBAL.DriveMediaLimits[FlDetermineMediaType.DisketteExtension->DriveType].LowestDriveMediaType), ((int)((char)GLOBAL.DriveMediaLimits[FlDetermineMediaType.DisketteExtension->DriveType].LowestDriveMediaType)), &(GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].SectorsPerTrack), ((unsigned int)FlStartDrive.DisketteExtension->MediaType), FlStartDrive.DisketteExtension->MediaType, &(FloppyThread.outputBuffer->Cylinders), FlFormat.DisketteExtension->DriveMediaConstants.BytesPerSector, GLOBAL.DriveMediaConstants->StepRateHeadUnloadTime, &(FloppyPnp.irpSp->MinorFunction), &(FlReadWriteTrack.DisketteExtension->ControllerConfigurable), FlCheckBootSector.DisketteExtension, GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MediaType, ((unsigned int)GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MediaType), &(FlFormat.DisketteExtension->DriveMediaConstants.NumberOfHeads), FlReadWriteTrack.DisketteExtension->ControllerConfigurable, FloppyReadWrite.irpSp->Parameters.Read.Length, &(FloppyAddDevice.disketteExtension->DeviceName), GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MotorSettleTimeRead, FlReadWriteTrack.DisketteExtension->HardwareFailed, IoBuildAsynchronousFsdRequest.DeviceObject, memcpy.s, &(FloppyStartDevice.fdcInfo.ControllerNumber), &(FlReadWriteTrack.driveMediaConstants->HeadSettleTime), &(FloppyDeviceControl.outputBuffer->Cylinders.__annonCompField1.HighPart), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].StepRateHeadUnloadTime, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MediaType, FloppyThread.disketteExtension->ThreadReferenceCount, (FloppyThread.disketteExtension->ThreadReferenceCount - 1), &(GLOBAL.DriveMediaLimits[FlCheckFormatParameters.DisketteExtension->DriveType]), FlReadWrite.irpSp->Parameters.Read.ByteOffset.__annonCompField1.LowPart, &(FloppyAddDevice.disketteExtension->RequestSemaphore), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].FormatGapLength), FloppyStartDevice.disketteExtension->IsStarted, &(GLOBAL.DriveMediaConstants->ReadWriteGapLength), &(FlFormat.DisketteExtension->DriveMediaConstants.FormatFillCharacter), &(FlFormat.DisketteExtension->DriveMediaConstants), FlFormat.DisketteExtension->ByteCapacity, FloppyReadWrite.disketteExtension->HoldNewRequests, FlAllocateIoBuffer.DisketteExtension->IoBufferSize, &(FlConsolidateMediaTypeWithBootSector.readidDriveMediaConstants->MaximumTrack), &(FloppyReadWrite.irpSp->Parameters.Read.Length), FlDetermineMediaType.DisketteExtension->DriveMediaConstants.ReadWriteGapLength, FlDetermineMediaType.DisketteExtension->BytesPerSector, &(FlStartDrive.DisketteExtension->LastDriveMediaType), FlDatarateSpecifyConfigure.DisketteExtension->DriveMediaConstants.HeadLoadTime, ((unsigned long)(((int)FloppyThread.disketteExtension->DriveMediaConstants.MaximumTrack) + 1)), (((int)FloppyThread.disketteExtension->DriveMediaConstants.MaximumTrack) + 1), FlConfigCallBack.biosDriveMediaConstants->HeadSettleTime, FloppyQueueRequest.Irp->IoStatus.Information, &(FlAcpiConfigureFloppy.biosDriveMediaConstants->MaximumTrack), &(FloppyDeviceControl.DeviceObject->DeviceExtension), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->SectorLengthCode), FlInitializeControllerHardware.DisketteExtension->TargetObject, ((unsigned char)(((int)FlReadWriteTrack.Sector) + ((unsigned long)FlReadWriteTrack.NumberOfSectors))), (((int)FlReadWriteTrack.Sector) + ((unsigned long)FlReadWriteTrack.NumberOfSectors)), FloppyPnp.Irp->IoStatus.__annonCompField4.Status, FloppyPnp.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, (FloppyPnp.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation - 1), &(FloppyPnp.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation[1]), &(FloppyStartDevice.disketteExtension->DriveType), ret$MmAllocateContiguousMemory, &(FloppyDeviceControl.disketteExtension->DeviceName.Buffer), &(GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].SectorsPerTrack), FlStartDrive.DisketteExtension->DriveMediaConstants.MotorSettleTimeRead, &(FloppyStartDevice.disketteExtension->IsStarted), &(FlStartDrive.DisketteExtension->DriveMediaType), ((typedef(ULONG))FlReadWrite.numberOfHeads), FlReadWrite.numberOfHeads, FloppyThread.outputBuffer->Cylinders.__annonCompField1.LowPart, &(FlIssueCommand.issueCommandParms.TimeOut), ((int)FloppyThread.disketteExtension->DriveMediaConstants.MaximumTrack), FloppyThread.disketteExtension->DriveMediaConstants.MaximumTrack, &(FlFormat.DisketteExtension->DriveType), &(FloppyAddDevice.disketteExtension->IsRemoved), FlConfigCallBack.biosDriveMediaConstants->SectorLengthCode, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].BytesPerSector), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.ReadWriteGapLength), GLOBAL.DriveMediaConstants->MediaType, FlConsolidateMediaTypeWithBootSector.DisketteExtension->MediaType, ((unsigned int)FlConsolidateMediaTypeWithBootSector.DisketteExtension->MediaType), GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].BytesPerSector, &(GLOBAL.PagingMutex->Contention), FlFormat.formatParameters->StartCylinderNumber, &(FloppyDeviceControl.outputBuffer->Cylinders.__annonCompField1), FlStartDrive.fdcDiskChangeParms.DriveStatus, FlFormat.DisketteExtension->DriveMediaConstants.MediaByte, FlFormat.DisketteExtension->DriveMediaConstants.MediaType, FlStartDrive.DisketteExtension->DriveMediaConstants.ReadWriteGapLength, &(FlReadWrite.driveMediaConstants->SkewDelta), FlCheckFormatParameters.FormatParameters->StartCylinderNumber, FloppyCancelQueuedRequest.Irp->IoStatus.Information, &(FloppyStartDevice.fdcInfo.BufferSize), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->MotorSettleTimeRead), FlAllocateIoBuffer.DisketteExtension->IoBuffer, ((ptr(void))FlAllocateIoBuffer.DisketteExtension->IoBuffer), FloppyCreateClose.Irp->IoStatus.__annonCompField4.Status, (((int)FlDetermineMediaType.irp->CurrentLocation) - 1), ((typedef(CHAR))(((int)FlDetermineMediaType.irp->CurrentLocation) - 1)), FlDetermineMediaType.irp->CurrentLocation, ((int)FlDetermineMediaType.irp->CurrentLocation), FloppyPower.irpSp, MmFreeContiguousMemory.BaseAddress, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.BytesPerSector, &(FlCheckFormatParameters.FormatParameters->EndHeadNumber), &(FlFormat.formatParameters->MediaType), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MediaByte), FloppyStartDevice.fdcInfo.BusType, &(FloppyThread.disketteExtension->DriveMediaConstants.SectorsPerTrack), FlReadWrite.irpSp->Parameters.Read.Length, FloppyProcessQueuedRequests.currentIrp->IoStatus.Information, ((int)ExAllocatePoolWithTag.NumberOfBytes), ExAllocatePoolWithTag.NumberOfBytes, FloppyAddDevice.deviceName.Length, ((unsigned long)FloppyAddDevice.deviceName.Length), GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].FormatGapLength, FlFormat.DisketteExtension->DriveMediaConstants.NumberOfHeads, &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.NumberOfHeads), FlConsolidateMediaTypeWithBootSector.DisketteExtension, &(FlQueueIrpToThread.DisketteExtension->ListSpinLock), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MotorOffTime), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MotorOffTime), &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.DataLength), FloppyDeviceControl.disketteExtension->TargetObject, ((ptr(typedef(DISKETTE_EXTENSION)))FloppyPnp.DeviceObject->DeviceExtension), FloppyPnp.DeviceObject->DeviceExtension, &(FlFormat.formatExParameters->SectorsPerTrack), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MaximumTrack), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].BytesPerSector), FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MotorSettleTimeWrite, &(FloppyThread.disketteExtension->ListEntry), GLOBAL.DriveMediaLimits[FlFormat.DisketteExtension->DriveType].LowestDriveMediaType, ((unsigned int)GLOBAL.DriveMediaLimits[FlFormat.DisketteExtension->DriveType].LowestDriveMediaType), FloppyPnp.disketteExtension->TargetObject, &(FlDetermineMediaType.DisketteExtension->DriveType), FloppyReadWrite.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, &(FloppyAddDevice.fdcInfo.BufferCount), GLOBAL.DriveMediaConstants, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].SkewDelta, &(FlStartDrive.DisketteExtension->DeviceObject->Flags), FlStartDrive.DisketteExtension->DriveMediaConstants.SectorsPerTrack, &(FlFormat.irpSp->Parameters.DeviceIoControl.OutputBufferLength), &(FloppyDeviceControl.irpSp->Parameters), FloppyDeviceControl.outputBuffer->MediaType, RtlQueryRegistryValues.QueryTable, FlConfigCallBack.biosDriveMediaConstants->DataTransferRate, &(FloppyCancelQueuedRequest.disketteExtension->FlCancelSpinLock), ((unsigned char)FloppyStartDevice.fdcInfo.UnitNumber), FloppyStartDevice.fdcInfo.UnitNumber, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MotorOffTime, ((unsigned long)GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].BytesPerSector), GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].BytesPerSector, FloppyPower.state, ((unsigned long)GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].NumberOfHeads), GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].NumberOfHeads, &(FlReadWrite.irpSp->Parameters.Read.ByteOffset), FlIssueCommand.FifoOutBuffer, FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.SectorLengthCode, ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.SectorLengthCode), ((unsigned int)FloppyDeviceControl.mountName->NameLength), FloppyDeviceControl.mountName->NameLength, &(GLOBAL.DriveMediaConstants->MediaByte), &(FloppyReadWrite.irpSp->Parameters.Read.ByteOffset.__annonCompField1), FlConfigCallBack.biosDriveMediaConstants->FormatGapLength, FloppyAddDevice.disketteExtension->HoldNewRequests, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MediaType), FloppyStartDevice.nextIrpSp, ((ptr(void))FloppyStartDevice.nextIrpSp), FloppyThread.irp->IoStatus.Information, FlConfigCallBack.biosDriveMediaConstants->MaximumTrack, FloppyPnp.disketteExtension->IsRemoved, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].SkewDelta, &(FloppyDeviceControl.disketteExtension->HoldNewReqMutex), FloppyAddDevice.disketteExtension->UnderlyingPDO, &(FlAcpiConfigureFloppy.biosDriveMediaConstants->MotorSettleTimeWrite), &(&(FlFormat.formatExParameters->SectorNumber)[FlFormat.whichSector]), &(FlStartDrive.DisketteExtension->DriveMediaConstants.MaximumTrack), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MotorSettleTimeRead, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].HeadLoadTime, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MotorSettleTimeWrite, GLOBAL.DriveMediaLimits[FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveType].HighestDriveMediaType, ((unsigned long)GLOBAL.DriveMediaLimits[FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveType].HighestDriveMediaType), FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MotorOffTime, &(FlFormat.DisketteExtension->LastDriveMediaType), FloppyStartDevice.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, (FloppyStartDevice.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation - 1), GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MotorOffTime, &(FloppyThread.disketteExtension->DriveMediaConstants.MaximumTrack), FlStartDrive.DisketteExtension->BiosDriveMediaConstants.ReadWriteGapLength, &(FloppyPnp.disketteExtension->IsRemoved), &(FloppyDeviceControl.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation[1]), ((ptr(struct(_MOUNTDEV_NAME)))FloppyDeviceControl.Irp->AssociatedIrp.SystemBuffer), FloppyDeviceControl.Irp->AssociatedIrp.SystemBuffer, FloppyDeviceControl.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, FlConsolidateMediaTypeWithBootSector.DisketteExtension->IsReadOnly, &(GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].MaximumTrack), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType]), FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveMediaType, (((int)FlCheckFormatParameters.ddriveMediaConstants->NumberOfHeads) - 1), ((unsigned long)(((int)FlCheckFormatParameters.ddriveMediaConstants->NumberOfHeads) - 1)), FlCheckFormatParameters.ddriveMediaConstants->NumberOfHeads, ((int)FlCheckFormatParameters.ddriveMediaConstants->NumberOfHeads), &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.SkewDelta), &(FlStartDrive.DisketteExtension->DriveOnValue), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.MaxCylinderNumber, ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.MaxCylinderNumber), &(GLOBAL.DriveMediaConstants->NumberOfHeads), &(FlFdcDeviceIo.irpStack->Parameters), &(FloppyDeviceControl.mountName->NameLength), &(FlHdbit.DisketteExtension->DeviceUnit), ((unsigned int)FlStartDrive.DisketteExtension->LastDriveMediaType), FlStartDrive.DisketteExtension->LastDriveMediaType, &(FloppyStartDevice.disketteExtension->HoldNewReqMutex), FloppyProcessQueuedRequests.currentIrp->IoStatus.__annonCompField4.Status, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].CylinderShift), FloppyCancelQueuedRequest.EEX_Blink, &(FloppyStartDevice.fdcInfo.BusType), FlConfigCallBack.biosDriveMediaConstants->DataLength, FlQueueIrpToThread.DisketteExtension->PoweringDown, ((int)FlQueueIrpToThread.DisketteExtension->PoweringDown), &(FlReadWriteTrack.DisketteExtension->HardwareFailed), &(FlConsolidateMediaTypeWithBootSector.DisketteExtension->MediaType), &(GLOBAL.DriveMediaConstants->SectorsPerTrack), &(FlStartDrive.DisketteExtension->DriveMediaConstants.StepRateHeadUnloadTime), &(FlReadWrite.DisketteExtension->MediaType), &(FloppyPnp.disketteExtension->ArcName), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.SectorPerTrack, ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.SectorPerTrack), &(FloppyQueueRequest.DisketteExtension->NewRequestQueue), FlFormat.DisketteExtension->IoBuffer[(((int)FlFormat.whichSector) * 4)], &(FlReadWrite.DisketteExtension->IoBuffer), &(FloppyAddDevice.disketteExtension->ThreadReferenceCount), FlFormat.DisketteExtension->IoBuffer[((((int)FlFormat.whichSector) * 4) + 3)], FlFormat.DisketteExtension->IoBuffer[((((int)FlFormat.whichSector) * 4) + 1)], FlFormat.DisketteExtension->IoBuffer[((((int)FlFormat.whichSector) * 4) + 2)], FloppyThread.disketteExtension->HardwareFailed, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].HeadLoadTime, &(FloppyDeviceControl.queryTable.Name), IoDetachDevice.TargetDevice, &(FloppyPnp.disketteExtension->HoldNewRequests), &(FlDatarateSpecifyConfigure.DisketteExtension->DriveMediaType), &(FloppyThread.irpSp->Parameters.DeviceIoControl), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].SectorsPerTrack), &(FloppyThread.disketteExtension->IsReadOnly), &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MediaByte), FlReadWriteTrack.byteToSectorShift, &(FlFinishOperation.DisketteExtension->ThreadReferenceCount), FloppyProcessQueuedRequests.DisketteExtension, FlCheckFormatParameters.ddriveMediaConstants->MaximumTrack, ((typedef(ULONG))FlCheckFormatParameters.ddriveMediaConstants->MaximumTrack), ((int)FlStartDrive.DisketteExtension->DeviceObject->Vpb->Flags), FlStartDrive.DisketteExtension->DeviceObject->Vpb->Flags, &(FlRecalibrateDrive.DisketteExtension->FifoBuffer), FloppyDeviceControl.Irp->IoStatus.Information, &(&(FlRecalibrateDrive.DisketteExtension->FifoBuffer)[1]), &(FloppyPnp.disketteExtension->ArcName.Length), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->SkewDelta), &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.HeadLoadTime), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].BytesPerSector, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].DataLength, FloppyAddDevice.DriverObject, &(FloppyStartDevice.fdcInfo.MaxTransferSize), GLOBAL.DriveMediaConstants->SkewDelta, FlStartDrive.DisketteExtension->DeviceObject->Vpb, &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MaximumTrack), &(FloppyAddDevice.deviceObject->AlignmentRequirement), FlAllocateIoBuffer.DisketteExtension->IoBufferMdl, FloppyReadWrite.irpSp, &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MotorOffTime), FloppyCancelQueuedRequest.Irp->IoStatus.__annonCompField4.Status, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MotorSettleTimeRead, &(FloppyCancelQueuedRequest.EEX_Blink->Flink), &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].DataLength), &(FlStartDrive.DisketteExtension->DriveMediaConstants.FormatFillCharacter), &(FloppyThread.disketteExtension->ReleaseFdcWithMotorRunning), &(FloppyStartDevice.disketteExtension->InterfaceString), ((unsigned long)FlReadWriteTrack.NumberOfSectors), FlReadWriteTrack.NumberOfSectors, &(GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType]), FlFormat.formatParameters, FlDetermineMediaType.DisketteExtension->IsReadOnly, (((unsigned int)FloppyDeviceControl.highestDriveMediaType) - ((unsigned int)FloppyDeviceControl.lowestDriveMediaType)), FlReadWriteTrack.driveMediaConstants, GLOBAL.DriveMediaLimits[FlFormat.DisketteExtension->DriveType].HighestDriveMediaType, ((((unsigned int)FloppyDeviceControl.highestDriveMediaType) - ((unsigned int)FloppyDeviceControl.lowestDriveMediaType)) + 1), FloppyThread.irpSp->MinorFunction, ((int)FloppyThread.irpSp->MinorFunction), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].HeadSettleTime, FloppyPnpComplete.DeviceObject, &(FloppyDeviceControl.outputBuffer->BytesPerSector), &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].StepRateHeadUnloadTime), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.HeadSettleTime), &(FloppyPnp.disketteExtension->IsStarted), FloppyDeviceControl.outputBuffer->TracksPerCylinder, FlFinishOperation.DisketteExtension->DeviceObject, &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants), &(FlFormat.fdcDiskChangeParms.DriveStatus), &(FloppyDeviceControl.queryTable.EntryContext), FloppyThread.disketteExtension->ReleaseFdcWithMotorRunning, FlFormat.DisketteExtension->DriveMediaConstants.DataLength, &(FlAcpiConfigureFloppy.biosDriveMediaConstants->MotorOffTime), FloppyThread.irpSp, FlCheckFormatParameters.DisketteExtension->DriveType, IoReleaseCancelSpinLock.Irql, (FlReadWrite.currentSector - FlReadWrite.firstSector), FloppyStartDevice.disketteExtension->UnderlyingPDO, ((int)FlReadWriteTrack.driveMediaConstants->CylinderShift), FlReadWriteTrack.driveMediaConstants->CylinderShift, FloppyDeviceControl.irpSp, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].NumberOfHeads), FlReadWrite.driveMediaConstants->SectorsPerTrack, &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.FormatGapLength), &(FloppyThread.outputBuffer->BytesPerSector), &(FlAllocateIoBuffer.DisketteExtension->MaxTransferSize), &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].StepRateHeadUnloadTime), GLOBAL.DriveMediaConstants->MediaByte, FlDetermineMediaType.DisketteExtension, FlConsolidateMediaTypeWithBootSector.bpbMediaType, ((unsigned int)FlConsolidateMediaTypeWithBootSector.bpbMediaType), ((int)FloppyDeviceControl.driveLetterName.Length), FloppyDeviceControl.driveLetterName.Length, &(GLOBAL.DriveMediaLimits[FloppyDeviceControl.disketteExtension->DriveType].LowestDriveMediaType), FlFormat.badTrackBufferLength, FlAcpiConfigureFloppy.biosDriveMediaConstants->SkewDelta, FloppyAddDevice.disketteExtension->IsReadOnly, FloppyCreateClose.Irp->IoStatus.Information, &(FlFormat.DisketteExtension->DriveMediaType), KeWaitForSingleObject.Object, RtlCopyUnicodeString.SourceString, FloppyPnp.irpSp->Context, FloppyAddDevice.disketteExtension->DriverObject, FloppyPnp.nextIrpSp->Control, FlReadWrite.mdl, &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.HeadSettleTime), &(FlStartDrive.DisketteExtension->DriveMediaConstants.CylinderShift), &(FloppyThread.irpSp->MajorFunction), FloppyDeviceControl.queryTable.Name, &(FlDetermineMediaType.ddriveMediaConstants->SectorsPerTrack), FlAcpiConfigureFloppy.biosDriveMediaConstants->FormatGapLength, &(FlFdcDeviceIo.irpStack->Parameters.DeviceIoControl), FlAcpiConfigureFloppy.biosDriveMediaConstants->ReadWriteGapLength, FlFormat.DisketteExtension->DriveMediaConstants.ReadWriteGapLength, FloppyThread.disketteExtension, FlInitializeControllerHardware.DisketteExtension, FlCheckFormatParameters.DisketteExtension, FloppyThread.Context, ((ptr(typedef(DISKETTE_EXTENSION)))FloppyThread.Context), ((unsigned int)FlStartDrive.DisketteExtension->DriveMediaType), FlStartDrive.DisketteExtension->DriveMediaType, &(FlCheckFormatParameters.FormatParameters->MediaType), &(GLOBAL.DriveMediaConstants->FormatGapLength), GLOBAL.DriveMediaLimits[FloppyDeviceControl.disketteExtension->DriveType].LowestDriveMediaType, &(GLOBAL.DriveMediaLimits[FlCheckFormatParameters.DisketteExtension->DriveType].LowestDriveMediaType), FloppyThread.outputBuffer->MediaType, FloppyAddDevice.disketteExtension->DeviceName.MaximumLength, &(GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].NumberOfHeads), &(FloppyAddDevice.disketteExtension->HoldNewReqMutex), FlStartDrive.DisketteExtension->DriveMediaConstants.MediaByte, &(FlReadWriteTrack.DisketteExtension->FifoBuffer), &(&(FlReadWriteTrack.DisketteExtension->FifoBuffer)[1]), &(&(FlReadWriteTrack.DisketteExtension->FifoBuffer)[2]), FlStartDrive.DisketteExtension->DriveMediaConstants.BytesPerSector, &(&(FlReadWriteTrack.DisketteExtension->FifoBuffer)[3]), &(&(FlReadWriteTrack.DisketteExtension->FifoBuffer)[4]), &(&(FlReadWriteTrack.DisketteExtension->FifoBuffer)[5]), &(&(FlReadWriteTrack.DisketteExtension->FifoBuffer)[6]), &(&(FlReadWriteTrack.DisketteExtension->FifoBuffer)[7]), &(&(FlReadWriteTrack.DisketteExtension->FifoBuffer)[8]), FlFormat.formatParameters->MediaType, ((unsigned int)FlFormat.formatParameters->MediaType), FlStartDrive.DisketteExtension->BiosDriveMediaConstants.DataTransferRate, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].CylinderShift, FlHdbit.setHdBitParameter.Media144MB, &(GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].MediaType), FloppyQueueRequest.DisketteExtension, &(FlStartDrive.DisketteExtension->DriveMediaConstants.SectorLengthCode), FlFormat.driveMediaConstants->FormatFillCharacter, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].NumberOfHeads, &(FloppyAddDevice.deviceName.Length), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].DataLength), FlConfigCallBack.disketteExtension->DriveType, &(FlConsolidateMediaTypeWithBootSector.readidDriveMediaConstants->MediaType), FlHdbit.DisketteExtension, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].FormatGapLength), &(FlFormat.driveMediaConstants->FormatFillCharacter), &(FloppyPnp.nextIrpSp->Control), FlStartDrive.DisketteExtension->BiosDriveMediaConstants.FormatGapLength, FlDatarateSpecifyConfigure.DisketteExtension->DriveMediaConstants.CylinderShift, FlAcpiConfigureFloppy.biosDriveMediaConstants->MotorSettleTimeWrite, GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType, FloppyStartDevice.nextIrpSp->Control, FlFormat.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, FloppyReadWrite.disketteExtension->ByteCapacity, FloppyStartDevice.irpSp->CompletionRoutine, ObfDereferenceObject.Object, FlFormat.DisketteExtension->DriveMediaConstants.SectorsPerTrack, &(FloppyThread.disketteExtension->DriveMediaConstants.NumberOfHeads), FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MotorSettleTimeRead, FlStartDrive.DisketteExtension->DriveMediaConstants.MotorSettleTimeWrite, &(FloppyPnp.disketteExtension->TargetObject), FlFormat.formatExParameters->FormatGapLength, ((unsigned char)FlFormat.formatExParameters->FormatGapLength), FloppyCancelQueuedRequest.DeviceObject->DeviceExtension, ((ptr(typedef(DISKETTE_EXTENSION)))FloppyCancelQueuedRequest.DeviceObject->DeviceExtension), FloppyDeviceControl.suggestedName->UseOnlyIfThereAreNoOtherLinks, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MediaByte, FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.StepRateHeadUnloadTime, ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.StepRateHeadUnloadTime), &(FloppyPower.disketteExtension->PoweringDown), &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.SectorLengthCode), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].HeadLoadTime, IoDeleteDevice.DeviceObject, &(FlReadWrite.DisketteExtension->IoBufferMdl), &(FloppyAddDevice.disketteExtension->FlCancelSpinLock), GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].SectorsPerTrack, FloppyStartDevice.DeviceObject->DeviceExtension, ((ptr(typedef(DISKETTE_EXTENSION)))FloppyStartDevice.DeviceObject->DeviceExtension), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.FormatGapLength), &(FlFreeIoBuffer.DisketteExtension->MaxTransferSize), &(FloppyStartDevice.irpSp->CompletionRoutine), GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].SkewDelta, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].NumberOfHeads, FlHdbit.setHdBitParameter.ChangedHdBit, &(FlFormat.DisketteExtension->DriveMediaConstants.MediaType), FlReadWriteTrack.driveMediaConstants->ReadWriteGapLength, FlFormat.DisketteExtension->DriveMediaConstants.StepRateHeadUnloadTime, GLOBAL.DriveMediaConstants->MaximumTrack, &(FlDatarateSpecifyConfigure.DisketteExtension->ControllerConfigurable), &(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[2], ((int)&(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[2]), &(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[3], &(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[1], FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer, FloppyPower.Irp->IoStatus.__annonCompField4.Status, &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MotorSettleTimeWrite), FlRecalibrateDrive.DisketteExtension->HardwareFailed, FlFreeIoBuffer.DisketteExtension->IoBufferMdl, IoQueryDeviceDescription.Context, &(FlDetermineMediaType.DisketteExtension->BytesPerSector), FlStartDrive.DisketteExtension->BiosDriveMediaConstants.NumberOfHeads, &(FloppyThread.disketteExtension->RequestSemaphore), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.DataTransferLength), &(FloppyDeviceControl.uniqueId->UniqueIdLength), &(GLOBAL.DriveMediaConstants->MotorOffTime), &(FloppyAddDevice.disketteExtension->FloppyControllerAllocated), &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.ReadWriteGapLength), &(FlStartDrive.DisketteExtension->DriveMediaConstants.BytesPerSector), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].HeadSettleTime, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].FormatGapLength), FloppyThread.disketteExtension->PoweringDown, ((int)FloppyThread.disketteExtension->PoweringDown), ret$IoAllocateMdl, &(FlReadWriteTrack.driveMediaConstants->CylinderShift), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.DataLength), &(FlFormat.DisketteExtension->DriveMediaConstants.DataLength), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].HeadSettleTime), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->DataTransferRate), GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].MediaType, ((unsigned int)GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].MediaType), FloppyThread.disketteExtension->FifoBuffer, &(FloppyThread.disketteExtension->FifoBuffer)[1], &(FloppyAddDevice.disketteExtension->ListSpinLock), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].SectorsPerTrack, &(FlAcpiConfigureFloppy.biosDriveMediaConstants->FormatFillCharacter), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.HeadLoadTime), (((int)&(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[2]) + 64), ((unsigned char)(((int)&(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[2]) + 64)), FloppyStartDevice.fdcInfo.AcpiFdiSupported, ((int)FlReadWriteTrack.DisketteExtension->DeviceUnit), FlReadWriteTrack.DisketteExtension->DeviceUnit, GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].BytesPerSector, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].SectorLengthCode), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].StepRateHeadUnloadTime), &(FloppyAddDevice.disketteExtension->ArcName), ((unsigned int)FloppyDeviceControl.disketteExtension->DeviceName.Length), FloppyDeviceControl.disketteExtension->DeviceName.Length, (((int)&(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[2]) + 16), ((unsigned char)(((int)&(FlDatarateSpecifyConfigure.DisketteExtension->FifoBuffer)[2]) + 16)), FlConsolidateMediaTypeWithBootSector.readidDriveMediaConstants->MediaType, FlAcpiConfigureFloppy.biosDriveMediaConstants->HeadSettleTime, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].DataLength), ((ptr(struct(_DISK_GEOMETRY)))FloppyThread.irp->AssociatedIrp.SystemBuffer), FloppyThread.irp->AssociatedIrp.SystemBuffer, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MotorSettleTimeWrite), FloppyDeviceControl.disketteExtension->IsStarted, &(FloppyStartDevice.disketteExtension->DeviceUnit), &(FlFormat.DisketteExtension->DriveMediaConstants.HeadLoadTime), GLOBAL.DriveMediaConstants->ReadWriteGapLength, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MotorSettleTimeRead, &(FlReadWriteTrack.driveMediaConstants->DataLength), IoAllocateMdl.VirtualAddress, ((unsigned char)FloppyStartDevice.fdcInfo.PeripheralNumber), FloppyStartDevice.fdcInfo.PeripheralNumber, &(FloppyCancelQueuedRequest.EEX_Flink->Blink), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.DataTransferRate), FloppyPower.irpSp->MinorFunction, ((int)FloppyPower.irpSp->MinorFunction), GLOBAL.DriveMediaConstants->HeadLoadTime, &(GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType]), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->ReadWriteGapLength), &(FloppyPnp.disketteExtension->HoldNewReqMutex), &(&(FlStartDrive.DisketteExtension->FifoBuffer)[2]), &(&(FlStartDrive.DisketteExtension->FifoBuffer)[1]), &(FlStartDrive.DisketteExtension->FifoBuffer), FloppyPower.irpSp->Parameters.Power.State, &(FlFormat.DisketteExtension->IsReadOnly), FlConfigCallBack.biosDriveMediaConstants->FormatFillCharacter, FlStartDrive.DisketteExtension->BiosDriveMediaConstants.HeadSettleTime, FlReadWrite.byteToSectorShift, ((ptr(void))&(FloppyDeviceControl.uniqueId->UniqueId)), &(FloppyDeviceControl.uniqueId->UniqueId), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.FormatGapLength, ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.FormatGapLength), FlStartDrive.DisketteExtension->DriveMediaConstants.MediaType, &(FloppyAddDevice.disketteExtension->DriverObject), FlAcpiConfigureFloppy.biosDriveMediaConstants->MotorOffTime, FlCheckFormatParameters.FormatParameters->EndCylinderNumber, FlQueueIrpToThread.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation->Control, ((int)FlQueueIrpToThread.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation->Control), &(FlConsolidateMediaTypeWithBootSector.readidDriveMediaConstants->BytesPerSector), FloppyPnp.irpSp->MinorFunction, ((int)FloppyPnp.irpSp->MinorFunction), FlReadWrite.currentSector, FlQueueIrpToThread.DisketteExtension->ThreadReferenceCount, ((unsigned long)FloppyThread.disketteExtension->DriveMediaConstants.NumberOfHeads), FloppyThread.disketteExtension->DriveMediaConstants.NumberOfHeads, (FlQueueIrpToThread.DisketteExtension->ThreadReferenceCount + 1), GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MotorOffTime, &(FlFormat.driveMediaConstants->CylinderShift), FloppyPnp.disketteExtension->HoldNewRequests, &(FloppyAddDevice.disketteExtension->DeviceName.MaximumLength), FlFormat.DisketteExtension->IsReadOnly, &(FloppyStartDevice.fdcInfo.AcpiBios), KfReleaseSpinLock.SpinLock, &(FlStartDrive.DisketteExtension->DriveType), FlIssueCommand.DisketteExtension->TargetObject, PoCallDriver.DeviceObject, &(FloppyDeviceControl.disketteExtension->DeviceName), &(FloppyStartDevice.disketteExtension->HoldNewRequests), &(FlStartDrive.fdcDiskChangeParms.DriveStatus), FloppyAddDevice.deviceObject, &(FlHdbit.setHdBitParameter.DeviceUnit), &(GLOBAL.DriveMediaConstants->DataTransferRate), &(FlStartDrive.DisketteExtension->DriveMediaConstants.SectorsPerTrack), FlFreeIoBuffer.DisketteExtension->MaxTransferSize, &(FloppyAddDevice.disketteExtension->UnderlyingPDO), ((ptr(void))&(FloppyDeviceControl.mountName->Name)), &(FloppyDeviceControl.mountName->Name), &(FloppyReadWrite.irpSp->Parameters.Read.ByteOffset), &(FlQueueIrpToThread.DisketteExtension->PoweringDown), FlFdcDeviceIo.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, ((unsigned long)GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].SectorsPerTrack), GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].SectorsPerTrack, (FlFdcDeviceIo.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation - 1), FlDetermineMediaType.DisketteExtension->DriveMediaConstants.SectorLengthCode, FlFormat.DisketteExtension->DriveMediaConstants.DataTransferRate, GLOBAL.DriveMediaConstants[FlCheckFormatParameters.driveMediaType].MediaType, ((unsigned int)GLOBAL.DriveMediaConstants[FlCheckFormatParameters.driveMediaType].MediaType), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType]), FlIssueCommand.DisketteExtension, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.FormatGapLength, &(FlStartDrive.DisketteExtension->DriveMediaConstants.SkewDelta), FlDetermineMediaType.irp->MdlAddress, &(FloppyPnp.DeviceObject->DeviceExtension), &(FloppyPower.irpSp->Parameters), &(FlFormat.DisketteExtension->IoBufferMdl), &(GLOBAL.PagingMutex->Count), FlStartDrive.DisketteExtension->DeviceObject, &(GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].BytesPerSector), &(FlHdbit.setHdBitParameter.Media144MB), FlConfigCallBack.biosDriveMediaConstants->HeadLoadTime, &(GLOBAL.DriveMediaLimits[FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveType].LowestDriveMediaType), GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].BytesPerSector, ((int)GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].BytesPerSector), ((ptr(void))&(FloppyDeviceControl.suggestedName->Name)), &(FloppyDeviceControl.suggestedName->Name), FlStartDrive.DisketteExtension->DriveMediaConstants.DataTransferRate, FlFormat.driveMediaConstants->BytesPerSector, ((unsigned long)FlFormat.driveMediaConstants->BytesPerSector), &(FloppyPnp.disketteExtension->FloppyThread), ExfInterlockedInsertHeadList.ListHead, &(&(FloppyDeviceControl.suggestedName->Name)[13]), &(&(FloppyDeviceControl.suggestedName->Name)[12]), KeInitializeSemaphore.Semaphore, ((int)*FloppyDeviceControl.driveLetterName.Buffer), *FloppyDeviceControl.driveLetterName.Buffer, ((int)FloppyDeviceControl.driveLetterName.Buffer[1]), FloppyDeviceControl.driveLetterName.Buffer[1], GLOBAL.DriveMediaConstants[FloppyDeviceControl.i].MediaType, FloppyAddDevice.disketteExtension->IsRemoved, &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MaximumTrack), &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType]), ((ptr(void))FloppyPnp.irpSp), FloppyPnp.irpSp, FlAcpiConfigureFloppy.FdcInfo, ((ptr(void))FlIssueCommand.IoMdl), FlIssueCommand.IoMdl, FloppyDeviceControl.outputBuffer->Cylinders.__annonCompField1.HighPart, &(GLOBAL.PagingMutex->Event), FloppyDeviceControl.disketteExtension, KeInitializeSpinLock.SpinLock, &(FlReadWrite.irpSp->MajorFunction), &(FlCheckFormatParameters.FormatParameters->StartHeadNumber), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MotorSettleTimeWrite, FlDetermineMediaType.DisketteExtension->FifoBuffer, &(FlDetermineMediaType.DisketteExtension->FifoBuffer)[1], FlInterpretError.StatusRegister1, &(FlFormat.driveMediaConstants->SectorsPerTrack), FlReadWrite.driveMediaConstants, &(FlFormat.DisketteExtension->DriveMediaConstants.SectorsPerTrack), FlDetermineMediaType.DisketteExtension->DriveMediaConstants.StepRateHeadUnloadTime, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MaximumTrack, FlFormat.formatExParameters, FlHdbit.setHdBitParameter.More120MB, &(FloppyPower.disketteExtension->PowerDownMutex), FlFormat.irpSp->Parameters.DeviceIoControl.OutputBufferLength, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MediaByte), &(FloppyThread.outputBuffer->Cylinders.__annonCompField1.HighPart), &(FloppyPnp.disketteExtension->DeviceName), FloppyStartDevice.disketteExtension->HoldNewRequests, FlFormat.DisketteExtension->IoBufferMdl, GLOBAL.DriveMediaConstants->SectorsPerTrack, &(FloppyDeviceControl.disketteExtension->IsStarted), FloppyCancelQueuedRequest.Irp->Tail.Overlay.__annonCompField17.ListEntry.Flink, &(FlIssueCommand.issueCommandParms.TransferBytes), ExfInterlockedInsertTailList.ListHead, &(FlAcpiConfigureFloppy.DisketteExtension->BiosDriveMediaConstants), &(FloppyThread.disketteExtension->PoweringDown), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.MaxCylinderNumber), FloppyPower.Irp->CurrentLocation, ((int)FloppyPower.Irp->CurrentLocation), (((int)FloppyPower.Irp->CurrentLocation) + 1), ((typedef(CHAR))(((int)FloppyPower.Irp->CurrentLocation) + 1)), FlFormat.DisketteExtension->DriveMediaConstants.MaximumTrack, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].SectorsPerTrack, FloppyAddDevice.disketteExtension->IsStarted, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].DataTransferRate), &(FlStartDrive.DisketteExtension->DriveMediaConstants.NumberOfHeads), FlQueueIrpToThread.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, &(FlStartDrive.DisketteExtension->DriveMediaConstants.MediaType), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MaximumTrack, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].FormatGapLength, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MaximumTrack), FloppyPower.disketteExtension->TargetObject, &(FlAcpiConfigureFloppy.biosDriveMediaConstants->HeadSettleTime), &(FlReadWrite.driveMediaConstants->NumberOfHeads), FloppyDeviceControl.driveLetterName.MaximumLength, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].DataTransferRate, &(FlAllocateIoBuffer.DisketteExtension->IoBuffer), &(FlReadWrite.irpSp->Flags), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.ReadWriteGapLength, ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.ReadWriteGapLength), FlConsolidateMediaTypeWithBootSector.i, ((enum(_DRIVE_MEDIA_TYPE))FlConsolidateMediaTypeWithBootSector.i), &(FlFormat.formatExParameters->FormatGapLength), (FlConsolidateMediaTypeWithBootSector.i + 1), &(FlDatarateSpecifyConfigure.DisketteExtension->DriveMediaConstants.HeadLoadTime), FlConfigCallBack.biosDriveMediaConstants->SectorsPerTrack, &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.DataTransferRate), FlIssueCommand.issueCommandParms.FifoOutBuffer, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].HeadLoadTime), FloppyAddDevice.fdcInfo.BufferCount, &(FlIssueCommand.issueCommandParms.IoHandle), &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].SectorsPerTrack), RtlCopyUnicodeString.DestinationString, FlDetermineMediaType.DisketteExtension->DriveType, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].ReadWriteGapLength), FlIssueCommand.FifoInBuffer, FloppyDeviceControl.disketteExtension->HoldNewRequests, FlFormat.DisketteExtension, FlDetermineMediaType.DisketteExtension->ByteCapacity, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].BytesPerSector), FlAcpiConfigureFloppy.biosDriveMediaConstants->HeadLoadTime, FloppyCancelQueuedRequest.EEX_Blink->Flink, DriverEntry.tmp, ((ptr(struct(_FAST_MUTEX)))DriverEntry.tmp), FlFormat.driveMediaConstants->SectorsPerTrack, ((int)FlFormat.driveMediaConstants->SectorsPerTrack), &(FlFormat.formatParameters->StartHeadNumber), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->MediaByte), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].SectorLengthCode), &(FloppyThread.disketteExtension->IoBuffer), FlReadWrite.DisketteExtension->IsReadOnly, IoQueryDeviceDescription.PeripheralNumber, FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveMediaConstants.SectorsPerTrack, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MotorSettleTimeWrite), FlFormat.DisketteExtension->DriveMediaConstants.MotorSettleTimeRead, &(FlStartDrive.DisketteExtension->HardwareFailed), ((int)FlStartDrive.driveStatus), FlStartDrive.driveStatus, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MotorSettleTimeRead), &(FlFormat.DisketteExtension->IoBuffer), IoBuildDeviceIoControlRequest.Event, &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MediaByte), FlDetermineMediaType.sectorLengthCode, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].ReadWriteGapLength, FlIssueCommand.issueCommandParms.TransferBytes, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].DataTransferRate), &(FlFormat.driveMediaConstants->MaximumTrack), FlReadWrite.driveMediaConstants->SkewDelta, &(GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].MediaType), &(FlDetermineMediaType.DisketteExtension->MediaType), &(FloppyPower.irpSp->Parameters.Power), ExfInterlockedRemoveHeadList.ListHead, ((int)FloppyStartDevice.disketteExtension->DriveType), FloppyStartDevice.disketteExtension->DriveType, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MaximumTrack, &(GLOBAL.DriveMediaConstants->DataLength), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.MotorSettleTime), FlDatarateSpecifyConfigure.DisketteExtension->ControllerConfigurable, &(GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].MediaByte), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].DataTransferRate, &(FloppyThread.outputBuffer->Cylinders.__annonCompField1), GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].DataLength, &(FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveMediaConstants.SectorsPerTrack), &(GLOBAL.DriveMediaConstants[FlCheckFormatParameters.driveMediaType].MediaType), FlRecalibrateDrive.DisketteExtension, ((ptr(typedef(DISKETTE_EXTENSION)))FloppyReadWrite.DeviceObject->DeviceExtension), FloppyReadWrite.DeviceObject->DeviceExtension, &(&(FlInitializeControllerHardware.DisketteExtension->FifoBuffer)[1]), &(FlInitializeControllerHardware.DisketteExtension->FifoBuffer), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].CylinderShift), &(GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType), FlFreeIoBuffer.DisketteExtension, FloppyProcessQueuedRequests.DisketteExtension->DeviceObject, IoQueryDeviceDescription.BusType, FlStartDrive.DisketteExtension->DriveMediaConstants.MaximumTrack, FloppyStartDevice.fdcInfo.AcpiBios, FlFormat.length, &(FloppyStartDevice.DeviceObject->DeviceExtension), &(FloppyThread.outputBuffer->SectorsPerTrack), &(FloppyAddDevice.fdcInfo.BufferSize), ((int)FlStartDrive.DisketteExtension->FifoBuffer), FlStartDrive.DisketteExtension->FifoBuffer, ((int)&(FlStartDrive.DisketteExtension->FifoBuffer)[1]), &(FlStartDrive.DisketteExtension->FifoBuffer)[1], &(FlStartDrive.DisketteExtension->FifoBuffer)[2], FlConfigCallBack.biosDriveMediaConstants->MotorSettleTimeWrite, IoCreateDevice.DeviceName, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MotorSettleTimeWrite, FloppyDeviceControl.disketteExtension->InterfaceString.Length, FlFormat.fdcDiskChangeParms.DriveStatus, FlFormat.DisketteExtension->DriveMediaConstants.SectorLengthCode, &(FloppyDeviceControl.outputBuffer[1]), FloppyDeviceControl.outputBuffer, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].SkewDelta), FlDetermineMediaType.DisketteExtension->DriveMediaConstants.HeadSettleTime, &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.StepRateHeadUnloadTime), ((int)FlReadWriteTrack.driveMediaConstants->HeadSettleTime), FlReadWriteTrack.driveMediaConstants->HeadSettleTime, FloppyThread.outputBuffer___0, GLOBAL.DriveMediaLimits[FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveType].LowestDriveMediaType, ((unsigned long)GLOBAL.DriveMediaLimits[FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveType].LowestDriveMediaType), &(GLOBAL.DriveMediaLimits[FlDetermineMediaType.DisketteExtension->DriveType]), (((unsigned int)FlCheckFormatParameters.driveMediaType) - 1), ((typedef(DRIVE_MEDIA_TYPE))(((unsigned int)FlCheckFormatParameters.driveMediaType) - 1)), FlCheckFormatParameters.driveMediaType, ((unsigned int)FlCheckFormatParameters.driveMediaType), &(FlInitializeControllerHardware.DisketteExtension->TargetObject), FloppyThread.outputBuffer->TracksPerCylinder, &(FloppyPnp.irpSp->CompletionRoutine), FloppyAddDevice.PhysicalDeviceObject, &(FloppyDeviceControl.outputBuffer->MediaType), ((ptr(void))FloppyPnp.disketteExtension->FloppyThread), FloppyPnp.disketteExtension->FloppyThread, &(FlReadWrite.irpSp->Parameters.Read.ByteOffset.__annonCompField1), &(FlFormat.DisketteExtension->DriveMediaConstants.MotorOffTime), FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MediaByte, &(FloppyStartDevice.nextIrpSp->Control), FlConsolidateMediaTypeWithBootSector.n, FlStartDrive.DisketteExtension->DriveMediaConstants.HeadLoadTime, &(&(FlDetermineMediaType.DisketteExtension->FifoBuffer)[1]), &(FlDetermineMediaType.DisketteExtension->FifoBuffer), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].MotorSettleTimeRead), &(FlReadWrite.DisketteExtension->MaxTransferSize), &(FloppyAddDevice.disketteExtension->TargetObject), FlStartDrive.fdcEnableParms.DriveOnValue, RtlAnsiStringToUnicodeString.DestinationString, ExReleaseFastMutex.FastMutex, &(FloppyThread.irpSp->Flags), FlStartDrive.DisketteExtension->HardwareFailed, FlConfigCallBack.biosDriveMediaConstants->ReadWriteGapLength, &(FloppyDeviceControl.driveLetterName.Buffer), &(FloppyThread.disketteExtension->HardwareFailed), &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.BytesPerSector), GLOBAL.DriveMediaConstants->DataTransferRate, ((unsigned long)(7 + ((int)FlReadWriteTrack.driveMediaConstants->SectorLengthCode))), (7 + ((int)FlReadWriteTrack.driveMediaConstants->SectorLengthCode)), (FlDetermineMediaType.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation - 1), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].FormatFillCharacter, FlConfigCallBack.biosDriveMediaConstants->MotorOffTime, FlDetermineMediaType.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, &(FlIssueCommand.DisketteExtension->HardwareFailed), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.MotorOffTime, ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.MotorOffTime), ((int)FlReadWriteTrack.driveMediaConstants->SectorLengthCode), FlReadWriteTrack.driveMediaConstants->SectorLengthCode, FlAcpiConfigureFloppy.DisketteExtension->DriveType, GLOBAL.DriveMediaLimits[FlCheckFormatParameters.DisketteExtension->DriveType].LowestDriveMediaType, ((unsigned int)GLOBAL.DriveMediaLimits[FlCheckFormatParameters.DisketteExtension->DriveType].LowestDriveMediaType), &(FlDatarateSpecifyConfigure.DisketteExtension->DriveMediaConstants.DataTransferRate), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.CylinderShift), IoAttachDeviceToDeviceStack.SourceDevice, ((int)FlStartDrive.DisketteExtension->DriveType), FlStartDrive.DisketteExtension->DriveType, ((ptr(void))FloppyDeviceControl.valueName), FloppyDeviceControl.valueName, FloppyAddDevice.disketteExtension->DeviceObject, &(FlFormat.formatParameters->StartCylinderNumber), FlConsolidateMediaTypeWithBootSector.DisketteExtension->ByteCapacity, &(FlAcpiConfigureFloppy.DisketteExtension->DriveType), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MotorSettleTimeRead), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.HeadLoadTime, ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.HeadLoadTime), FlFormat.DisketteExtension->DriveMediaConstants.MotorSettleTimeWrite, &(FlDatarateSpecifyConfigure.DisketteExtension->TargetObject), &(FloppyDeviceControl.outputBuffer->SectorsPerTrack), FlFreeIoBuffer.DisketteExtension->IoBuffer, ((ptr(void))FlFreeIoBuffer.DisketteExtension->IoBuffer), ((int)FlReadWrite.irpSp->Flags), FlReadWrite.irpSp->Flags, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MaximumTrack), &(FloppyDeviceControl.DeviceObject->Characteristics), ObReferenceObjectByHandle.Object, &(FlFinishOperation.DisketteExtension->MediaType), &(FlFormat.driveMediaConstants->NumberOfHeads), &(FloppyDeviceControl.queryTable.Flags), ((ptr(void))FloppyDeviceControl.disketteExtension->InterfaceString.Buffer), FloppyDeviceControl.disketteExtension->InterfaceString.Buffer, &(FloppyThread.disketteExtension->DeviceObject->Flags), &(FloppyDeviceControl.driveLetterName.Length), &(FloppyDeviceControl.irpSp->Parameters.DeviceIoControl.OutputBufferLength), GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].SectorsPerTrack, ((int)GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].SectorsPerTrack), &(FloppyThread.disketteExtension->MediaType), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.HeadLoadTime), FloppyCancelQueuedRequest.EEX_Flink, FloppyThread.irp->IoStatus.__annonCompField4.Status, FlFormat.DisketteExtension->TargetObject, memcpy.t, IoDeleteSymbolicLink.SymbolicLinkName, FlReadWrite.Irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, FlFormat.currentTrack, ((int)FlFormat.currentTrack), &(FloppyThread.disketteExtension->ListSpinLock), (((int)FlFormat.currentTrack) + 1), ((typedef(UCHAR))(((int)FlFormat.currentTrack) + 1)), &(FlQueueIrpToThread.DisketteExtension->ListEntry), FloppyStartDevice.disketteExtension->MaxTransferSize, FloppyCancelQueuedRequest.disketteExtension, ((unsigned long)(size(typedef(USHORT)) + ((unsigned int)FloppyDeviceControl.uniqueId->UniqueIdLength))), (size(typedef(USHORT)) + ((unsigned int)FloppyDeviceControl.uniqueId->UniqueIdLength)), FlStartDrive.DisketteExtension->DeviceObject->Flags, FlReadWrite.DisketteExtension, FloppyStartDevice.disketteExtension->DeviceUnit, FloppyPower.disketteExtension->ThreadReferenceCount, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MediaByte, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].StepRateHeadUnloadTime, &(FlFormat.DisketteExtension->DriveMediaConstants.CylinderShift), &(FlFormat.badTrackBuffer[FlFormat.numberOfBadTracks]), &(FlStartDrive.DisketteExtension->TargetObject), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MediaType, &(FlFinishOperation.DisketteExtension->ThreadReferenceMutex), FlFormat.DisketteExtension->DriveMediaConstants.MotorOffTime, (((int)FlCheckBootSector.irp->CurrentLocation) - 1), ((typedef(CHAR))(((int)FlCheckBootSector.irp->CurrentLocation) - 1)), &(FloppyDeviceControl.disketteExtension->DriveType), &(FlStartDrive.DisketteExtension->DriveMediaConstants.FormatGapLength), FlCheckBootSector.irp->CurrentLocation, ((int)FlCheckBootSector.irp->CurrentLocation), FlStartDrive.DisketteExtension->BiosDriveMediaConstants.SectorsPerTrack, &(FlStartDrive.DisketteExtension->DriveMediaConstants.DataLength), &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].SectorLengthCode), &(GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType), &(FlFormat.driveMediaConstants->SectorLengthCode), &(FloppyAddDevice.disketteExtension->PowerDownMutex), &(FloppyAddDevice.disketteExtension->MediaType), FlReadWrite.irpSp, FlReadWrite.Irp->IoStatus.Information, FloppyPower.disketteExtension, &(FlFormat.DisketteExtension->DriveMediaConstants.StepRateHeadUnloadTime), &(FlFormat.DisketteExtension->ByteCapacity), IoRegisterDeviceInterface.PhysicalDeviceObject, &(FloppyDeviceControl.disketteExtension->HoldNewRequests), &(FlFormat.driveMediaConstants->BytesPerSector), FlHdbit.DisketteExtension->TargetObject, "\\\000D\000o\000s\000D\000e\000v\000i\000c\000e\000s\000\\\000", &(FlIssueCommand.DisketteExtension->TargetObject), &(FloppyReadWrite.disketteExtension->HoldNewReqMutex), FlDetermineMediaType.ddriveMediaConstants, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MotorSettleTimeWrite, &(FlRecalibrateDrive.DisketteExtension->FifoBuffer)[1], ((int)&(FlRecalibrateDrive.DisketteExtension->FifoBuffer)[1]), FlReadWrite.ioBuffer, FlHdbit.DisketteExtension->DeviceUnit, (FlCheckBootSector.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation - 1), FlRecalibrateDrive.DisketteExtension->FifoBuffer, ((int)FlRecalibrateDrive.DisketteExtension->FifoBuffer), FlCheckBootSector.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.NumberOfHeads, &(FlStartDrive.DisketteExtension->DeviceUnit), FlDetermineMediaType.ddriveMediaConstants->MediaType, IoCreateSymbolicLink.DeviceName, &(FlFormat.DisketteExtension->FifoBuffer)[5], &(FlFormat.DisketteExtension->FifoBuffer)[3], GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType, &(FlFormat.DisketteExtension->FifoBuffer)[4], GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].DataTransferRate, &(&(FloppyThread.disketteExtension->FifoBuffer)[1]), &(FloppyThread.disketteExtension->FifoBuffer), &(FlFormat.DisketteExtension->FifoBuffer)[2], ((int)&(FlFormat.DisketteExtension->FifoBuffer)[2]), &(FlFormat.DisketteExtension->FifoBuffer)[1], ((int)&(FlFormat.DisketteExtension->FifoBuffer)[1]), FlFormat.DisketteExtension->FifoBuffer, ((int)FlFormat.DisketteExtension->FifoBuffer), FloppyDeviceControl.suggestedName, &(FloppyDeviceControl.irpSp->Parameters.DeviceIoControl), FlDatarateSpecifyConfigure.DisketteExtension->LastDriveMediaType, GLOBAL.DriveMediaLimits[FlDetermineMediaType.DisketteExtension->DriveType].HighestDriveMediaType, GLOBAL.DriveMediaConstants->HeadSettleTime, FlAcpiConfigureFloppy.biosDriveMediaConstants->NumberOfHeads, &(FloppyAddDevice.disketteExtension->IsStarted), &(FloppyStartDevice.fdcInfo.BufferCount), &(FloppyStartDevice.disketteExtension->MaxTransferSize), &(FloppyDeviceControl.disketteExtension->InterfaceString), ExfInterlockedInsertHeadList.Lock, FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveMediaConstants.NumberOfHeads, &(FloppyAddDevice.disketteExtension->DeviceName.Length), &(FlFormat.DisketteExtension->DriveMediaConstants.FormatGapLength), IoFreeMdl.Mdl, &(FloppyAddDevice.disketteExtension->DeviceName.Buffer), FloppyPnp.Irp->IoStatus.Information, IoCreateDevice.DriverObject, &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].HeadLoadTime), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].SkewDelta), &(FloppyStartDevice.disketteExtension->UnderlyingPDO), &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].NumberOfHeads), GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].FormatFillCharacter, FloppyStartDevice.fdcInfo.BufferCount, ((unsigned char)(FlReadWrite.lastSector - FlReadWrite.currentSector)), (FlReadWrite.lastSector - FlReadWrite.currentSector), FlFormat.formatExParameters->SectorsPerTrack, ((unsigned char)FlFormat.formatExParameters->SectorsPerTrack), GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].MediaByte, &(FlFormat.driveMediaConstants->FormatGapLength), FlConfigCallBack.biosDriveMediaConstants->SkewDelta, &(FlCheckFormatParameters.FormatParameters->StartCylinderNumber), GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].StepRateHeadUnloadTime, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].SectorLengthCode), FlFdcDeviceIo.irpStack, FlStartDrive.DisketteExtension->BiosDriveMediaConstants.DataLength, &(FlFormat.DisketteExtension->DriveMediaConstants.BytesPerSector), FlFormat.DisketteExtension->LastDriveMediaType, ((unsigned int)FlFormat.DisketteExtension->LastDriveMediaType), &(FloppyReadWrite.disketteExtension->BytesPerSector), FlConfigCallBack.biosDriveMediaConstants->CylinderShift, &(FloppyDeviceControl.disketteExtension->TargetObject), FlStartDrive.DisketteExtension, &(FlReadWrite.DisketteExtension->IsReadOnly), &(GLOBAL.DriveMediaLimits[FlFormat.DisketteExtension->DriveType]), FloppyThread.irpSp->MajorFunction, ((int)FloppyThread.irpSp->MajorFunction), &(FloppyReadWrite.irpSp->Parameters.Read.ByteOffset.__annonCompField1.LowPart), &(FlStartDrive.fdcDiskChangeParms.DriveOnValue), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MotorOffTime), ExFreePool.P, &(FlReadWrite.irpSp->Parameters.Read), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].FormatFillCharacter, ExfInterlockedRemoveHeadList.Lock, FlCheckFormatParameters.FormatParameters, FlFormat.endTrack, ((int)FlFormat.endTrack), &(FlConsolidateMediaTypeWithBootSector.DisketteExtension->IsReadOnly), FlFormat.DisketteExtension->DriveMediaConstants.CylinderShift, &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.SectorLengthCode), (FlFinishOperation.DisketteExtension->ThreadReferenceCount + 1), IofCallDriver.DeviceObject, FlFinishOperation.DisketteExtension->ThreadReferenceCount, FlFdcDeviceIo.Data, FlStartDrive.DisketteExtension->DriveMediaConstants.FormatFillCharacter, &(FlAcpiConfigureFloppy.biosDriveMediaConstants->CylinderShift), &(FloppyDeviceControl.outputBuffer->Cylinders.__annonCompField1.LowPart), FlQueueIrpToThread.DisketteExtension, ((ptr(void))FlQueueIrpToThread.DisketteExtension), &(FlStartDrive.fdcEnableParms.DriveOnValue), GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MotorSettleTimeWrite, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].HeadSettleTime, FlCheckBootSector.DisketteExtension->DeviceObject, FlFormat.formatParameters->StartHeadNumber, &(FloppyThread.disketteExtension->DriveMediaConstants), &(GLOBAL.DriveMediaConstants->HeadSettleTime), FloppyReadWrite.disketteExtension->IsStarted, &(FlReadWriteTrack.DisketteExtension->DriveMediaConstants), (FlReadWrite.currentSector + ((typedef(ULONG))FlReadWrite.numTransferSectors)), &(GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].CylinderShift), FlFormat.DisketteExtension->DriveMediaConstants.HeadSettleTime, &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.SectorLengthCode), &(FloppyAddDevice.disketteExtension->DeviceObject), KeInitializeEvent.Event, FloppyStartDevice.fdcInfo.MaxTransferSize, &(FlReadWriteTrack.driveMediaConstants->SectorLengthCode), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.HeadSettleTime, ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.HeadSettleTime), &(FloppyStartDevice.irpSp->Control), FlStartDrive.DisketteExtension->DriveMediaConstants.DataLength, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].ReadWriteGapLength), &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.MediaType), GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].NumberOfHeads, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.HeadLoadTime, &(GLOBAL.DriveMediaConstants[FlConsolidateMediaTypeWithBootSector.i].BytesPerSector), FlStartDrive.DisketteExtension->BiosDriveMediaConstants.SkewDelta, FlFinishOperation.DisketteExtension->MediaType, &(FlHdbit.setHdBitParameter.ChangedHdBit), FlDetermineMediaType.ddriveMediaConstants->BytesPerSector, ((unsigned long)FlDetermineMediaType.ddriveMediaConstants->BytesPerSector), FlAllocateIoBuffer.DisketteExtension, IoBuildAsynchronousFsdRequest.Buffer, FlFormat.driveMediaConstants->NumberOfHeads, ((int)FlFormat.driveMediaConstants->NumberOfHeads), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].SkewDelta), &(FlFinishOperation.DisketteExtension->DeviceObject), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MediaType), &(FlFinishOperation.DisketteExtension->ListEntry), &(GLOBAL.DriveMediaLimits[FlFormat.DisketteExtension->DriveType].HighestDriveMediaType), FlStartDrive.fdcEnableParms.TimeToWait, &(FlCheckFormatParameters.FormatParameters->EndCylinderNumber), &(FloppyThread.irpSp->Parameters), FlStartDrive.DisketteExtension->DriveMediaConstants.NumberOfHeads, FloppyThread.disketteExtension->DeviceObject, &(FlFormat.irpSp->Parameters), &(FlFormat.DisketteExtension->IoBuffer[((((int)FlFormat.whichSector) * 4) + 2)]), FlStartDrive.DisketteExtension->DriveMediaConstants.CylinderShift, &(FlFormat.DisketteExtension->IoBuffer[((((int)FlFormat.whichSector) * 4) + 1)]), &(FlFormat.DisketteExtension->IoBuffer[(((int)FlFormat.whichSector) * 4)]), FlReadWrite.DisketteExtension->MaxTransferSize, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.DataLength, (FloppyReadWrite.irpSp->Parameters.Read.ByteOffset.__annonCompField1.LowPart + FloppyReadWrite.irpSp->Parameters.Read.Length), &(FlFreeIoBuffer.DisketteExtension->IoBufferSize), &(FlFormat.DisketteExtension->IoBuffer[((((int)FlFormat.whichSector) * 4) + 3)]), FloppyThread.irp->Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation, &(FlDatarateSpecifyConfigure.DisketteExtension->DriveMediaConstants), &(FlStartDrive.DisketteExtension->DeviceObject->Vpb->Flags), &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].CylinderShift), &(GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType]), &(FloppyPower.disketteExtension->ThreadReferenceMutex), (((typedef(ULONG))FlReadWrite.numTransferSectors) + ((int)FlReadWrite.trackSector)), ((FlFormat.formatParameters->StartCylinderNumber * ((int)FlFormat.driveMediaConstants->NumberOfHeads)) + FlFormat.formatParameters->StartHeadNumber), ((unsigned char)((FlFormat.formatParameters->StartCylinderNumber * ((int)FlFormat.driveMediaConstants->NumberOfHeads)) + FlFormat.formatParameters->StartHeadNumber)), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].MaximumTrack, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].ReadWriteGapLength), FlInitializeControllerHardware.DisketteExtension->PerpendicularMode, ((int)FlInitializeControllerHardware.DisketteExtension->PerpendicularMode), GLOBAL.DriveMediaConstants->CylinderShift, FlStartDrive.DisketteExtension->DriveMediaConstants.HeadSettleTime, FloppyPower.state.SystemState, ((unsigned int)FloppyPower.state.SystemState), FlFormat.driveStatus, ((int)FlFormat.driveStatus), FloppyReadWrite.Irp->IoStatus.__annonCompField4.Status, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.FormatFillCharacter, FlFormat.badTrackBuffer, ((ptr(typedef(WCHAR)))FloppyDeviceControl.tmp___0), FloppyDeviceControl.tmp___0, GLOBAL.DriveMediaConstants->FormatFillCharacter, (1 + ((int)FlFormat.driveMediaConstants->MaximumTrack)), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].ReadWriteGapLength, FlFormat.driveMediaConstants->MaximumTrack, ((int)FlFormat.driveMediaConstants->MaximumTrack), RtlInitUnicodeString.DestinationString, &(FlDetermineMediaType.DisketteExtension->DeviceUnit), FloppyPower.type, ((unsigned int)FloppyPower.type), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].HeadLoadTime), &(FloppyStartDevice.fdcInfo.AcpiFdiSupported), FlFormat.driveMediaConstants->FormatGapLength, &(FlAcpiConfigureFloppy.biosDriveMediaConstants->HeadLoadTime), &(FlDetermineMediaType.DisketteExtension->DriveMediaConstants.HeadSettleTime), MmAllocateContiguousMemory.tmp, &(FloppyThread.outputBuffer->TracksPerCylinder), &(FlCheckFormatParameters.ddriveMediaConstants->MaximumTrack), FlConfigCallBack.biosDriveMediaConstants->StepRateHeadUnloadTime, FlFormat.formatParameters->EndHeadNumber, FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveType, ((int)FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveType), &(FloppyPower.disketteExtension->ThreadReferenceCount), FlAcpiConfigureFloppy.biosDriveMediaConstants->StepRateHeadUnloadTime, ((ptr(typedef(CHAR)))FlReadWrite.DisketteExtension->IoBuffer), FlReadWrite.DisketteExtension->IoBuffer, GLOBAL.DriveMediaConstants->MotorSettleTimeWrite, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].FormatFillCharacter), ((unsigned int)FloppyDeviceControl.uniqueId->UniqueIdLength), FloppyDeviceControl.uniqueId->UniqueIdLength, &(FlFormat.formatParameters->EndCylinderNumber), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].DataLength, &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].CylinderShift), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].SectorsPerTrack), &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.FormatFillCharacter), &(FlReadWriteTrack.DisketteExtension->DeviceUnit), FloppyPower.irpSp->Parameters.Power.Type, &(FloppyThread.disketteExtension->DeviceUnit), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlStartDrive.DisketteExtension->DriveType].HighestDriveMediaType].HeadSettleTime, &(GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MotorSettleTimeRead), &(FloppyReadWrite.disketteExtension->MediaType), FlFinishOperation.DisketteExtension->HardwareFailed, FlFormat.driveMediaConstants->HeadSettleTime, ((int)FlFormat.driveMediaConstants->HeadSettleTime), &(FloppyAddDevice.disketteExtension->ThreadReferenceMutex), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.FormatFillCharacter, ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.FormatFillCharacter), ((enum(_DRIVE_MEDIA_TYPE))(((typedef(ULONG))(((unsigned int)FloppyDeviceControl.lowestDriveMediaType) - 1)) + (FloppyDeviceControl.outputBufferLength / ((typedef(ULONG))size(typedef(DISK_GEOMETRY)))))), (((typedef(ULONG))(((unsigned int)FloppyDeviceControl.lowestDriveMediaType) - 1)) + (FloppyDeviceControl.outputBufferLength / ((typedef(ULONG))size(typedef(DISK_GEOMETRY))))), GLOBAL.DriveMediaLimits[FloppyDeviceControl.disketteExtension->DriveType].HighestDriveMediaType, FlStartDrive.DisketteExtension->BiosDriveMediaConstants.BytesPerSector, GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].MaximumTrack, FlFormat.irpSp, &(FloppyStartDevice.fdcInfo.UnitNumber), GLOBAL.DriveMediaConstants->MotorSettleTimeRead, &(FlInitializeControllerHardware.DisketteExtension->PerpendicularMode), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].DataLength), FloppyDeviceControl.queryTable.EntryContext, &(FlIssueCommand.issueCommandParms.FifoOutBuffer), FlFinishOperation.DisketteExtension->HardwareFailCount, ((int)FlFinishOperation.DisketteExtension->HardwareFailCount), &(FlDetermineMediaType.ddriveMediaConstants->MediaType), (((int)FlFinishOperation.DisketteExtension->HardwareFailCount) + 1), ((typedef(UCHAR))(((int)FlFinishOperation.DisketteExtension->HardwareFailCount) + 1)), &(GLOBAL.DriveMediaConstants->CylinderShift), ((unsigned int)FloppyReadWrite.disketteExtension->MediaType), FloppyReadWrite.disketteExtension->MediaType, FloppyAddDevice.disketteExtension->FloppyControllerAllocated, FloppyStartDevice.DeviceObject, &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.FormatFillCharacter), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MaximumTrack, &(FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.MotorOffTime), GLOBAL.pirp->IoStatus.__annonCompField4.Status, &(FlReadWrite.driveMediaConstants->SectorLengthCode), GLOBAL.DriveMediaConstants->NumberOfHeads, ((typedef(UCHAR))(((int)FloppyDeviceControl.i) + 1)), (((int)FloppyDeviceControl.i) + 1), ((int)FloppyDeviceControl.i), FloppyDeviceControl.i, FloppyAddDevice.disketteExtension->MediaType, FlQueueIrpToThread.irpSp, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].NumberOfHeads, &(FloppyReadWrite.irpSp->Parameters), FloppyAddDevice.disketteExtension->ReleaseFdcWithMotorRunning, FloppyThread.disketteExtension->DeviceUnit, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].FormatFillCharacter, &(FlFormat.DisketteExtension->DeviceUnit), &(FloppyStartDevice.fdcInfo.PeripheralNumber), FlIssueCommand.issueCommandParms.TimeOut, &(FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveMediaConstants.NumberOfHeads), &(FlAllocateIoBuffer.DisketteExtension->IoBufferMdl), GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].MotorSettleTimeRead, *IoCreateDevice.DeviceObject, FlConsolidateMediaTypeWithBootSector.DisketteExtension->DriveMediaConstants.SkewDelta, GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlConfigCallBack.driveType].HighestDriveMediaType].FormatGapLength, FloppyUnload.DriverObject, FloppyPower.Irp->IoStatus.Information, FloppyPower.disketteExtension->PoweringDown, FlAllocateIoBuffer.DisketteExtension->MaxTransferSize, &(FlFormat.DisketteExtension->DriveMediaConstants.HeadSettleTime), FloppyAddDevice.disketteExtension->ThreadReferenceCount, FloppyPnp.DeviceObject, GLOBAL.DriveMediaConstants[FlFormat.driveMediaType].SectorsPerTrack, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].ReadWriteGapLength, FlDetermineMediaType.DisketteExtension->DriveMediaConstants.CylinderShift, FlFormat.badTrackBuffer[FlFormat.numberOfBadTracks], (((int)FlDetermineMediaType.ddriveMediaConstants->NumberOfHeads) - 1), FlDetermineMediaType.ddriveMediaConstants->NumberOfHeads, ((int)FlDetermineMediaType.ddriveMediaConstants->NumberOfHeads), &(FlAcpiConfigureFloppy.biosDriveMediaConstants->MediaType), &(FlCheckFormatParameters.DisketteExtension->DriveType), &(FlFormat.irpSp->Parameters.DeviceIoControl), &(GLOBAL.DriveMediaConstants[GLOBAL.DriveMediaLimits[FlAcpiConfigureFloppy.driveType].HighestDriveMediaType].HeadLoadTime), &(FlFormat.formatExParameters->SectorNumber)[FlFormat.whichSector], ((unsigned char)&(FlFormat.formatExParameters->SectorNumber)[FlFormat.whichSector]), FloppyDeviceControl.uniqueId, GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].SectorLengthCode, ((unsigned short)GLOBAL.DriveMediaConstants[FlDetermineMediaType.DisketteExtension->DriveMediaType].SectorLengthCode), FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.MotorSettleTime, ((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.MotorSettleTime), ((int)((unsigned char)FlAcpiConfigureFloppy.FdcInfo->AcpiFdiData.MotorSettleTime)), &(FlStartDrive.fdcEnableParms.TimeToWait), &(FlRecalibrateDrive.DisketteExtension->DeviceUnit), FlDetermineMediaType.DisketteExtension->DriveMediaConstants.MotorOffTime, &(FlReadWrite.irpSp->Parameters.Read.ByteOffset.__annonCompField1.LowPart), &(FlCheckFormatParameters.ddriveMediaConstants->NumberOfHeads), FloppyProcessQueuedRequests.irpSp, &(FloppyThread.irpSp->Parameters.DeviceIoControl.OutputBufferLength), FlCheckBootSector.bootSector, ((ptr(void))FlCheckBootSector.bootSector), GLOBAL.DriveMediaConstants->MotorOffTime, &(FlStartDrive.DisketteExtension->BiosDriveMediaConstants.NumberOfHeads), &(FlFormat.DisketteExtension->DriveMediaConstants.SkewDelta), &(FloppyAddDevice.deviceObject->DeviceExtension), FloppyPnp.irpSp->CompletionRoutine, FlCheckFormatParameters.FormatParameters->MediaType, ((unsigned int)FlCheckFormatParameters.FormatParameters->MediaType), &(main.devobj), &(FloppyPnp.doneEvent), &(FlFdcDeviceIo.doneEvent), &(FloppyStartDevice.doneEvent), &(FlHdbit.setHdBitParameter), &(FloppyDeviceControl.queryTable), &(FlStartDrive.fdcDiskChangeParms), &(FlStartDrive.fdcEnableParms), &(FloppyDeviceControl.driveLetterName), &(FloppyDeviceControl.driveLetterNameBuffer), &(FloppyStartDevice.fdcInfo), &(FloppyAddDevice.deviceName), &(FloppyPnpComplete), &(FlIssueCommand.issueCommandParms), &(FlFormat.fdcDiskChangeParms), &(FloppyAddDevice.fdcInfo), &(main.d), malloc3, malloc5, malloc4, malloc2]
 [ObReferenceObjectByHandle.Handle, ZwClose.Handle, FlQueueIrpToThread.threadHandle]
 [IoCreateDevice.DeviceObject, &(FloppyAddDevice.deviceObject)]
 [FlAllocateIoBuffer.maxDmaAddress, FlAllocateIoBuffer.maxDmaAddress.QuadPart]
 [&(FloppyCancelQueuedRequest.DeviceObject->DeviceExtension), FloppyCancelQueuedRequest.DeviceObject]
 [PoCallDriver.lcontext, FloppyPnpComplete.Context, ((ptr(struct(_KEVENT)))FloppyPnpComplete.Context), KeSetEvent.Event, IofCallDriver.lcontext]
 [&(FlAllocateIoBuffer.maxDmaAddress.QuadPart), &(FlAllocateIoBuffer.maxDmaAddress)]
 [((ptr(typedef(WCHAR)))&(FloppyAddDevice.deviceNameBuffer)), RtlInitUnicodeString.SourceString, &(FloppyAddDevice.deviceNameBuffer)]
 [((ptr(char))&(FloppyAddDevice.arcNameBuffer)), RtlInitString.SourceString, &(FloppyAddDevice.arcNameBuffer)]
