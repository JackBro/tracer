 [compile_regex.ptrptr, &(pcre_compile.ptr)]
 [compile_branch.codeptr, &(compile_regex.code)]
 [pcre_compile.tmp___0, compile_regex.last_branch, &(compile_regex.last_branch[2]), &(compile_regex.last_branch[1]), ret$pcre_compile, pcre_compile.tmp_6__, find_fixedlength.code, compile_branch.code, *compile_regex.codeptr, compile_regex.tmp_3__, &(compile_regex.reverse_count[1]), find_firstchar.code, &(pcre_compile.re->top_backref), compile_regex.length, &(pcre_compile.re->tables), &(pcre_compile.re->code), ((ptr(typedef(uschar)))&(pcre_compile.re->code)), is_startline.code, (pcre_compile.code - &(pcre_compile.re->code)), &(pcre_compile.re->top_bracket), &(pcre_compile.re->req_char), (compile_regex.code - compile_regex.start_bracket), &(pcre_compile.re->options), pcre_compile.re, compile_regex.tmp_5__, compile_regex.tmp_4__, pcre_compile.code, &(pcre_compile.code[1]), compile_regex.tmp_7__, compile_regex.tmp_9__, compile_regex.reverse_count, &(pcre_compile.re->size), compile_regex.tmp_10__, is_anchored.code, (compile_regex.code - compile_regex.last_branch), &(compile_regex.code[1]), ret$pcre_malloc, compile_regex.code, compile_regex.tmp, compile_regex.tmp_1__, &(pcre_compile.re->first_char), compile_regex.start_bracket, compile_regex.tmp_8__, *compile_branch.codeptr, compile_regex.tmp_0__, &(pcre_compile.re->magic_number), compile_regex.tmp_11__, pcre_free.a, &(compile_regex.code[3]), compile_regex.tmp_2__]
 [compile_branch.cd->ctypes[compile_branch.c], pcre_compile.compile_block.ctypes[pcre_compile.c]]
 [compile_branch.countlits, &(compile_regex.branchcountlits)]
 [*compile_branch.reqchar, compile_regex.branchreqchar]
 [*compile_branch.countlits, compile_regex.branchcountlits]
 [compile_regex.ptr, &(compile_regex.ptr[1]), *compile_branch.ptrptr, *compile_regex.ptrptr, pcre_compile.pattern, (pcre_compile.pattern - 1), *pcre_compile.erroroffset, main.pattern, (pcre_compile.ptr - pcre_compile.pattern), pcre_compile.ptr, &(pcre_compile.ptr[1]), compile_branch.ptr_SLICE___0, &(compile_branch.ptr_SLICE___0[1])]
 [*compile_regex.reqchar, pcre_compile.reqchar]
 [compile_branch.brackets, compile_regex.brackets, &(pcre_compile.bracount)]
 [compile_regex.countlits, &(pcre_compile.countlits)]
 [*compile_regex.ptr, *pcre_compile.ptr, *compile_branch.ptr_SLICE___0]
 [compile_regex.reqchar, &(pcre_compile.reqchar)]
 [pcre_compile.erroroffset, main.erroroffset]
 [compile_branch.cd, compile_regex.cd, &(pcre_compile.compile_block.ctypes), &(pcre_compile.compile_block.cbits), &(compile_branch.cd->ctypes), &(pcre_compile.compile_block.lcc), &(pcre_compile.compile_block.fcc), &(pcre_compile.compile_block)]
 [compile_branch.optchanged, &(compile_regex.optchanged)]
 [*compile_regex.countlits, pcre_compile.countlits]
 [compile_branch.reqchar, &(compile_regex.branchreqchar)]
 [compile_regex.errorptr, pcre_compile.errorptr, main.errorptr, compile_branch.errorptr]
 [compile_branch.ptrptr, &(compile_regex.ptr)]
 [find_firstchar.options, is_anchored.options, &(pcre_compile.temp_options)]
 [compile_regex.codeptr, &(pcre_compile.code)]
