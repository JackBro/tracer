trans(func_main, i12,
	[p$init],[H$$],[],[SH$$],[],[],[ReturnValue,X,N,A],[],[SReturnValue,SX,SN,SA],
	[p0],[H$$],[],[SH$$],[],[],[ReturnValue,X,N,A],[],[SReturnValue,SX,SN,SA],
	[],
	[call(func___TRACER_INIT,[RV0|_],[SRV0|_],[])],
	[],
	not_branch).
trans(func_main, i1,
	[p0],[H$$],[],[SH$$],[],[],[ReturnValue,X,N,A],[],[SReturnValue,SX,SN,SA],
	[p6],[H$$],[],[SH$$],[],[],[ReturnValue,X$Next$,N$Next$,A$Next$],[],[SReturnValue,SX$Next$,SN$Next$,SA$Next$],
	[assign(SA$Next$,0),assign(SN$Next$,10),assign(SX$Next$,0)],
	[],
	[],
	not_branch) :-
	A$Next$=0,N$Next$=10,X$Next$=0.
trans(func_main, i2,
	[p6],[H$$],[],[SH$$],[],[],[ReturnValue,X,N,A],[],[SReturnValue,SX,SN,SA],
	[p7],[H$$],[],[SH$$],[],[],[ReturnValue,X$Next$,N,A],[],[SReturnValue,SX$Next$,SN,SA],
	[assign(SX$Next$,plus(SX,1))],
	[],
	[],
	not_branch) :-
	X$Next$=X+1.
trans(func_main, i3,
	[p7],[H$$],[],[SH$$],[],[],[ReturnValue,X,N,A],[],[SReturnValue,SX,SN,SA],
	[p6],[H$$],[],[SH$$],[],[],[ReturnValue,X,N,A],[],[SReturnValue,SX,SN,SA],
	[gt(SN,SX)],
	[],
	[],
	branch) :-
	X<N.
trans(func_main, i4,
	[p7],[H$$],[],[SH$$],[],[],[ReturnValue,X,N,A],[],[SReturnValue,SX,SN,SA],
	[p6],[H$$],[],[SH$$],[],[],[ReturnValue,X,N,A],[],[SReturnValue,SX,SN,SA],
	[gt(SX,SN)],
	[],
	[],
	branch) :-
	X>N.
trans(func_main, i5,
	[p7],[H$$],[],[SH$$],[],[],[ReturnValue,X,N,A],[],[SReturnValue,SX,SN,SA],
	[p8],[H$$],[],[SH$$],[],[],[ReturnValue,X,N,A],[],[SReturnValue,SX,SN,SA],
	[eq(SX,SN)],
	[],
	[],
	branch) :-
	X=N.
trans(func_main, i6,
	[p8],[H$$],[],[SH$$],[],[],[ReturnValue,X,N,A],[],[SReturnValue,SX,SN,SA],
	[p9],[H$$],[],[SH$$],[],[],[ReturnValue,X,N,A],[],[SReturnValue,SX,SN,SA],
	[],
	[],
	[],
	not_branch).
trans(func_main, i7,
	[p9],[H$$],[],[SH$$],[],[],[ReturnValue,X,N,A],[],[SReturnValue,SX,SN,SA],
	[$unsafe],[H$$],[],[SH$$],[],[],[ReturnValue,X,N,A],[],[SReturnValue,SX,SN,SA],
	[gt(SA,1)],
	[],
	[],
	branch) :-
	A>1.
trans(func_main, i8,
	[p9],[H$$],[],[SH$$],[],[],[ReturnValue,X,N,A],[],[SReturnValue,SX,SN,SA],
	[p10],[H$$],[],[SH$$],[],[],[ReturnValue,X,N,A],[],[SReturnValue,SX,SN,SA],
	[],
	[],
	[],
	not_branch).
trans(func_main, i9,
	[p10],[H$$],[],[SH$$],[],[],[ReturnValue,X,N,A],[],[SReturnValue,SX,SN,SA],
	[p11],[H$$],[],[SH$$],[],[],[ReturnValue$Next$,X,N,A],[],[SReturnValue$Next$,SX,SN,SA],
	[assign(SReturnValue$Next$,_)],
	[],
	[],
	not_branch) :-
	ReturnValue$Next$=_.
trans(func___TRACER_INIT, i10,
	[p0],[H$$],[],[SH$$],[],[],[ReturnValue],[],[SReturnValue],
	[p1],[H$$],[],[SH$$],[],[],[ReturnValue],[],[SReturnValue],
	[],
	[],
	[],
	not_branch).
trans(func___TRACER_INIT, i11,
	[p1],[H$$],[],[SH$$],[],[],[ReturnValue],[],[SReturnValue],
	[p2],[H$$],[],[SH$$],[],[],[ReturnValue$Next$],[],[SReturnValue$Next$],
	[assign(SReturnValue$Next$,_)],
	[],
	[],
	not_branch) :-
	ReturnValue$Next$=_.
%--------------------------------------------------
block(b1, func_main, [_], [_], _, nl, [i1,i6,i9,i12],  [n],[],[],[u,u,u,u]).
block(b2, func_main, [p7], [p8], _, l, [i2,i3,i4],  [n],[],[],[n,u,n,n]).
block(b3, func_main, [_], [_], _, nl, [i5],  [n],[],[],[n,n,n,n]).
block(b4, func___TRACER_INIT, [_], [_], _, nl, [i10,i11],  [n],[],[],[u]).
%--------------------------------------------------
start(func_main, [p$init]).
start(func___TRACER_INIT, [p0]).
%--------------------------------------------------
bottom(func_main, [p11]).
bottom(func___TRACER_INIT, [p2]).
%--------------------------------------------------
freshglobalarrays([SH$$]).
%--------------------------------------------------
freshglobalvars([]).
%--------------------------------------------------
freshlocalarrays(func_main,[]).
freshlocalarrays(func___TRACER_INIT,[]).
%--------------------------------------------------
freshlocalvars(func_main,[SReturnValue,SX,SN,SA]).
freshlocalvars(func___TRACER_INIT,[SReturnValue]).
%--------------------------------------------------
init_goal(func_main, [p$init], i1, [H$$],[],[SH$$],[],[],[ReturnValue,X,N,A],[],[SReturnValue,SX,SN,SA],[]).
