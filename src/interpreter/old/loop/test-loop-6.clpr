trans(func_main, i18,
	[p$init],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[p0],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[],
	[call(func___TRACER_INIT,[RV0|_],[SRV0|_],[])],
	[],
	not_branch).
trans(func_main, i1,
	[p0],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[p6],[H$$],[],[SH$$],[],[],[ReturnValue,Lock$Next$,Old,New$Next$],[],[SReturnValue,SLock$Next$,SOld,SNew$Next$],
	[assign(SLock$Next$,0),assign(SNew$Next$,plus(SOld,1))],
	[],
	[],
	not_branch) :-
	Lock$Next$=0,New$Next$=Old+1.
trans(func_main, i2,
	[p6],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[p8],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[gt(SOld,SNew)],
	[],
	[],
	branch) :-
	New<Old.
trans(func_main, i3,
	[p6],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[p8],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[gt(SNew,SOld)],
	[],
	[],
	branch) :-
	New>Old.
trans(func_main, i4,
	[p8],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[p10],[H$$],[],[SH$$],[],[],[ReturnValue,Lock$Next$,Old$Next$,New],[],[SReturnValue,SLock$Next$,SOld$Next$,SNew],
	[assign(SLock$Next$,1),assign(SOld$Next$,SNew)],
	[],
	[],
	not_branch) :-
	Lock$Next$=1,Old$Next$=New.
trans(func_main, i5,
	[p11],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[p13],[H$$],[],[SH$$],[],[],[ReturnValue,Lock$Next$,Old,New$Next$],[],[SReturnValue,SLock$Next$,SOld,SNew$Next$],
	[assign(SLock$Next$,0),assign(SNew$Next$,plus(SNew,1))],
	[],
	[],
	not_branch) :-
	Lock$Next$=0,New$Next$=New+1.
trans(func_main, i6,
	[p10],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[p11],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[gt(_,0)],
	[],
	[],
	branch) :-
	_>0.
trans(func_main, i7,
	[p10],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[p11],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[gt(0,_)],
	[],
	[],
	branch) :-
	_<0.
trans(func_main, i8,
	[p10],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[p13],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[eq(_,0)],
	[],
	[],
	branch) :-
	_=0.
trans(func_main, i9,
	[p6],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[p7],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[eq(SNew,SOld)],
	[],
	[],
	branch) :-
	New=Old.
trans(func_main, i10,
	[p13],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[p6],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[],
	[],
	[],
	not_branch).
trans(func_main, i11,
	[p7],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[p14],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[],
	[],
	[],
	not_branch).
trans(func_main, i12,
	[p14],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[p15],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[],
	[],
	[],
	not_branch).
trans(func_main, i13,
	[p15],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[$unsafe],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[eq(SLock,0)],
	[],
	[],
	branch) :-
	Lock=0.
trans(func_main, i14,
	[p15],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[p16],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[],
	[],
	[],
	not_branch).
trans(func_main, i15,
	[p16],[H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],
	[p17],[H$$],[],[SH$$],[],[],[ReturnValue$Next$,Lock,Old,New],[],[SReturnValue$Next$,SLock,SOld,SNew],
	[assign(SReturnValue$Next$,0)],
	[],
	[],
	not_branch) :-
	ReturnValue$Next$=0.
trans(func___TRACER_INIT, i16,
	[p0],[H$$],[],[SH$$],[],[],[ReturnValue],[],[SReturnValue],
	[p1],[H$$],[],[SH$$],[],[],[ReturnValue],[],[SReturnValue],
	[],
	[],
	[],
	not_branch).
trans(func___TRACER_INIT, i17,
	[p1],[H$$],[],[SH$$],[],[],[ReturnValue],[],[SReturnValue],
	[p2],[H$$],[],[SH$$],[],[],[ReturnValue$Next$],[],[SReturnValue$Next$],
	[assign(SReturnValue$Next$,_)],
	[],
	[],
	not_branch) :-
	ReturnValue$Next$=_.
%--------------------------------------------------
block(b1, func_main, [_], [_], _, nl, [i1,i11,i12,i15,i18],  [n],[],[],[u,u,u,u]).
block(b2, func_main, [p6], [p7], _, l, [i2,i3,i4,i10],  [n],[],[],[n,u,u,u]).
block(b3, func_main, [_], [_], _, nl, [i5,i6,i7],  [n],[],[],[n,u,n,u]).
block(b4, func_main, [_], [_], _, nl, [i8],  [n],[],[],[n,n,n,n]).
block(b5, func_main, [_], [_], _, nl, [i9],  [n],[],[],[n,n,n,n]).
block(b6, func___TRACER_INIT, [_], [_], _, nl, [i16,i17],  [n],[],[],[u]).
%--------------------------------------------------
start(func_main, [p$init]).
start(func___TRACER_INIT, [p0]).
%--------------------------------------------------
bottom(func_main, [p17]).
bottom(func___TRACER_INIT, [p2]).
%--------------------------------------------------
freshglobalarrays([SH$$]).
%--------------------------------------------------
freshglobalvars([]).
%--------------------------------------------------
freshlocalarrays(func_main,[]).
freshlocalarrays(func___TRACER_INIT,[]).
%--------------------------------------------------
freshlocalvars(func_main,[SReturnValue,SLock,SOld,SNew]).
freshlocalvars(func___TRACER_INIT,[SReturnValue]).
%--------------------------------------------------
init_goal(func_main, [p$init], i1, [H$$],[],[SH$$],[],[],[ReturnValue,Lock,Old,New],[],[SReturnValue,SLock,SOld,SNew],[]).
