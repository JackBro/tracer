trans(func_main, i18,
	[p$init],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[p0],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[],
	[call(func___TRACER_INIT,[RV0|_],[SRV0|_],[])],
	[],
	not_branch).
trans(func_main, i1,
	[p0],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[p5],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[],
	[],
	[],
	not_branch).
trans(func_main, i2,
	[p6],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[p7],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X$Next$],[],[SReturnValue,SI,SN,SA,SX$Next$],
	[assign(SX$Next$,1)],
	[],
	[],
	not_branch) :-
	X$Next$=1.
trans(func_main, i3,
	[p8],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[p9],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X$Next$],[],[SReturnValue,SI,SN,SA,SX$Next$],
	[assign(SX$Next$,2)],
	[],
	[],
	not_branch) :-
	X$Next$=2.
trans(func_main, i4,
	[p7],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[p9],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[],
	[],
	[],
	not_branch).
trans(func_main, i5,
	[p5],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[p6],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[gt(_,0)],
	[],
	[],
	branch) :-
	_>0.
trans(func_main, i6,
	[p5],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[p8],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[geq(0,_)],
	[],
	[],
	branch) :-
	_<=0.
trans(func_main, i7,
	[p9],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[p11],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[gt(SN,SI)],
	[],
	[],
	branch) :-
	I<N.
trans(func_main, i8,
	[p11],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[p12],[H$$],[],[SH$$],[],[],[ReturnValue,I$Next$,N,A,X],[],[SReturnValue,SI$Next$,SN,SA,SX],
	[assign(SI$Next$,plus(SI,1))],
	[],
	[],
	not_branch) :-
	I$Next$=I+1.
trans(func_main, i9,
	[p9],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[p10],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[geq(SI,SN)],
	[],
	[],
	branch) :-
	I>=N.
trans(func_main, i10,
	[p12],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[p9],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[],
	[],
	[],
	not_branch).
trans(func_main, i11,
	[p10],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[p13],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[],
	[],
	[],
	not_branch).
trans(func_main, i12,
	[p13],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[p14],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[],
	[],
	[],
	not_branch).
trans(func_main, i13,
	[p14],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[$unsafe],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[gt(SX,2)],
	[],
	[],
	branch) :-
	X>2.
trans(func_main, i14,
	[p14],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[p15],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[],
	[],
	[],
	not_branch).
trans(func_main, i15,
	[p15],[H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],
	[p16],[H$$],[],[SH$$],[],[],[ReturnValue$Next$,I,N,A,X],[],[SReturnValue$Next$,SI,SN,SA,SX],
	[assign(SReturnValue$Next$,_)],
	[],
	[],
	not_branch) :-
	ReturnValue$Next$=_.
trans(func___TRACER_INIT, i16,
	[p0],[H$$],[],[SH$$],[],[],[ReturnValue],[],[SReturnValue],
	[p1],[H$$],[],[SH$$],[],[],[ReturnValue],[],[SReturnValue],
	[],
	[],
	[],
	not_branch).
trans(func___TRACER_INIT, i17,
	[p1],[H$$],[],[SH$$],[],[],[ReturnValue],[],[SReturnValue],
	[p2],[H$$],[],[SH$$],[],[],[ReturnValue$Next$],[],[SReturnValue$Next$],
	[assign(SReturnValue$Next$,_)],
	[],
	[],
	not_branch) :-
	ReturnValue$Next$=_.
%--------------------------------------------------
block(b1, func_main, [_], [_], _, nl, [i1,i4,i11,i12,i15,i18],  [n],[],[],[u,u,n,n,u]).
block(b2, func_main, [_], [_], _, nl, [i2,i5],  [n],[],[],[n,n,n,n,u]).
block(b3, func_main, [_], [_], _, nl, [i3,i6],  [n],[],[],[n,n,n,n,u]).
block(b4, func_main, [p9], [p10], _, l, [i7,i8,i10],  [n],[],[],[n,u,n,n,n]).
block(b5, func_main, [_], [_], _, nl, [i9],  [n],[],[],[n,n,n,n,n]).
block(b6, func___TRACER_INIT, [_], [_], _, nl, [i16,i17],  [n],[],[],[u]).
%--------------------------------------------------
start(func_main, [p$init]).
start(func___TRACER_INIT, [p0]).
%--------------------------------------------------
bottom(func_main, [p16]).
bottom(func___TRACER_INIT, [p2]).
%--------------------------------------------------
freshglobalarrays([SH$$]).
%--------------------------------------------------
freshglobalvars([]).
%--------------------------------------------------
freshlocalarrays(func_main,[]).
freshlocalarrays(func___TRACER_INIT,[]).
%--------------------------------------------------
freshlocalvars(func_main,[SReturnValue,SI,SN,SA,SX]).
freshlocalvars(func___TRACER_INIT,[SReturnValue]).
%--------------------------------------------------
init_goal(func_main, [p$init], i1, [H$$],[],[SH$$],[],[],[ReturnValue,I,N,A,X],[],[SReturnValue,SI,SN,SA,SX],[]).
